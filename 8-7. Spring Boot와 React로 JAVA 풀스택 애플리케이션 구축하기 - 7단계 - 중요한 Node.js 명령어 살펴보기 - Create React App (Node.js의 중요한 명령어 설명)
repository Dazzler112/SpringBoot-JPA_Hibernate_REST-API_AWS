

Important Commands

● npm start: Runs the app in development mode
  ■ Recommendation: Use Google Chrome
● mpm test : Run unit tests
● npm run build: Build a production deployable unit 
  ■ Minified
  ■ Optimized for performance
● npm install --save react-router-dom : Add a dependency to your project

리엑트에 익숙해지려면 몇 가지 지루한 단계를 거쳐야 한다 
그 대신 Create React App이 제공하는 몇 가지 중요한 명령어를 알아보자
그리고 덧붙여 Visual Studio Code로 애플리케이션을 열고 Visual Studio Code를 사용하는 몇 가지 팁을 알려주겠다

시작해보자

● npm start: Runs the app in development mode
  ■ Recommendation: Use Google Chrome
처음으로 보이는 명령어는 npm start 이다
개발 모드에서 앱을 실행한다
지난 시간에 이미 실행시켰다

실행중이면 ctrl+c로 나가고
npm start를 다시 입력한다

--------------------------------------------------------------------------------------------

⏺ cmd 창 ==>

C:\study\frontend\todo-app>npm start

> todo-app@0.1.0 start
> react-scripts start

(node:15132) [DEP_WEBPACK_DEV_SERVER_ON_AFTER_SETUP_MIDDLEWARE] DeprecationWarning: 'onAfterSetupMiddleware' option is deprecated. Please use the 'setupMiddlewares' option.
(Use `node --trace-deprecation ...` to show where the warning was created)
(node:15132) [DEP_WEBPACK_DEV_SERVER_ON_BEFORE_SETUP_MIDDLEWARE] DeprecationWarning: 'onBeforeSetupMiddleware' option is deprecated. Please use the 'setupMiddlewares' option.
Starting the development server...
Compiled successfully!

You can now view todo-app in the browser.

  Local:            http://localhost:3000
  On Your Network:  http://172.27.0.1:3000

Note that the development build is not optimized.
To create a production build, use npm run build.

webpack compiled successfully

--------------------------------------------------------------------------------------------
이렇게 하면 개발 모드에서 애플리케이션이 실행되고 |
                                              V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000 사이트화면 ==>

(자세한것 확인 하려면 3000으로 접속...)

                                          ,5BB5w         jDBDj          
                                         zz    yE8w   DZB,   j9         
                                         9        BBj8W       zy        
                                         9         BBy        z5        
                                         9       5B  yz       8y        
                                         BW   ,,BzWWjwBzW,    z         
                                       wjBBzzy5zy,wwww,wzzjDzzByW       
                                    yEEDw Bw  Bj         Bw  B, yzZB,   
                                  yEy     w8 8y   5zzDw   9w5z     w8z  
                                 w9        y5y   85jjyzW   DD        5z 
                                 w9        y5y   85jjyzw   DD        Dz 
                                  yE5     w8 z5   yBzD,   9,yz     W9z  
                                    j9ZDW B,  By         zw  B, y9ZD    
                                       wWBBz8D5zy,wWWWwwzByz8zByW       
                                         BW     DzWwW,Bzw     z         
                                         9       yz  yB       8y        
                                         9         BBj        z5        
                                         9       ,zDW9j       zy        
                                         Bz    yE8,   5ZBw   yE         
                                          ,yBBy,         WDBDW          

                                    Edit src/App.js and save to reload.
                                                Learn React


--------------------------------------------------------------------------------------------

크롬에 애플리케이션이 띄워진다
VSC로 돌아와서 우리가 만든 프로젝트를 열어보겠다
앞서 만들었던 package.json 파일은 닫아라 이제 필요 없다
Open Folder를 눌러서 todo-app이 만들어진 폴더를 선택 ( C:\study\frontend 의 frontend 폴더선택 )

-----------------------------------------
V TODO-APP
  >📁 node_modules
  V📁🌎 public
    ⭐ favicon.ico
     5 index.html
     📄 logo192.png
     📄 logo512.png
     {} manifest.json
     🤖 robots.txt
  >📁 src
      .gitignore
    N package-lock.json
    N package.json
    i README.md



> OUTLINE
> TIMELINE
-----------------------------------------

왼쪽에 이런 폴더 구조가 나오는게 보일 것이다  
지금은 여기에 있는 게 다 무엇인지 걱정하지 말아라
우리가 봐야 할 것은 public에서 index.html이다

여기에서 간단한 변경만 해보겠다
--------------------------------------------------------------------------------------------------------

  
⏺ index.html

  
<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" href="%PUBLIC_URL%/favicon.ico" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="theme-color" content="#000000" />
    <meta
      name="description"
      content="Web site created using create-react-app"
    />
    <link rel="apple-touch-icon" href="%PUBLIC_URL%/logo192.png" />
    <!--
      manifest.json provides metadata used when your web app is installed on a
      user's mobile device or desktop. See https://developers.google.com/web/fundamentals/web-app-manifest/
    -->
    <link rel="manifest" href="%PUBLIC_URL%/manifest.json" />
    <!--
      Notice the use of %PUBLIC_URL% in the tags above.
      It will be replaced with the URL of the `public` folder during the build.
      Only files inside the `public` folder can be referenced from the HTML.

      Unlike "/favicon.ico" or "favicon.ico", "%PUBLIC_URL%/favicon.ico" will
      work correctly both with client-side routing and a non-root public URL.
      Learn how to configure a non-root public URL by running `npm run build`.
    -->

    //1: 제목이 기본적으로 React App이나 비슷한 걸로 되어있지 이걸 바꿔 보겠다 
    //할 일 애플리케이션을 만들 거니까 Todo App이라고 하고 ( <title>React App</title> => <title>Todo App</title> ) 저장한다
    <title>Todo App</title>
  </head>
  <body>
    <noscript>You need to enable JavaScript to run this app.</noscript>
    <div id="root"></div>
    <!--
      This HTML file is a template.
      If you open it directly in the browser, you will see an empty page.

      You can add webfonts, meta tags, or analytics to this file.
      The build step will place the bundled scripts into the <body> tag.

      To begin the development, run `npm start` or `yarn start`.
      To create a production bundle, use `npm run build` or `yarn build`.
    -->
  </body>
</html>

--------------------------------------------------------------------------------------------------------
그러면 변경 사항이 여기에 즉시 반영되는것이 보인다  |
                                                V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000 사이트화면 ==>

(자세한것 확인 하려면 3000으로 접속...)
(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  
                                          ,5BB5w         jDBDj          
                                         zz    yE8w   DZB,   j9         
                                         9        BBj8W       zy        
                                         9         BBy        z5        
                                         9       5B  yz       8y        
                                         BW   ,,BzWWjwBzW,    z         
                                       wjBBzzy5zy,wwww,wzzjDzzByW       
                                    yEEDw Bw  Bj         Bw  B, yzZB,   
                                  yEy     w8 8y   5zzDw   9w5z     w8z  
                                 w9        y5y   85jjyzW   DD        5z 
                                 w9        y5y   85jjyzw   DD        Dz 
                                  yE5     w8 z5   yBzD,   9,yz     W9z  
                                    j9ZDW B,  By         zw  B, y9ZD    
                                       wWBBz8D5zy,wWWWwwzByz8zByW       
                                         BW     DzWwW,Bzw     z         
                                         9       yz  yB       8y        
                                         9         BBj        z5        
                                         9       ,zDW9j       zy        
                                         Bz    yE8,   5ZBw   yE         
                                          ,yBBy,         WDBDW          

                                    Edit src/App.js and save to reload.
                                                Learn React


--------------------------------------------------------------------------------------------

이제 제목이 Todo App이라고 보인다

--------------------------------------------------------------------------------------------------------

  
⏺ index.html

  

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <link rel="icon" href="%PUBLIC_URL%/favicon.ico" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="theme-color" content="#000000" />
    <meta
      name="description"
      content="Web site created using create-react-app"
    />
    <link rel="apple-touch-icon" href="%PUBLIC_URL%/logo192.png" />
    <!--
      manifest.json provides metadata used when your web app is installed on a
      user's mobile device or desktop. See https://developers.google.com/web/fundamentals/web-app-manifest/
    -->
    <link rel="manifest" href="%PUBLIC_URL%/manifest.json" />
    <!--
      Notice the use of %PUBLIC_URL% in the tags above.
      It will be replaced with the URL of the `public` folder during the build.
      Only files inside the `public` folder can be referenced from the HTML.

      Unlike "/favicon.ico" or "favicon.ico", "%PUBLIC_URL%/favicon.ico" will
      work correctly both with client-side routing and a non-root public URL.
      Learn how to configure a non-root public URL by running `npm run build`.
    -->
        
    //2: 예를 들어 Todo App1이라고 하면 여기 제목 부분도 Todo App1이 되지
    <title>Todo App1</title>
  </head>
  <body>
    <noscript>You need to enable JavaScript to run this app.</noscript>
    <div id="root"></div>
    <!--
      This HTML file is a template.
      If you open it directly in the browser, you will see an empty page.

      You can add webfonts, meta tags, or analytics to this file.
      The build step will place the bundled scripts into the <body> tag.

      To begin the development, run `npm start` or `yarn start`.
      To create a production bundle, use `npm run build` or `yarn build`.
    -->
  </body>
</html>

--------------------------------------------------------------------------------------------------------
                                          |
                                          V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000 사이트화면 ==>

(자세한것 확인 하려면 3000으로 접속...)
(title 명)
  
Todo App1               |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  
                                          ,5BB5w         jDBDj          
                                         zz    yE8w   DZB,   j9         
                                         9        BBj8W       zy        
                                         9         BBy        z5        
                                         9       5B  yz       8y        
                                         BW   ,,BzWWjwBzW,    z         
                                       wjBBzzy5zy,wwww,wzzjDzzByW       
                                    yEEDw Bw  Bj         Bw  B, yzZB,   
                                  yEy     w8 8y   5zzDw   9w5z     w8z  
                                 w9        y5y   85jjyzW   DD        5z 
                                 w9        y5y   85jjyzw   DD        Dz 
                                  yE5     w8 z5   yBzD,   9,yz     W9z  
                                    j9ZDW B,  By         zw  B, y9ZD    
                                       wWBBz8D5zy,wWWWwwzByz8zByW       
                                         BW     DzWwW,Bzw     z         
                                         9       yz  yB       8y        
                                         9         BBj        z5        
                                         9       ,zDW9j       zy        
                                         Bz    yE8,   5ZBw   yE         
                                          ,yBBy,         WDBDW          

                                    Edit src/App.js and save to reload.
                                                Learn React


--------------------------------------------------------------------------------------------

Todo App으로 다시 바꾸면 여기 부분이 Todo App이 되는 걸 볼 수 있다
npm start로 가능한 기능 중 하나지

npm start는 애플리케이션을 개발 모드로 실행시킨다
개발을 빠르게 변경하고 브라우저에서 피드백을 볼 수 있게 해준다 
애플리케이션을 내리려면 ctrl+c를 눌러주고
여기 있는 다른 명령어를 살펴보겠다
npm start는 앱을 개발 모드에서 실행해서 변경 사항을 브라우저에서 바로 볼 수 있도록 한다

● mpm test : Run unit tests
다음은 npm test이다, Java에 Junit이 있는 것처럼 리액트의 JavaScript 코드에서도 
npm test를 활용하면 유닛 단위 테스트를 할 수 있다 

npm test라고 입력해보자

--------------------------------------------------------------------------------------------

⏺ cmd 창 ==>

  
C:\study\frontend\todo-app>npm test

> todo-app@0.1.0 test
> react-scripts test
No tests found related to files changed since last commit.
Press `a` to run all tests, or run Jest with `--watchAll`.

Watch Usage
 › Press a to run all tests.
 › Press f to run only failed tests.
 › Press q to quit watch mode.
 › Press p to filter by a filename regex pattern.
 › Press t to filter by a test name regex pattern.
 › Press Enter to trigger a test run.

--------------------------------------------------------------------------------------------

모든 테스트가 통과되는 걸 볼 수 있다,
그리고 지금은 감시 모드로 들어온게 보인다
코딩을 계속 하고 코드가 변경되면 여기로 와서 다시 엔터를 누른다

--------------------------------------------------------------------------------------------

⏺ cmd 창 ==>

  
C:\study\frontend\todo-app>npm test

> todo-app@0.1.0 test
> react-scripts test
No tests found related to files changed since last commit.
Press `a` to run all tests, or run Jest with `--watchAll`.

Watch Usage
 › Press a to run all tests.
 › Press f to run only failed tests.
 › Press q to quit watch mode.
 › Press p to filter by a filename regex pattern.
 › Press t to filter by a test name regex pattern.
 › Press Enter to trigger a test run.
No tests found related to files changed since last commit.
Press `a` to run all tests, or run Jest with `--watchAll`.

Watch Usage: Press w to show more.
No tests found related to files changed since last commit.
Press `a` to run all tests, or run Jest with `--watchAll`.

--------------------------------------------------------------------------------------------   

그러면 또 테스트를 모두 진행할 것이다  
w를 누르면 모든 명령어가 보이지

--------------------------------------------------------------------------------------------

⏺ cmd 창 ==>

  
Watch Usage
 › Press a to run all tests.
 › Press f to run only failed tests.
 › Press q to quit watch mode.
 › Press p to filter by a filename regex pattern.
 › Press t to filter by a test name regex pattern.
 › Press Enter to trigger a test run.
No tests found related to files changed since last commit.
Press `a` to run all tests, or run Jest with `--watchAll`.

Watch Usage
 › Press a to run all tests.
 › Press f to run only failed tests.
 › Press q to quit watch mode.
 › Press p to filter by a filename regex pattern.
 › Press t to filter by a test name regex pattern.
 › Press Enter to trigger a test run.
   
--------------------------------------------------------------------------------------------   
a를 누르면 모든 테스트, f를 누르면 실패 테스트만 하고, q를 누르면 감시모드가 종료된다
여기서는 그냥 끝내보겠다 q를 누른다 그러면 감시모드에 빠져나온다

npm test로 감시모드에서 유닛 테스트를 실행할 수 있고,

● npm run build: Build a production deployable unit 
  ■ Minified
  ■ Optimized for performance  
npm run build는 배포 가능 유닛을 프로덕션으로 만드는 걸 도와준다  
최소화되고 성능도 최적화된다
보통 리액트 애플리케이션은 리액트 컴포넌트 수백 개가 포함된다
이런 리액트 컴포넌트를 하나하나 따로 다운로드 받고 싶지는 않겠지
그래서 리액트 애플리케이션을 개발하면 npm run build를 한다 그러면 패키지가 만들어진다

한번 해보자

--------------------------------------------------------------------------------------------

⏺ cmd 창 ==>

  
C:\study\frontend\todo-app>npm run build

> todo-app@0.1.0 build
> react-scripts build

Creating an optimized production build...  //3: 최적화된 프로덕션 빌드를 생성하고 있는 걸 알 수 있지
  
                        | 빌드중..
                        V

One of your dependencies, babel-preset-react-app, is importing the
"@babel/plugin-proposal-private-property-in-object" package without
declaring it in its dependencies. This is currently working because
"@babel/plugin-proposal-private-property-in-object" is already in your
node_modules folder for unrelated reasons, but it may break at any time.

babel-preset-react-app is part of the create-react-app project, which
is not maintianed anymore. It is thus unlikely that this bug will
ever be fixed. Add "@babel/plugin-proposal-private-property-in-object" to
your devDependencies to work around this error. This will make this message
go away.

 //3-1: 컴파일에 성공했고 세 개 파일이 생성된 것이 보인다 
Compiled successfully.

File sizes after gzip:
                                              //3-2: 중요한 파일은 JavaScript인 js파일과 css 파일이다
  46.6 kB  build\static\js\main.04881a6b.js
  1.77 kB  build\static\js\453.ac79db8d.chunk.js
  513 B    build\static\css\main.f855e6bc.css

The project was built assuming it is hosted at /.
You can control this with the homepage field in your package.json.

The build folder is ready to be deployed.
You may serve it with a static server:

  npm install -g serve
  serve -s build

Find out more about deployment here:

  https://cra.link/deployment


C:\study\frontend\todo-app>
--------------------------------------------------------------------------------------------  


-----------------------------------------
V TODO-APP
  > 📁 node_modules
  V 📁🌎 public
      ⭐ favicon.ico
       5 index.html
       📄 logo192.png
       📄 logo512.png
       {} manifest.json
       🤖 robots.txt
  V 📁 src
      S App.css
     js App.js
     🧪 App.test.js
      S index.css
     js index.js
      ⁕ logo.svg
     js reportWebVitals.js
     js setupTests.js  
     
    .gitignore
    N package-lock.json
    N package.json
    i README.md



> OUTLINE
> TIMELINE
-----------------------------------------
이 프로젝트를 보면 파일이 아주 많을 걸 볼 수 있지
App.css, App.js, App.test.js, index.css, index.js등 많은 js 파일이 있다
하지만 마지막 프로젝트를 프로덕션으로 배포할 때는 
  46.6 kB  build\static\js\main.04881a6b.js
  1.77 kB  build\static\js\453.ac79db8d.chunk.js
  513 B    build\static\css\main.f855e6bc.css  
이 세 개 파일만 만들어진다
강의 후반부에는 여기에 아주 많은 JavaScript 파일과 컴포넌트가 추가될 것이다
그렇더라도 run build를 수행하면 세 개 파일이 만들어진다
그리고 이 애플리케이션을 실행하면 이 세 파일만으로도 애플리케이션을 프로덕션으로 배포하기 충분하다는 것을 알 수 있지
todo-app 프로젝트로 들어가보면 build라는 폴더 안에 이 파일이 생성된 걸 볼 수 있다
static에서 여기 보면 css와 js 파일들이 있다

● npm install --save react-router-dom : Add a dependency to your project
마지막으로 사용할 명령어는 npm install로 특정 종속성을 설치하는 것이다 
앞서 npm install을 사용해 jQuery를 설치했었지
그와 비슷하게 리액트 프로젝트에 종속성을 추가하고 싶으면 같은 명령어를 사용하면 된다


잠시 후 우리는 라우팅이라는 걸 할 것이다, 그 때 react-router-dom이 필요하지
npm install을 사용해서 해당 종속성을 설치하는 작업을 해볼 것이다
이 명령어들의 백그라운드에서 어떤 일이 일어나는지 모두 이해할 필요는 없다 
높은 수준에서 이해하면 충분하다, 

  
  
npm start는 개발 모드에서 애플리케이션을 실행한다
이게 우리가 강의에서 리액트 애플리케이션을 개발하면서 계속 사용할 것이다
npm test는 유닛 테스트에 사용한다 
npm run build는 배포 가능한 유닛 프로덕션을 만든다
패키지를 만들어서 프로덕션으로 배포하지
npm install은 프로젝트에 종속성을 추가하고 싶을 때 사용한다

강의를 하면서 이 명령어를 더 많이 사용해볼 것이다



다음 강의에 보겠다
