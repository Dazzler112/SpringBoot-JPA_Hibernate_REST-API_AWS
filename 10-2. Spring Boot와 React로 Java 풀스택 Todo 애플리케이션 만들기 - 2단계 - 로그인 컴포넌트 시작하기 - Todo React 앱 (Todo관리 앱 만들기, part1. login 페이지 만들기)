

Getting Started with Todo App- Components

● Starting with your TodoApp                                                       ______________________             ______________________   _______
  ■ 1: LoginComponent                                                       name: |                      | Password: |                      | | Login |
    ○ Make LoginComponent Controlled                                               ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾             ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾   ‾‾‾‾‾‾‾
      ◦ Link form fields with state                                     ________________________________________________________________________________________________________
    ○ Implement Hard-coded Authentication                                 Welcome in28Minutes!! Click here to manage your todo's
    ○ Implement Conditional Rendering
  ■ 2: WelcomeComponent                                                 ________________________________________________________________________________________________________  
    ○ Implement Routing                                                |  in28Minutes  Home  Todos                                                                       Logout |
  ■ 3: ErrorComponent                                                   ________________________________________________________________________________________________________
  ■ 4: ListTodosComponent                                              | © 20xx in28minutes All rights reserved         (검바탕 흰색컬러)                                        |
  ■ 5: Add Bootstrap & style our pages                                  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
  ■ 6: HeaderComponent                                                    Description
  ■ 7: LogoutComponent                                                    ____________________________________________________________________________________________________
                                                                         |                                                                                                    |
                                                                          ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                                                                          Target Date
                                                                          ____________________________________________________________________________________________________
                                                                         | 03/07/2024                                                                                         |
                                                                          ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                                                                          ____________
                                                                         | Add(초바탕) | 
                                                                          ‾‾‾‾‾‾‾‾‾‾‾‾
                                                                         Your todos are
                                                                           Description                 Target Date        Is it Done?
                                                                          ____________________________________________________________________________________________________
                                                                                                                                          ________________   ________________
                                                                           Default Desc                03/12/2024         false          | Upgrade(초바탕) | | Delete(주바탕) |
                                                                                                                                          ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾   ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                                                                          ____________________________________________________________________________________________________
                                                                                                                                          ________________   ________________
                                                                           Learn Angular JS            03/12/2024         false          | Upgrade(초바탕) | | Delete(주바탕) |
                                                                                                                                          ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾   ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                                                                          ____________________________________________________________________________________________________
                                                                                                                                          ________________   ________________
                                                                           Learn to Dance              03/12/2024         false          | Upgrade(초바탕) | | Delete(주바탕) |
                                                                                                                                          ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾   ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾     
                                                                                                                                   
                                                                             Add a todo       


이번 강의는 Todo 관리 앱 구축을 시작하겠다 
일단 Todo 관리 애플리케이션의 일부가 될 로그인 컴포넌트를 만드는 것으로 시작해보자

로그인 컴포넌트에는 이름과 비밀번호 입력 칸, 그리고 클릭할 수 있는 로그인 버튼이 있어야 한다
버튼을 누르면 Todo 관리 애플리케이션에 로그인이 되겠지
로그인 하면  Welcome 컴포넌트라는 곳으로 연결될 것이다
단순한 Welcome 페이지인데, Welcome in28Minutes라고 적혀 있다

이 두 가지 컴포넌트를 만들어보고 나중에 더 많은 컴포넌트를 추가해 보겠다
시작해보자


먼저 Todo 관리 애플리케이션을 위해 새로운 폴더를 생성하겠다
탐색기로 가서 지금까지 Counter와 learning-examples를 사용했지 
components 아래에 새로운 폴더를 만들겠다, 이름은 todo라고 하겠다, todo안에는 TodoApp이라는 파일을 만들 것이다
이 파일은 우리가 Todo 관리 애플리케이션을 만들기 위해 생성하는 모든 컴포넌트를 담는 컨테이너가 될 것이다
TodoApp.jsx라고 만들어주고 함수 컴포넌트를 만들겠다

-----------------------------------------------------------------------------------------------
⏺ VSC


⏺ TodoApp.jsx



//1: function TodoApp, 함수지 return해 주는데
function TodoApp() {
    return(
        //1-1: <div className은 TodoApp이라고 하자
        <div className='TodoApp'>
          //1-2: 안에는 Todo Management Application이라 적겠다, 좋다 이 TodoApp을 우리 App.js에 추가해야지//1-3: App.js로..
          Todo Management Application
        </div>
    )
}

-----------------------------------------------


⏺ App.js



import './App.css';

//1-4: 이제 사용하지 않을 것이다, 앱 컴포넌트에서 지웠다 //1-5: 다시 App()의 return 안으로.. 
// import Counter from './components/counter/Counter'; (<= 여기서만 주석처리 실제로 코드에선 삭제)

//1-6: TodoApp from './components/todo/TodoApp' 그렇지
import TodoApp from './components/todo/TodoApp'

function App() {
  return (
      <div className="App">
      //1-3: 여기로 가면 지금은 Counter가 추가되어있지, 이제 Counter는 필요 없다 주석 처리 하겠다
      //보다시피 JSX에서 한 줄을 주석으로 처리하는 문법은 매우 복잡하다 /**/는 일반적으로 주석을 처리하는 방법이다, 그런데 이걸 중괄호 안에 넣어줘야 하지, 그래야 완벽한 주석이 된다, JSX에서 한 줄을 주석 처리하는 것은 좀 까다롭다
      //그래서 그냥 이걸 지우겠다, Counter를 지운다 //1-4: import로 ..
 // {/* <Counter/> */} (<= 여기서만 주석처리 실제로 코드에선 삭제 )

    //1-5: 그리고 TodoApp이라는 컴포넌트를 추가하겠다, TodoApp을 추가했고 임포트를 해줘야지 //1-6: import로 ..
      <TodoApp />
    </div>
  )
}

// {property1: 'value1', property2: 'value2'}  <== 어떤 값을 전달하든 함수에는 이런 형태로 들어온다
/*
function PlayingWithProps(properties) {

  console.log(properties)
  console.log(properties.property1)
  console.log(properties.property2)
  return(
    <div>Props</div>
  )
} 
*/

// function PlayingWithProps({property1, property2}) {

//   console.log(property1)
//   console.log(property2)
//   return(
//     <div>Props</div>
//   )
// }

export default App;

-----------------------------------------------------------------------------------------------

그리고 고쳐야 할 게 한 가지 있지 
무엇일까??

맞다

-----------------------------------------------------------------------------------------------
⏺ VSC


⏺ TodoApp.jsx



//2: export default를 추가해야 한다, 그러면 여기 
export default function TodoApp() {
    return(
        <div className='TodoApp'>
            Todo Management Application
        </div>
    )
}
-----------------------------------------------------------------------------------------------
                                              |
                                              V
-----------------------------------------------------------------------------------------------

⏺ cmd 창>


Compiled successfully!

You can now view todo-app in the browser.

  Local:            http://localhost:3000
  On Your Network:  http://172.27.0.1:3000

Note that the development build is not optimized.
To create a production build, use npm run build.

webpack compiled successfully

-----------------------------------------------------------------------------------------------
코드가 성공적으로 컴파일 되었다

브라우저로 가보면
                                          |
                                          V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000 사이트화면 ==>

(자세한것 확인 하려면 3000으로 접속...)
(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  



                                  Todo Management Application


-------------------------------------------------------------------------------------------

Todo Management Application이라 뜨는 걸 볼 수 있지
멋지다


Todo  관리 앱을 올렸고 돌아가고 있다

이제 뭐부터 해야 할까?
로그인 컴포넌트이다
일단은 TodoApp에 모든 코드를 작성할 것이다

이 섹션을 시작하면서 우리는 Todo 컴포넌트, 웰컴 컴포넌트 , 로그인 컴포넌트를 모두 TodoApp에 작성한다
그리고 강의를 하면서 각각의 컴포넌트로 분리하겠다

TodoApp 의 첫 번째 컴포넌트를 생성해보겠다

-----------------------------------------------------------------------------------------------
⏺ VSC


⏺ TodoApp.jsx



export default function TodoApp() {
    return(
        <div className='TodoApp'>
            Todo Management Application
            //3-2: LoginComponent를 추가하고, 아주 간단하게 시작해보는 것이다
            <LoginComponent />
        </div>
    )
}

//3: TodoApp의 첫 번째 컴포넌트를 생성해보겠다 , 여기에 바로 로그인 컴포넌트를 생성하곘다,
//LoginComponent지, 이건 함수 컴포넌트이다 JSX를 return 하겠지
function LoginComponent() {
    return (
        //3-1: div를 만들고 className은 뭘로 줄까? Login이라고 하고 만들어주고 Login Component라고 쓰겠다, 좋다
        //Todo 관리 앱의 일부로 로그인 컴포넌트를 애플리케이션에 추가해야겠네//3-2: TodoApp() 안의 return으로...
        <div className='Login'>
            Login Component
        </div>
    )
}
-----------------------------------------------------------------------------------------------
                                          |
                                          V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000 사이트화면 ==>

(자세한것 확인 하려면 3000으로 접속...)
(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  



                                  Todo Management Application
                                        Login Component


-------------------------------------------------------------------------------------------

Todo 관리 애플리케이션 안에 로그인 컴포넌트가 보이게 만들었다
이제 TodoApp.jsx 여기 여러 개의 컴포넌트가 있는 거지

그럼 Welcome 컴포넌트도 만들어 보겠다

-----------------------------------------------------------------------------------------------
⏺ VSC


⏺ TodoApp.jsx




export default function TodoApp() {
    return(
        <div className='TodoApp'>
            Todo Management Application
            <LoginComponent />

            //4-3: Todo 관리 애플리케이션에 작은 구조가 생기는 셈이다
            <WelcomeComponent />
        </div>
    )
}

function LoginComponent() {
    return (
        <div className='Login'>
            Login Component
        </div>
    )
}

//4: 로그인 컴포넌트를 복사해서 웰컴 컴포넌트를 추가하곘다 className을 추가해야지, 여긴 WelcomeComponent고 
function WelcomeComponent() {
    return (
        //4-1: className은 Welcome이라고 하겠다
        <div className='Welcome'>
            //4-2: 여기 WelcomeComponent가 있고 이제 WelcomeComponent를 추가해야지 //4-3: TodoApp()의 return으로..
            Welcome Component
        </div>
    )
}
-----------------------------------------------------------------------------------------------
                                          |
                                          V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000 사이트화면 ==>

(자세한것 확인 하려면 3000으로 접속...)
(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  



                                  Todo Management Application
                                        Login Component
                                       Welcome Component


-------------------------------------------------------------------------------------------

여기 모두 보이지


그럼 이제 어떤 플로우를 구현해야 할까?
입력을 해야지
사용자 이름과 비밀번호를 로그인 컴포넌트에 입력해야 한다 
그리고 올바른 인증 정보를 입력하면 웰컴 컴포넌트로 연결하고 싶다

-----------------------------------------------------------------------------------------------
⏺ VSC


⏺ TodoApp.jsx




export default function TodoApp() {
    return(
        <div className='TodoApp'>
            Todo Management Application
            <LoginComponent />

            //5: 일단 웰컴 컴포넌트는 주석 처리하겠다, 웰컴 컴포넌트는 주석처리하고 지금은 로그인 컴포넌트에 집중하겠다
            {/* <WelcomeComponent /> */}
        </div>
    )
}

function LoginComponent() {
    return (
        <div className='Login'>
            Login Component
        </div>
    )
}

function WelcomeComponent() {
    return (
        <div className='Welcome'>
            Welcome Component
        </div>
    )
}

-----------------------------------------------------------------------------------------------
그리고 여기로 들어가면                      |
                                          V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000 사이트화면 ==>

(자세한것 확인 하려면 3000으로 접속...)
(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  



                                  Todo Management Application
                                        Login Component


-------------------------------------------------------------------------------------------

로그인 컴포넌트만 보이겠지

이제 작은 로그인 컴포넌트를 만드는 데 집중해보자
로그인 컴포넌트에는 뭐가 있어야 하지?

-----------------------------------------------------------------------------------------------
⏺ VSC


⏺ TodoApp.jsx



export default function TodoApp() {
    return(
        <div className='TodoApp'>
            Todo Management Application
            <LoginComponent />
            {/* <WelcomeComponent /> */}
        </div>
    )
}

function LoginComponent() {
    return (
        <div className='Login'>
            //6: 보통은 사용자 이름과 비밀번호, 그리고 버튼이 있지, 여기에 추가해보자
            //<div className은 LoginForm이라고 하고 여기에는 일단 사용자 이름을 넣는 칸이 있어야겠다
            <div className='LoginForm'>
                //6-1: <div></div> 인에 라벨을 추가하겠다, 
                <div>
                    //6-2: label이다 label은 User Name이라고 하겠다, 칸이 있어야지
                    <label>User Name</label>

                    //6-3: 입력 칸이 될 텐데 input type은 사용자 이름이니까 text로 하겠다, text 칸에서 입력을 받고 이름을 줄 수 있다 name은 username이라고 하겠다
                    //JSX를 사용하니까 여기에 닫는 태그를 넣어줘야 한다
                    <input type="text"/>

                //6-4: 추가로 비밀번호 칸도 넣어줘야 한다, 비밀번호 칸을 위한 또 다른 div를 만들겠다
                <div>
                    //6-5: 이건 Password가 되겠지, username과 password가 생겼교
                    <label>Password</label>
                    //6-6: 여기도 name이 password지, type도 password라고 해준다 그러면 두 개는 다 됐다
                    <input type="password" name="password"/>
                </div>
                </div>
            </div>
            button
        </div>
    )
}

function WelcomeComponent() {
    return (
        <div className='Welcome'>
            Welcome Component
        </div>
    )
}

-----------------------------------------------------------------------------------------------

-----------------------------------------------------------------------------------------------
⏺ VSC


⏺ TodoApp.jsx



export default function TodoApp() {
    return(
        <div className='TodoApp'>
            Todo Management Application
            <LoginComponent />
            {/* <WelcomeComponent /> */}
        </div>
    )
}

function LoginComponent() {
    return (
        <div className='Login'>
            <div className='LoginForm'>
                <div>
                    <label>User Name</label>
                    <input type="text" name="username"/>
                </div>
                <div>
                    <label>Password</label>
                    <input type="password" name="password"/>
                </div>

              //7: 여기 버튼도 있어야지 또 div를 만들겠다, div 안에 버튼을 만든다
                <div>
                  //7-1: type을 butoon이라 하고 name은 login이라고 하겠다 슬래시도 붙여준다
                    <button type="button" name="login" />
                </div>            
            </div>
        </div>
    )
}

function WelcomeComponent() {
    return (
        <div className='Welcome'>
            Welcome Component
        </div>
    )
}

-----------------------------------------------------------------------------------------------

로그인 컴포넌트의 기본적인 구조가 만들어졌다, 그렇지?
가보자
                                          |
                                          V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000 사이트화면 ==>

(자세한것 확인 하려면 3000으로 접속...)
(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  



                                  Todo Management Application
                                            _________________
                                  User Name|                 |
                                            ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                                           __________________
                                  Password|                  |
                                           ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                                              ____
                                             |    |  
                                              ‾‾‾‾

-------------------------------------------------------------------------------------------

Todo 관리 애플리케이션에 사용자 이름과 비밀번호가 있다
버튼은 지금 보이지 않는다
좋다

-----------------------------------------------------------------------------------------------
⏺ VSC


⏺ TodoApp.jsx




export default function TodoApp() {
    return(
        <div className='TodoApp'>
            Todo Management Application
            <LoginComponent />
            {/* <WelcomeComponent /> */}
        </div>
    )
}

function LoginComponent() {
    return (
        <div className='Login'>
            <div className='LoginForm'>
                <div>
                    <label>User Name</label>
                    <input type="text" name="username"/>
                </div>
                <div>
                    <label>Password</label>
                    <input type="password" name="password"/>
                </div>
                <div>
                    //8: 여기서 닫는 태그를 지우고, 별도의 닫는 태그를 만들어 그 사이에 login이라고 적겠다
                    <button type="button" name="login">login</button>
                </div>
            </div>
        </div>
    )
}

function WelcomeComponent() {
    return (
        <div className='Welcome'>
            Welcome Component
        </div>
    )
}

-----------------------------------------------------------------------------------------------

어떻게 됐지?
                                          |
                                          V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000 사이트화면 ==>

(자세한것 확인 하려면 3000으로 접속...)
(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  



                                  Todo Management Application
                                            _________________
                                  User Name|                 |
                                            ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                                           __________________
                                  Password|                  |
                                           ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                                              _______
                                             | login |  
                                              ‾‾‾‾‾‾‾

-------------------------------------------------------------------------------------------

그래
사용자 이름과 비밀번호, 로그인이 여기에 있다







이번 학습엔 Todo 애플리케이션을 시작해보았다

로그인 컴포넌트에 두 개 입력 칸을 만들고 버튼을 만들어 기능을 추가할 수 있게 만들었다
이제 이 컴포넌트에 기능을 추가할 수 있지 
다음 강의에 보겠다
