

이번 시간에는 패스 매개변수가 무엇인지, 왜 REST API에서 중요한지 알아보겠다
그리고 패스 매개변수를 활용해 간단한 Hello World REST API를 실행해보자

REST API URL을 보면 
/users/사용자_ID/todos/사용자_ID와 같은 모습일 것이다 ( /users/{id}/todos/{id} )
todo ID가 101이라고 하면 /users/1/todos/101과 같은 형태일 수 있겠지  ( /users/{id}/todos/{id  =>  /users/1/todos/101 )
이게 특정 사용자의 특정 todo에 접근하는 URL이다, 이런 URL안에 있는 값들이 변수이다 (/1/ 이부분)
두 번째 사용자를 위한 todo로 바꾸려면 이 부분을 2로 바꾸고 뒤의 부분도 필요에 따라서 200으로 바꿔줘야 한다 ( /users/2/todos/200 )
여기 이 변수들을 Path parameter(패스 매개변수)라고 한다 (/200 이 부분)
REST APU URL에는 패스 매개변수가 있다 

이번 시간에는 패스 매개변수를 허용하는 간단한 URL을 빌드해 보겠다

name이라는 패스 변수로 Hello World URL을 생성할 것이다 ( /hello-world/path-variable/{name} )
helloWorldBean() 메소드를 복사하겠다 

---------------------------------------------------------------------------------------------------------------------------------------



⏺ HelloWorldController 클래스파일



package com.in28minutes.rest.webservices.restfulwebservices.helloworld;

import org.springframework.web.bind.annotation.*;

//REST API
@RestController
public class HelloWorldController {


	@GetMapping(path = "/hello-world")
	public String helloWorld() {
		return "Hello World";
	}
	
	@GetMapping(path = "/hello-world-bean")
	public HelloWorldBean helloWorldBean() {
		return new HelloWorldBean("Hello World");
	}
	
	// Path Parameters
	// /users/{id}/todos/{id} => /users/1/todos/101
  // /hello-world/path-variable/{name}
  // /hello-world/path-variable/Ranga

  //1: URL은 hello-world/path-variable/<= 여기에 변수를 넣어야겠지? hello-world와 path-variable은 상수고, 그 뒤에 name이라는 변수를 넣는다 변수임을 알려주기 위해 중괄호를 넣는 것이다 {name}
  //메서드 이름도 helloWorldPathVariable로 바꾼다, 이제 누가 이 URL에 요청을 보낸다고 해보자 /hello-world/path-variable/Ranga라고 해보자 이제 이 변수 안의 값을 확인해야 한다
  @GetMapping(path = "/hello-world-bean")

  //1-1: @PathVariable이라는 걸 활용하면 할 수 있다 임포트 하면 org.springframework.web.bind.annotation.PathVariable이 임포트됐다 이 안에서 이름을 지정한다, String name이다 위의 {name}과 동일하게 해줘야 한다
  //이제 /hello-world/path-variable/Ranga를 입력하면 Spring MVC가 Ranga를 이안에 있는@PathVariable의 name에 매핑한다,
	public HelloWorldBean helloWorldPathVariable(@PathVariable String name) {
		  //1-2:  그러면 + name을 해도 되고 String.format을 사용해도 된다 뭘 넣냐면 "Hello World "를 복사해서 1번 자리에 넣는다 그 뒤에 %s를 입력하고 그리고 2번째 자리에 name을 넣는다 아래의 + name은 지우겠다 ( return new HelloWorldBean("Hello World " + name); 삭제)
      //이렇게 String.format을 추가하고 그 안에 있는 name을 대체했다 브라우저로 가서 
		return new HelloWorldBean(String.format("Hello World, %s", name));
	}
}

---------------------------------------------------------------------------------------------------------------------------------------
http://localhost:8080/hello-world/path-variable/Ranga 를 입력하면                            |
                                                                                            V
---------------------------------------------------------------------------------------------------------------------------------------

🌎 http://localhost:8080/hello-world/path-variable/Ranga 사이트 화면 ==>


{
"message": "Hello World, Ranga"
}

---------------------------------------------------------------------------------------------------------------------------------------
Hello World, Ranga가 나온다,

이번에는 Ravi라고 치면
              |
              V
---------------------------------------------------------------------------------------------------------------------------------------

🌎 http://localhost:8080/hello-world/path-variable/Ravi 사이트 화면 ==>


{
"message": "Hello World, Ravi"
}

---------------------------------------------------------------------------------------------------------------------------------------
Hello World, Ravi가 나온다

localhost:8080/hello-world/path-variable/Ravi 이 뒷부분에 입력한 값이 패스 변수에 매핑되는 거고, 값이 확인되면 반환되는 것이다,







앞으로 더 많은 REST API를 빌드하다 보면 패스 매개변수에 대한 이해가 얼마나 중요한지 알게 될 것이다
패스 매개변수는 URL에 있는 변수값이고, 이 경우에는 2와 200이 패스 매개변수지 /users/2/todos/200
( /hello-world/path-variable/Ranga ) Ranga도 마찬가지고, 그리고 패스 매개변수값을 확인하기 위해 @PathVariable이라는 어노테이션을 쓴다
