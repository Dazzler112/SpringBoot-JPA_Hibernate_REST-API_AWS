

-------------------------------------------------------------------------------------------
(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  


                                    Authenticated Successfully
                                               _________________
                                  User Name:  |in28minutes      | 
                                               ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                                              __________________
                                  Password:  |●●●●●             |
                                              ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                                              _______
                                             | login |  
                                              ‾‾‾‾‾‾‾

-------------------------------------------------------------------------------------------
  Elements  ⚛ Component  >>                                                       🔅  ⁞  x
            ‾‾‾‾‾‾‾‾‾‾‾
-------------------------------------------------------------------------------------------
  ↖  |  🔍  Search (text or /regex/)                                               |  🔅
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
  ▼ App
    ▼ TodoApp
        LoginComponent
          SuccessMessageComponent
          ErrorMessageComponent


LoginComponent                    ⏱  👁  🐞  <>
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
props
new entry : ""
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
hooks                                      🧪  ㅁ
  1️⃣State(username): "in28minutes"
  2️⃣State(password): "dummy"
  3️⃣State(showSuccessMessage): true            ☑
  4️⃣State(showErrorMessage): false             ㅁ
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
rendered by
  TodoApp
  App
  createRoot()
  react-dom@18.3.1
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
source                                         ㅁ
  bundle.js:140
-------------------------------------
-------------------------------------------------------------------------------------------


지난 시간에는 로그인 컴포넌트에서 사용자가 올바른 인증 정보를 입력하는지 아닌지에 따라 인증 메시지가 뜨도록 만들었다
너도 봤겠지만 우리는 조금 복잡한 접근 방식을 택했다
우리가 작성하는 코드를 모두 이해했으면 하는 바람에 약간 복잡한 방식을 취했다
이걸 더 간단하게 하는 방법도 있다

여기에 간단한 요구 사항을 처리하는 두 개의 분리된 컴포넌트를 만들었지
---------------------------------------------
    function SuccessMessageComponent () {
    
      if(showSuccessMessage) {
          return <div className="successMessage">Authenticated Successfully</div>
      } 
      return null
    
    }
    
    function ErrorMessageComponent () {
    
        if(showErrorMessage) {
            return <div className="errorMessage">Authentication Failed. Please check your credentials.</div>
        } 
        return null
      
      }
---------------------------------------------
일반적으로 컴포넌트를 많이 만드는 게 좋지만 
강사 생각에 이 성공 컴포넌트와 에러 컴포넌트는 각자 별도의 컴포넌트로 존재하기에는 너무 작다고 한다
그럼 어떻게 이걸 없앨까?

여기와 여기 쓴 논리를 어떻게 직접 쓸 수 있을까?
SuccessMessageComponent 대신 여기에 작성한 이 논리를
---------------------------------------------
      if(showSuccessMessage) {
          return <div className="successMessage">Authenticated Successfully</div>
      } 
      return null
    
    }
---------------------------------------------
                                |
                                V
---------------------------------------------
    return (
        <div className='Login'>
            <SuccessMessageComponent />
            <ErrorMessageComponent />
            <div className='LoginForm'>
                <div>
                    <label>User Name:</label>
                    <input type="text" name="username" value={username} onChange={handleUsernameChange} />
                </div>
                <div>
                    <label>Password:</label>
                    <input type="password" name="password" value={password} onChange={handlePasswordChange}/>
                </div>
                <div>
                    <button type="button" name="login" onClick={handleSubmit}>login</button>
                </div>
            </div>
        </div>
    )
---------------------------------------------
직접 여기에 쓰는 방법이 있을까?


이해를 돕기 위해 JavaScript 콘솔로 가보겠다 그럼 콘솔로 가보겠다
콘솔로 와서 간단한 표현식을 입력하겠다 

--------------------------------------------------------------------------------------------

🌎 http://localhost:3000 사이트화면 ==>

(자세한것 확인 하려면 3000으로 접속...)
(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  


                                    Authenticated Successfully
                                               _________________
                                  User Name:  |in28minutes      | 
                                               ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                                              __________________
                                  Password:  |●●●●●             |
                                              ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                                              _______
                                             | login |  
                                              ‾‾‾‾‾‾‾

-------------------------------------------------------------------------------------------
  Elements  Console  Sources Network  Performance      >>                       🔅  ⁞  x
            ‾‾‾‾‾‾‾
-------------------------------------------------------------------------------------------
  //1: true && 'Ranga'라는 문자열이다 , true와 Ranga지 결과가 어떻지?
 > true && 'Ranga'
 <• 'Ranga'
  //1-1: Ranga지
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
  //1-2: false && 'Ranga'는 결과가 어떨까?
  > false && 'Ranga'
  <• false
  //1-3: false가 출력된다 신기하지?
-------------------------------------------------------------------------------------------

만약 true가 있고, true를 값으로 가지고 
그 뒤에 무언가 있으면 AND 연산자를 했을 때 텍스트를 반환하지
첫 번째 인수가 true이고 두 번째 인수가 어떤 값이면 
AND 연산자를 적용했을 때 첫 번째가 true면 그 값을 반환하는 것이다

첫 번째 인수가 false면 값을 반환하지 않고 false를 반환한다
그럼 이걸 JSX 표현식에도 적용할 수 있을까?


showSuccessMessage가 true일 때만 이걸 반환하고 싶다
비슷하게 할 수 있을까?

-----------------------------------------------------------------------------------------------
⏺ VSC


⏺ TodoApp.jsx



import { useState } from 'react'
import './TodoApp.css'

export default function TodoApp() {
    return(
        <div className='TodoApp'>
            <LoginComponent />
            {/* <WelcomeComponent /> */}
        </div>
    )
}

function LoginComponent() {

    const [username, setUsername] = useState('in28minutes')
    const [password, setPassword] = useState('')
    const [showSuccessMessage, setShowSuccessMessage] = useState(false)  
    const [showErrorMessage, setShowErrorMessage] = useState(false)

    function handleUsernameChange(event) {
        setUsername(event.target.value);
    }

    function handlePasswordChange(event) {
        setPassword(event.target.value);
    }

    function handleSubmit() {

        if(username === 'in28minutes' && password === 'dummy') {
            console.log('Success');
            setShowSuccessMessage(true)
            setShowErrorMessage(false)
        }else {
            console.log('Failed');
            setShowSuccessMessage(false)
            setShowErrorMessage(true)
        }
    }

    function SuccessMessageComponent () {
    
      if(showSuccessMessage) {
          return <div className="successMessage">Authenticated Successfully</div>
      } 
      return null
    
    }
    
    function ErrorMessageComponent () {
    
        if(showErrorMessage) {
            return <div className="errorMessage">Authentication Failed. Please check your credentials.</div>
        } 
        return null
      
      }

    return (
        <div className='Login'>

            //2: 여기 이렇게 showSuccessMessage하고 AND 연산자 &&를 입력하고 여기 ( <div className="errorMessage">Authentication Failed. Please check your credentials.</div> ) 이걸 복사해서
            //붙여 넣기 하겠다 showSuccessMessage가 true일 때만 이 div를 보여주고 싶다

            //2-1: 여기 <SuccessMessageComponent/>는 삭제하고 저장하겠다
       //     <SuccessMessageComponent /> (❗<= 여기서만 주석처리 실제 코드에선 삭제❗)
            <ErrorMessageComponent />
            <div className='LoginForm'>
                <div>
                    <label>User Name:</label>
                    <input type="text" name="username" value={username} onChange={handleUsernameChange} />
                </div>
                <div>
                    <label>Password:</label>
                    <input type="password" name="password" value={password} onChange={handlePasswordChange}/>
                </div>
                <div>
                    <button type="button" name="login" onClick={handleSubmit}>login</button>
                </div>
            </div>
        </div>
    )
}


function WelcomeComponent() {
    return (
        <div className='Welcome'>
            Welcome Component
        </div>
    )
}

-----------------------------------------------------------------------------------------------

잘 되는지 보겠다                           |
페이지를 새로 고침 하면                     V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000 사이트화면 ==>

(자세한것 확인 하려면 3000으로 접속...)
(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  


                                    
                                               _________________
                                  User Name:  |in28minutes      | 
                                               ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                                              __________________
                                  Password:  |                  |
                                              ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                                              _______
                                             | login |  
                                              ‾‾‾‾‾‾‾

-------------------------------------------------------------------------------------------
  Elements  Console  Sources Network  Performance      >>                       🔅  ⁞  x
            ‾‾‾‾‾‾‾
-------------------------------------------------------------------------------------------

-------------------------------------------------------------------------------------------

성공 메시지가 보이지 않지


dummy를 입력하고 로그인을 클릭하면
                                            |
                                            V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000 사이트화면 ==>

(자세한것 확인 하려면 3000으로 접속...)
(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  


                                    Authenticated Successfully
                                               _________________
                                  User Name:  |in28minutes      | 
                                               ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                                              __________________
                                  Password:  |●●●●●             |
                                              ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                                              _______
                                             | login |  
                                              ‾‾‾‾‾‾‾

-------------------------------------------------------------------------------------------
  Elements  Console  Sources Network  Performance      >>                       🔅  ⁞  x
            ‾‾‾‾‾‾‾
-------------------------------------------------------------------------------------------
  Success                                                                   TodoApp.jsx:31
-------------------------------------------------------------------------------------------

인증을 성공했다는 메시지가 보인다



