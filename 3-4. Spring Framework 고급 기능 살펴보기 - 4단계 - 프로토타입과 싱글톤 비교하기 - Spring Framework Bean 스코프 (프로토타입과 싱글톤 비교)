

Prototype vs Singleton Bean Scope

Heading                        Prototype                                                     Singleton
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
Instance                       Possibly Many per Spring IOC Container                        One per Spring IOC Container
-------------------------------------------------------------------------------------------------------------------------------------------------------------
Beans                          New bean instance created every time the                      Same bean instance reused
                               bean is referred to
-------------------------------------------------------------------------------------------------------------------------------------------------------------
default                        NOT Default                                                   Default
-------------------------------------------------------------------------------------------------------------------------------------------------------------
Code Snippet                   @Scope(value=                                                 @Scope(value=
                               ConfigurableBeanFactory.SCOPE_PROTOTYPE)                      ConfigurableBeanFactory.SCOPE_SINGLETON)
                                                                                             OR Default
-------------------------------------------------------------------------------------------------------------------------------------------------------------
Usage                          Rarely used                                                   Very frequently used
-------------------------------------------------------------------------------------------------------------------------------------------------------------
Recommended Scenario           Stateful beans                                                Stateless beans
-------------------------------------------------------------------------------------------------------------------------------------------------------------
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ

프로토타입과 싱글톤 Bean 스코프의 차이에 대해 알아보자

● Instance
프로토타입에 생성되는 인스턴스는 얼마나 될까?
- Prototype
Possibly Many per Spring IOC Container
Spring IoC 컨테이너 하나당 여러 개가 될 수 있다
많은 인스턴스를 요청할 경우, Bean에 여러 번 요청을 보내면 Spring IoC 컨테이너는 많은 인스턴스를 생성해 반환한다

- Singleton
One per Spring IOC Container
싱글톤의 경우 Spring IoC 컨테이너 하나당 인스턴스는 하나이다


● Beans
- Prototype
New bean instance created every time the bean is referred to
프로토타입에선 Bean을 참조할 때마다 새로운 Bean 인스턴스가 생긴다 

- Singleton
Same bean instance reused
하지만 싱글톤에서는 같은 Bean 인스턴스를 다시 사용한다


● default 
- Prototype
NOT Default

- Singleton
Default

기본값은 싱글톤이다 스코프를 지정하지 않는다면 싱글톤 스코프를 사용한다


● Code Snippet
- Prototype
@Scope(value=ConfigurableBeanFactory.SCOPE_PROTOTYPE)
프로토타입 코드는 이렇다 @Scope(value=ConfigurableBeanFactory.SCOPE_PROTOTYPE) 이다 Spring 프로토타입이다

- Singleton
@Scope(value=ConfigurableBeanFactory.SCOPE_SINGLETON)OR Default
이것이 싱글톤 스코프인데 @Scope(value=ConfigurableBeanFactory.SCOPE_SINGLETON) 이거나 기본값이다
스코프 어노테이션이 없다면 기본값은 싱글톤 Bean 스코프가 되겠다


● Usage 
사용 빈도는 어떻게 될까?
- Prototype
Rarely used
프로토타입은 아주 드물게 사용된다

- Singleton
Very frequently used
대부분의 Bean, 99.99%의 Spring Bean에선 싱글톤을 사용한다 
싱글톤은 매우 자주 사용된다


● Recommended Scenario
어떤 시나리오에서 권장될까?
- Prototype
Stateful beans
스테이트풀 Bean을 사용하려고 할 경우, 사용자 정보가 유지되는 Bean을 만들려고 한다면 애플리케이션 전체에서 Bean을 사용할 수는 없고
사용자마다 Bean을 별도로 생성해야 한다 이때 프로토타입 Bean을 생성하는 것이다

-  Singleton
Stateless beans
반면 스테이트리스 Bean을 생성하려 하는 경우, 사용자 정보가 없거나, 일반적이여서 
애플리케이션 전체에서 사용할 수 있다면 인스턴스를 하나만 만들어 애플리케이션 전체에서 사용할 수 있다







이번 학습에선 프로토타입과 싱글톤 Bean 스코프의 차이를 살펴봤다 
