

이번 단계에선 애플리케이션에 삭제 기능을 추가해보겠다

--------------------------------------------------------------------------------------------

🌎 http://localhost:3000/todos 사이트화면 ==>

(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾ 

          in28minutes  Home Todos                                      Login   Logout
     _____________________________________________________________________________________

                                 Things You Want To Do!
                                      
                 ID	   Description	                   is Done?     	 Target Date
                ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                  1	    Get AWS Certified	             false         Sat Jul 05 2036
                ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                  2	    Learn DevOps		               false         Sat Jul 05 2036
                ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                  3	    Learn Full Stack Development	 false         Sat Jul 05 2036
                ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾

--------------------------------------------------------------------------------------------
  Elements  Console  Sources Network  Performance      >>                       🔅  ⁞  x
            ‾‾‾‾‾‾‾
-------------------------------------------------------------------------------------------
▶ (3) [{…}, {…}, {…}]                                              ListTodosComponent.jsx:25 
  0  : {id: 1, username: 'in28minutes', description: 'Get AWS Certified', targetDate: '2034-07-28', done: false}
  1: {id: 2, username: 'in28minutes', description: 'Learn DevOps', targetDate: '2035-07-28', done: false}
  2: {id: 3, username: 'in28minutes', description: 'Learn Full Stack Development', targetDate: '2036-07-28', done: false}
  length: 3
  [[Prototype]]: Array(0)
 ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
▶ (3) [{…}, {…}, {…}]                                              ListTodosComponent.jsx:25 
  0  : {id: 1, username: 'in28minutes', description: 'Get AWS Certified', targetDate: '2034-07-28', done: false}
  1: {id: 2, username: 'in28minutes', description: 'Learn DevOps', targetDate: '2035-07-28', done: false}
  2: {id: 3, username: 'in28minutes', description: 'Learn Full Stack Development', targetDate: '2036-07-28', done: false}
  length: 3
  [[Prototype]]: Array(0)
-------------------------------------------------------------------------------------------

지금 여기 ID, Description, is Done?, Target Date가 있는데 
우린 특정한 Todo를 삭제하기를 원한다
그럼 시작해 보겠다

그럼 VSC로 가보자
ListTodosComponent로 가서

----------------------------------------------------------------------------------------------------------------------

⏺ vsc


⏺ ListTodosComponent.jsx



import { useEffect, useState } from "react"
import { retrieveAllTodosForUsername } from "./api/TodoApiService"

function ListTodosComponent() {

    const today = new Date()

    const targetDate = new Date(today.getFullYear() + 12, today.getMonth(), today.getDay())

    const [todos, setTodos] = useState([])

    useEffect( () => refreshTodos() , [] )

    function refreshTodos() {
    retrieveAllTodosForUsername('in28minutes')
        .then(response => {
            setTodos(response.data)
            }
        )
        .catch(error => console.log(error))
    }    

    return (
        <div className='container'>
            <h1>Things You Want To Do!</h1>
            <div>
                <table className='table'>
                    <thead>
                        <tr>

                          //1: Todo의 ID는 별로 중요하지 않지, 사용자들은 그걸 유심히 보지 않는다 그럼 이걸 삭제하고, ID를 삭제할 거고 아래의 <td>도 //1-1: 아래 <td>부분으로...
                       //     <td>ID</td> (<= 여기서만 주석 처리 실제 코드는 삭제..)

                        //1-2: 여기서 <td>를 사용했는데 <th>를 사용하는 게 좋을 것이다, 그럼 <th> 를 서보자 (<td>에서 <th>로..)
                        //헤더에서 이렇게 <th>를 쓰는 게 좋고, 이걸 저장하면 이제
                            <th>Description</th>
                            <th>is Done?</th>
                            <th>Target Date</th>
                        </tr>
                    </thead>
                    <tbody>
                        {
                            todos.map(
                                todo => (
                                    <tr key={todo.id}>

                                      //1-1: 이 하단의 <td>도 삭제 되었다 //1-2: 다시 위로..
                                   //     <td>{todo.id}</td> (<= 여기서만 주석 처리 실제 코드는 삭제..)
                                        <td>{todo.description}</td>
                                        <td>{todo.done.toString()}</td>
                                        {/* <td>{todo.targetDate.toDateString()}</td> */}
                                        <td>{todo.targetDate.toString()}</td>
                                   </tr>
                                )
                            )
                        }
                    </tbody>
                </table>
            </div>
        </div>
    )
}

export default ListTodosComponent
----------------------------------------------------------------------------------------------------------------------
                                          |
                                          V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000/todos 사이트화면 ==>

(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾ 

          in28minutes  Home Todos                                      Login   Logout
     _____________________________________________________________________________________

                                      Things You Want To Do!
                                      
                         Description	                is Done?     	  Target Date      (<= 이 부분이 굵은 글씨로 바뀜)
                ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                      Get AWS Certified	               false        Sat Jul 05 2036    
                ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                         Learn DevOps		               false        Sat Jul 05 2036     
                ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                  Learn Full Stack Development	       false        Sat Jul 05 2036     
                ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾

--------------------------------------------------------------------------------------------
  Elements  Console  Sources Network  Performance      >>                       🔅  ⁞  x
            ‾‾‾‾‾‾‾
-------------------------------------------------------------------------------------------

-------------------------------------------------------------------------------------------

헤더가 굵은 글씨로 표시된 게 보일 것이다
좋고 


이제 우리는 삭제 버튼을 추가하려고 한다 

----------------------------------------------------------------------------------------------------------------------

⏺ vsc


⏺ ListTodosComponent.jsx




import { useEffect, useState } from "react"
import { retrieveAllTodosForUsername } from "./api/TodoApiService"

function ListTodosComponent() {

    const today = new Date()

    const targetDate = new Date(today.getFullYear() + 12, today.getMonth(), today.getDay())

    const [todos, setTodos] = useState([])

    useEffect( () => refreshTodos() , [] )

    function refreshTodos() {
    retrieveAllTodosForUsername('in28minutes')
        .then(response => {
            setTodos(response.data)
            }
        )
        .catch(error => console.log(error))
    }    

    return (
        <div className='container'>
            <h1>Things You Want To Do!</h1>
            <div>
                <table className='table'>
                    <thead>
                        <tr>
                            <th>Description</th>
                            <th>is Done?</th>
                            <th>Target Date</th>

                            //2: 그럼 <th>라고 하고 Delete라고 적어주자 //2-1: 아래로..
                            <th>Delete</th>
                        </tr>
                    </thead>
                    <tbody>
                        {
                            todos.map(
                                todo => (
                                    <tr key={todo.id}>
                                        <td>{todo.description}</td>
                                        <td>{todo.done.toString()}</td>
                                        {/* <td>{todo.targetDate.toDateString()}</td> */}
                                        <td>{todo.targetDate.toString()}</td>

                                        //2-1: 그리고 여기에 버튼을 추가하려고 한다, <td> 라고 하고 우리는 
                                        //<button 이라고 하고 className="btn btn-warning">이라고 닫는 태그를 넣고 Delete라고 넣어주자, 실제로 어떻게 되는지 볼까?
                                        <td> <button className="btn btn-warning">Delete</button> </td>
                                   </tr>
                                )
                            )
                        }
                    </tbody>
                </table>
            </div>
        </div>
    )
}

export default ListTodosComponent
----------------------------------------------------------------------------------------------------------------------
                                         |
                                         V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000/todos 사이트화면 ==>

(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾ 

          in28minutes  Home Todos                                               Login   Logout
     _____________________________________________________________________________________________

                                        Things You Want To Do!
                                      
                     Description	               is Done?     	 Target Date       Delete
             ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                                                                                  ________
                   Get AWS Certified	            false        Sat Jul 05 2036   | Delete |  (<= 노란색 버튼으로 생김)
                                                                                  ‾‾‾‾‾‾‾‾                                                                           
             ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                                                                                  ________
                     Learn DevOps		              false        Sat Jul 05 2036   | Delete |  (<= 노란색 버튼으로 생김) 
                                                                                  ‾‾‾‾‾‾‾‾  
             ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                                                                                  ________
               Learn Full Stack Development	      false        Sat Jul 05 2036   | Delete |  (<= 노란색 버튼으로 생김)
                                                                                  ‾‾‾‾‾‾‾‾
             ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾

--------------------------------------------------------------------------------------------
  Elements  Console  Sources Network  Performance      >>                       🔅  ⁞  x
            ‾‾‾‾‾‾‾
-------------------------------------------------------------------------------------------

-------------------------------------------------------------------------------------------

그럼 모든 행에 Delete 버튼이 생긴 걸 볼 수 있다
이걸 클릭하면 우린 Delete API를 호출하려고 하지, 그럼 먼저 

----------------------------------------------------------------------------------------------------------------------

⏺ vsc


⏺ ListTodosComponent.jsx



import { useEffect, useState } from "react"
import { retrieveAllTodosForUsername } from "./api/TodoApiService"

function ListTodosComponent() {

    const today = new Date()

    const targetDate = new Date(today.getFullYear() + 12, today.getMonth(), today.getDay())

    const [todos, setTodos] = useState([])

    useEffect( () => refreshTodos() , [] )

    function refreshTodos() {
    retrieveAllTodosForUsername('in28minutes')
        .then(response => {
            setTodos(response.data)
            }
        )
        .catch(error => console.log(error))
    }    

    //3-1: 그리고 이제 Todo를 삭제해보자, 그럼 여기서 function deleteTodo()라고 하고 
    function deleteTodo() {
      //3-2: console.log('clicked')라고 해서 deleteTodo를 호출한다 이걸 저장해보자
      console.log('clicked');
    }

    return (
        <div className='container'>
            <h1>Things You Want To Do!</h1>
            <div>
                <table className='table'>
                    <thead>
                        <tr>
                            <th>Description</th>
                            <th>is Done?</th>
                            <th>Target Date</th>
                            <th>Delete</th>
                        </tr>
                    </thead>
                    <tbody>
                        {
                            todos.map(
                                todo => (
                                    <tr key={todo.id}>
                                        <td>{todo.description}</td>
                                        <td>{todo.done.toString()}</td>
                                        {/* <td>{todo.targetDate.toDateString()}</td> */}
                                        <td>{todo.targetDate.toString()}</td>

                                        //3: 우리는 onClick이라고 하고 ={deleteTodo}라고 해서 메서드를 호출할 것이다, 그리고 이제 Todo를 삭제해보자//3-1: return 위로 가서 작성..
                                        <td> <button className="btn btn-warning" onClick={deleteTodo}>Delete</button> </td>
                                   </tr>
                                )
                            )
                        }
                    </tbody>
                </table>
            </div>
        </div>
    )
}

export default ListTodosComponent
----------------------------------------------------------------------------------------------------------------------

Delete를 클릭해보자
                                        |
                                        V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000/todos 사이트화면 ==>

(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾ 

          in28minutes  Home Todos                                               Login   Logout
     _____________________________________________________________________________________________

                                        Things You Want To Do!
                                      
                     Description	               is Done?     	 Target Date       Delete
             ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                                                                                  ________
                   Get AWS Certified	            false        Sat Jul 05 2036   | Delete |  
                                                                                  ‾‾‾‾‾‾‾‾                                                                           
             ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                                                                                  ________
                     Learn DevOps		              false        Sat Jul 05 2036   | Delete | 
                                                                                  ‾‾‾‾‾‾‾‾  
             ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                                                                                  ________
               Learn Full Stack Development	      false        Sat Jul 05 2036   | Delete |  
                                                                                  ‾‾‾‾‾‾‾‾
             ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾

--------------------------------------------------------------------------------------------
  Elements  Console  Sources Network  Performance      >>                       🔅  ⁞  x
            ‾‾‾‾‾‾‾
-------------------------------------------------------------------------------------------
  (3) clicked                                                   ListTodosComponent.jsx:24 
-------------------------------------------------------------------------------------------

셋 다 클릭했다
좋다 
하지만 여기서 어떤 Delete를 클릭했는지가 중요하지, 니가 ID 1을 클릭했는지 ID 2 혹은 ID 3를 클릭했는지 말이다
그걸 어떻게 알까?


----------------------------------------------------------------------------------------------------------------------

⏺ vsc


⏺ ListTodosComponent.jsx



import { useEffect, useState } from "react"
import { retrieveAllTodosForUsername } from "./api/TodoApiService"

function ListTodosComponent() {

    const today = new Date()

    const targetDate = new Date(today.getFullYear() + 12, today.getMonth(), today.getDay())

    const [todos, setTodos] = useState([])

    useEffect( () => refreshTodos() , [] )

    function refreshTodos() {
    retrieveAllTodosForUsername('in28minutes')
        .then(response => {
            setTodos(response.data)
            }
        )
        .catch(error => console.log(error))
    }    

    //4: 여기 들어간 id가 필요하지 (deleteTodo()에 id를 넣어줌..) 이렇게 id가 들어갔으면 너는 아마 'click' + id 라고 해줄 수 있겠지
    //이 특정한 id가 클릭되었다고 말이지//4-1: return 부분의 <td>부분으로.. 
    function deleteTodo(id) {
        console.log('clicked ' + id);
    }

    return (
        <div className='container'>
            <h1>Things You Want To Do!</h1>
            <div>
                <table className='table'>
                    <thead>
                        <tr>
                            <th>Description</th>
                            <th>is Done?</th>
                            <th>Target Date</th>
                            <th>Delete</th>
                        </tr>
                    </thead>
                    <tbody>
                        {
                            todos.map(
                                todo => (
                                    <tr key={todo.id}>
                                        <td>{todo.description}</td>
                                        <td>{todo.done.toString()}</td>
                                        {/* <td>{todo.targetDate.toDateString()}</td> */}
                                        <td>{todo.targetDate.toString()}</td>

                                        //4-1: 여기에 어떻게 id를 넣어줄 수 있을까? 그럼 여기 삭제 메서드에서 우리는 id를 넣으려고 한다, 어떻게 하면 id를 넣을 수 있을까?
                                        //우리는 화살표 함수를 사용해야 한다, 그럼 인수가 없는 메서드라면 너는 그걸 여기서 직접 매핑할 수 있지, 하지만 니가 인수를 넣으려 한다면 어떨까? 
                                        <td> <button className="btn btn-warning" 
                                                      onClick={deleteTodo}>Delete</button> </td>
                                   </tr>
                                )
                            )
                        }
                    </tbody>
                </table>
            </div>
        </div>
    )
}

export default ListTodosComponent
----------------------------------------------------------------------------------------------------------------------

만일 너가 예를 들어 todo.id같은 걸 넣으려고 한다면
이게 우리가 원하는 것이지
우리는 deleteTodo()를 호출하고 {todo.id}를 넣으려고 한다
<td> <button className="btn btn-warning" onClick={deleteTodo({todo.id})}>Delete</button> </td>
deleteTodo({todo.id}) 이런걸 하려고 한다면 화살표 함수를 사용해야 하지
그럼 먼저 실제로 이걸 화살표 함수로 만들어 보자

