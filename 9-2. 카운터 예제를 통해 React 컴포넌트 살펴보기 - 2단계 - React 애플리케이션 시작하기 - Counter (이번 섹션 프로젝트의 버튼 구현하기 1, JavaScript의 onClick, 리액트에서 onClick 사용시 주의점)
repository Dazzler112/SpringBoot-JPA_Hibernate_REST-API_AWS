

Digging Deeper into Components - Counter
                                                                                ______     ______
● Parts of a Component                                                         (  +1  )   (  -1  )
  ■ View (JSX or JavaScript)                                                    ‾‾‾‾‾‾     ‾‾‾‾‾‾
  ■ Logic (JavaScript)                                                          ______     ______
  ■ Styling (CSS)                                                              (  +2  )   (  -2  )
  ■ State (Internal Data Store)                                                 ‾‾‾‾‾‾     ‾‾‾‾‾‾
  ■ Props (Pass Data)                                                           ______     ______
● Let's learn more about each of these building another simple example         (  +5  )   (  -5  )
  ■ A Counter App                                                               ‾‾‾‾‾‾     ‾‾‾‾‾‾
● Let's take a hands-on step by step approach                                           0
                                                                                   ____________   
                                                                                  (   Reset    ) 
                                                                                   ‾‾‾‾‾‾‾‾‾‾‾‾


이번 학습에선 카운터 애플리케이션에 필요한 컴포넌트를 생성해볼 것이다


src폴더로 가서 component폴더로 가겠다, 우리는 컴포넌트를 생성할 거니까
그러니 이 폴더에 Counter 컴포넌트를 만들어야겠지 Component폴더를 클릭하면 보는 것처럼
이렇게 폴더 이름에 밑줄이 생긴다,
폴더를 우클릭하고 새폴더를 선택한 다음 'counter'라는 폴더를 만들겠다
카운터 애플리케이션과 관련된 컴포넌트는 모두 이 폴더에 추가할 거다, 
우클릭하고 새파일을 선택해 Counter.jsx

여기서 늘 그랬던 것처럼 함수형 컴포넌트를 만들 것이다

-----------------------------------------------------------------------------------------------
⏺ VSC


⏺ Counter.jsx


//1: function Counter() 함수니까 괄호를 붙여야겠지, 중괄호를 추가하고 
//1-3: 그런 다음 함수 앞에 export default를 붙여 내보내겠다, 다 된 것 같다
export default function Counter() {
    //1-1: 안에서 빈 div 요소를 반환하겠다, 
    return(
    //1-2: div요소를 추가하고 className을 'Counter'로 지정하겠다, 그리고 div 컨텐츠에 '카운터'라는 문구를 넣겠다//1-3:function Counter()로..
    <div className='Counter'>Counter</div>
    )
}

-----------------------------------------------------------------------------------------------

이제 App.js로 가보겠다..
우린 App.js에서 Counter 컴포넌트를 사용할 것이다  

-----------------------------------------------------------------------------------------------
⏺ VSC


⏺ Counter.jsx


import './App.css';
//2-1: 임포트도 바꿔준다 ( import Counter from './components/counter/Counter'; ), 그럼 어떻게 나오는지 확인해보자
import Counter from './components/counter/Counter';

function App() {
  return (
      <div className="App">
    //2: 여기서 Counter를 임포트해 Counter 컴포넌트를 사용할 것이다, LearningComponent를 Counter로 바꾸겠다 (<LearningComponent />에서 <Counter /> 로..)
     <Counter />
    </div>
  )
}

export default App;
-----------------------------------------------------------------------------------------------
                                                |
                                                V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000 사이트화면 ==>

(자세한것 확인 하려면 3000으로 접속...)
(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  



                                           Counter


--------------------------------------------------------------------------------------------

좋다
이렇게 '카운터'가 나온다
이제 Counter 안에 카운트 숫자를 표시하기 위한 요소를 추가해야 한다


-----------------------------------------------------------------------------------------------
⏺ VSC


⏺ Counter.jsx



export default function Counter() {
    return(
    <div className='Counter'>
    //3: 이제 Counter안에 카운트 숫자를 표시하기 위한 요소를 추가해야 한다 그래서 
    //div 안에 span 요소를 넣고 클래스 이름을 'counter'로 지정한 다음, 이 안에서 숫자를 표시할 것이다, 일단 지금은 0으로 표시하겠다
        <span className='count'>0</span>
    
    //3-1: 밑에는 버튼을 추가할 것이다, 버튼의 클래스 이름은 'counterButton'으로 하겠다 그리고 일단 지금 증가(increment)버튼만 추가하겠다, 어떻게 나오는지 보자
        <button className="counterButton"></button>
    </div>
    )
}
-----------------------------------------------------------------------------------------------
                                                |
                                                V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000 사이트화면 ==>

(자세한것 확인 하려면 3000으로 접속...)
(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  


                                          ___________
                                        0| increment |
                                          ‾‾‾‾‾‾‾‾‾‾‾

--------------------------------------------------------------------------------------------

이렇게 숫자 0 옆에 증가 버튼이 나온다


이제 여기서 ( <button className="counterButton">increment</button> )
증가 버튼을 클릭했을 때 특정 메서드가 호출되도록 만들것이다
어떻게 하면 될까?

-----------------------------------------------------------------------------------------------
⏺ VSC


⏺ Counter.jsx



export default function Counter() {

    //4: 이안에 메서드를 추가해 보겠다, 함수 안에 또 다른 함수를 추가할 수 있다, 이름은 'incrementCounterFunction()'으로 하겠다, 중괄호를 열고 닫은 다음
    function incrementCounterFunction() {
      //4-1: 안에서 console.log()로 '증가 버튼 클릭됨 (increment clicked)'을 출력하겠다
      console.log('increment clicked')
    }

    return(
    <div className='Counter'>
        <span className='count'>0</span>
        <button className="counterButton">increment</button>
    </div>
    )
}

-----------------------------------------------------------------------------------------------

이제 
이 <button className="counterButton">increment</button> 버튼이 클릭됐을 때 이 메서드가 호출되도록 만들 것이다
어떻게 해야 할까?

-----------------------------------------------------------------------------------------------
⏺ VSC


⏺ Counter.jsx



export default function Counter() {

    function incrementCounterFunction() {
        console.log('increment clicked')
    }
    

    return(
    <div className='Counter'>
        <span className='count'>0</span>
          //5: 버튼에 onClick 프로퍼티를 추가하면 된다, onCLick 프로퍼티의 값을 'incrementCounterFunction'으로 지정하고 복사해 넣겠다, 이렇게 하면 될까?
        <button className="counterButton" onClick="incrementCounterFunction">increment</button>
    </div>
    )
}

-----------------------------------------------------------------------------------------------

클릭하기 전에 먼저
화면을 우클릭해 검사(Inspect)로 콘솔을 열면
                                                |
                                                V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000 사이트화면 ==>

(자세한것 확인 하려면 3000으로 접속...)
(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  


                                          ___________
                                        0| increment |
                                          ‾‾‾‾‾‾‾‾‾‾‾

-------------------------------------------------------------------------------------------
  Elements  Console  Sources Network  Performance      >>                       🔅  ⁞  x
            ‾‾‾‾‾‾‾
-------------------------------------------------------------------------------------------
  Download the React DevTools for a better development experience:         react refresh:6 
  https://reactjs.org/link/react-devtools
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾ 
--------------------------------------------------------------------------------------------
(버튼 클릭 중)
아무것도 나오지 않는다
이 방법은 틀렸다 


그럼 이번에는 
함수 형태로 호출하면 되는지 보자

-----------------------------------------------------------------------------------------------
⏺ VSC


⏺ Counter.jsx



export default function Counter() {

    function incrementCounterFunction() {
        console.log('increment clicked')
    }
    

    return(
    <div className='Counter'>
        <span className='count'>0</span>
        //6: 함수 형태로 호출하기 위해 함수 이름 뒤에 이렇게 소괄호를 붙였다
        <button className="counterButton" onClick="incrementCounterFunction()">increment</button>
    </div>
    )
}
-----------------------------------------------------------------------------------------------
이러면 될까?
                                                |
                                                V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000 사이트화면 ==>

(자세한것 확인 하려면 3000으로 접속...)
(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  


                                          ___________
                                        0| increment |
                                          ‾‾‾‾‾‾‾‾‾‾‾

-------------------------------------------------------------------------------------------
  Elements  Console  Sources Network  Performance      >>                       🔅  ⁞  x
            ‾‾‾‾‾‾‾
-------------------------------------------------------------------------------------------
  Download the React DevTools for a better development experience:         react refresh:6 
  https://reactjs.org/link/react-devtools
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾ 
  ❌ Warning: Expected `onClick` listener to be a function,     react-dom.development.js:86 
    instead got a value of `string` type.
         at button
         at div
         at Counter
         at div
         at App
--------------------------------------------------------------------------------------------

안된다, onClick 리스너에 문자열 값이 아니라 함수 타입을 넣어야 한다는 메시지가 나온다

사실은 괄호가 있을 때나 없을 때나 모두 같은 오류 메시지가 나온다,
보는 것처럼 onClick에는 문자열값이 아니라 함수 타입을 넣어야 한다는 메시지가 나온다,( Expected `onClick` listener to be a function, instead got a value of `string` type. )
뭔가 잘못됐다


-----------------------------------------------------------------------------------------------
⏺ VSC


⏺ Counter.jsx



export default function Counter() {

    function incrementCounterFunction() {
        console.log('increment clicked')
    }
    

    return(
    <div className='Counter'>
        <span className='count'>0</span>
        //7: 여기에 넣어야 하는 값은 함수이다, 그럼 이번에는 함수 이름을 중괄호로 감싸서 넣어보겠다
        <button className="counterButton" onClick="{incrementCounterFunction}">increment</button>
    </div>
    )
}

-----------------------------------------------------------------------------------------------

이렇게 해보겠다
                                                |
                                                V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000 사이트화면 ==>

(자세한것 확인 하려면 3000으로 접속...)
(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  


                                          ___________
                                        0| increment |
                                          ‾‾‾‾‾‾‾‾‾‾‾

-------------------------------------------------------------------------------------------
  Elements  Console  Sources Network  Performance      >>                       🔅  ⁞  x
            ‾‾‾‾‾‾‾
-------------------------------------------------------------------------------------------
  Download the React DevTools for a better development experience:         react refresh:6 
  https://reactjs.org/link/react-devtools
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾ 
  ❌ Warning: Expected `onClick` listener to be a function,     react-dom.development.js:86 
    instead got a value of `string` type.
         at button
         at div
         at Counter
         at div
         at App
--------------------------------------------------------------------------------------------

이제 경고 메시지를 지우고 새로고침하면 
같은 오류 메시지가 나온다, 
