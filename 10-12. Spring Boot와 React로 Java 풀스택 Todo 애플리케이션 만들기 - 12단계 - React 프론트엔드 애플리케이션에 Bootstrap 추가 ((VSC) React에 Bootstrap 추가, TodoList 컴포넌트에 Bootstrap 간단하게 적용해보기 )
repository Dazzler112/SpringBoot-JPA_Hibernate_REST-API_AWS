

이제 우리에게 필요한 컴포넌트 대부분의 첫 번째 버전이 완성되었다 
이제 전체 페이지 스타일에 집중해보자

--------------------------------------------------------------------------------------------

🌎 http://localhost:3000/logout 사이트화면 ==>

(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  

                                        Header
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                                  You are logged out!
                                      
                      Thank you for using our App. Come back soon!
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                                        Footer

-------------------------------------------------------------------------------------------

괜찮은 헤더가 있었으면 좋겠다
바닥글도 괜찮아야 하지

--------------------------------------------------------------------------------------------

🌎 http://localhost:3000/todos 사이트화면 ==>

(자세한것 확인 하려면 3000으로 접속...)
(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  

                                        Header
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                                 Things You Want To Do!
                                      
ID	Description	            is Done?     	 Target Date
1	  Learn AWS		             false        Sat Jul 05 2036
2	  Learn Full Stack Dev		 false        Sat Jul 05 2036
3	  Learn DevOps		         false        Sat Jul 05 2036
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                                        Footer

-------------------------------------------------------------------------------------------

TodoList도 예쁘게 보였으면 좋겠다
그렇게 하기 위해 우리는 Bootstrap이라는 프레임워크를 추가할 것이다

명령프롬프트로 가서
ctrl+c로 실행중인 애플리케이션을 종료하고
npm install bootstrap이라고 하겠다

-----------------------------------------------------------------------------------------------

⏺ cmd창 >


C:\study\frontend\todo-app>npm install bootstrap
- (<=인스톨 로딩중)

added 2 packages, and audited 1548 packages in 7s

264 packages are looking for funding
  run `npm fund` for details

9 vulnerabilities (2 moderate, 7 high)

To address issues that do not require attention, run:
  npm audit fix

To address all issues (including breaking changes), run:
  npm audit fix --force

Run `npm audit` for details.

C:\study\frontend\todo-app>
-----------------------------------------------------------------------------------------------

Bootstrap 프레임워크가 추가되었다


이제 VSC로 가서 package.json을 보면

-----------------------------------------------------------------------------------------------
⏺ VSC


⏺ package.json



  "dependencies": {
    "@testing-library/jest-dom": "^5.17.0",
    "@testing-library/react": "^13.4.0",
    "@testing-library/user-event": "^13.5.0",
    "bootstrap": "^5.3.3",       //<== 여기 bootstrap이 보이지
    "react": "^18.3.1",
    "react-dom": "^18.3.1",
    "react-router-dom": "^6.24.1",
    "react-scripts": "5.0.1",
    "web-vitals": "^2.1.4"
  },

-----------------------------------------------------------------------------------------------

node_modules로 가서 여기 스크롤을 내려보면 있을 것이다

-----------------------------------------
V TODO-APP
  V 📁 node_modules
    ...
   V 📁 bootstrap
    V 📁 dist
     V 📁 css
      ...
      > # bootstrap.min.css
      ...
     > 📁 js
    > 📁 js
    > 📁 scss
      📜 LICENSE
      N package.json
      i README.md
    ...
  V 📁🌎 public
      ⭐ favicon.ico
       5 index.html
       📄 logo192.png
       📄 logo512.png
       {} manifest.json
       🤖 robots.txt
  > 📁 src    
    .gitignore
    N package-lock.json
    N package.json
    i README.md



> OUTLINE
> TIMELINE
-----------------------------------------

여기 bootstrap이 있지 
bootstrap 밑에는 dist, css로 들어갈 수 있다
그리고 지금 사용할 것은 여기 bootstrap.min.css이다
너가 연결할 것이 바로 bootstrap.min.css 이것이다
# bootstrap.min.css를 오른쪽 클릭하고 copy path(경로 복사) 하겠다
하지만 애플리케이션 전반에 걸쳐 Bootstrap을 사용할 수 있어야 한다

그래서 index.js에 추가하려는 것이다
index.js를 열겠다 루트 폴더에 있다
index.js에 bootstrap css를 추가할 것이다
C:/study/frontend/todo-app/node_modules/bootstrap/dist/css/bootstrap.min.css 이게 bootstrap.css 전체 경로지 
이 경로에서 node_moduels까지 전부 지우겠다
/bootstrap/dist/css/bootstrap.min.css 이게 bootstrap.css 이걸 지우면 이제 상대 경로가 된다
-----------------------------------------------------------------------------------------------
⏺ VSC


⏺ index.js



import React from 'react';
import ReactDOM from 'react-dom/client';
import './index.css';
import App from './App';
import reportWebVitals from './reportWebVitals';

//1: 임포트 하겠다, 저장하고
import '\bootstrap\dist\css\bootstrap.min.css 이게 bootstrap.css';

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);

// If you want to start measuring performance in your app, pass a function
// to log results (for example: reportWebVitals(console.log))
// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals
reportWebVitals();

-----------------------------------------------------------------------------------------------

좋다

브라우저로 가서 새로 고침 하면

--------------------------------------------------------------------------------------------

🌎 http://localhost:3000/todos 사이트화면 ==>

(자세한것 확인 하려면 3000으로 접속...)
(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  


          📄
          사이트에 연결할 수 없음localhost에서 연결을 거부했습니다.
          다음 방법을 시도해 보세요.
          
          연결 확인
          프록시 및 방화벽 확인
          ERR_CONNECTION_REFUSED

         _________                                   _________
        ( 새로고침 )                                 ( 세부정보 )
         ‾‾‾‾‾‾‾‾‾                                   ‾‾‾‾‾‾‾‾‾

-------------------------------------------------------------------------------------------

이런, 안 뜬다
왜지?
ctrl+c로 애플리케이션을 죽였지
다시 npm start로 애플리케이션을 실행해야 겠지?, npm start로 애플리케이션을 실행한다
잠시만 기다리면 애플리케이션이 올라오지

--------------------------------------------------------------------------------------------

🌎 http://localhost:3000 사이트화면 ==>

(자세한것 확인 하려면 3000으로 접속...)
(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  


Compiled with problems:

ERROR in ./src/index.js 9:0-64
Module not found: Error: Can't resolve 'ootstrapdistcssootstrap.min.css 이게 bootstrap.css' 
in 'C:\study\frontend\todo-app\src'

-------------------------------------------------------------------------------------------

모듈을 찾을 수 없다는 오류다

임포트를 하려하는데 src 디렉토리 밖이라고 한다

-----------------------------------------------------------------------------------------------
⏺ VSC


⏺ index.js



import React from 'react';
import ReactDOM from 'react-dom/client';
import './index.css';
import App from './App';
import reportWebVitals from './reportWebVitals';

//2: /bootstrap/이 부분에 앞에 /를 추가한 게 문제이다 이 슬래시를 지우고 저장하겠다
import 'bootstrap/dist/css/bootstrap.min.css 이게 bootstrap.css';

const root = ReactDOM.createRoot(document.getElementById('root'));
root.render(
  <React.StrictMode>
    <App />
  </React.StrictMode>
);

// If you want to start measuring performance in your app, pass a function
// to log results (for example: reportWebVitals(console.log))
// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals
reportWebVitals();

-----------------------------------------------------------------------------------------------

페이지를 새로고침하고 이제 로그인 페이지로 가서 
in28minutes , dummy 로그인
                                            |
                                            V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000/login 사이트화면 ==>

(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  

                                            Header
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  
                                           Time to Login!  

                                               _________________
                                  User Name:  |in28minutes      | 
                                               ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                                              __________________
                                  Password:  |●●●●●             |
                                              ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                                              _______
                                             | login |  
                                              ‾‾‾‾‾‾‾
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                                            Footer


-------------------------------------------------------------------------------------------
                                                |
                                                V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000/welcome/in28minutes 사이트화면 ==>

(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  

                                            Header
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾ 
                                   Welcome in28minutes 
                                      
                                Manage Your todos - Go here
                                                    ‾‾‾‾‾‾‾
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                                            Footer



-------------------------------------------------------------------------------------------

Go here를 클릭하겠다
                                      |
                                      V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000/todos 사이트화면 ==>

(자세한것 확인 하려면 3000으로 접속...)
(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  

                                        Header
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                                 Things You Want To Do!
                                      
ID	Description	            is Done?     	 Target Date
1	  Learn AWS		             false        Sat Jul 05 2036
2	  Learn Full Stack Dev		 false        Sat Jul 05 2036
3	  Learn DevOps		         false        Sat Jul 05 2036
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                                        Footer

-------------------------------------------------------------------------------------------

전체 플로우가 이렇게 된다
이제 코드에 Bootstrap을 사용해보자

일단 페이지 하나부터 스타일을 적용해보겠다

TodoList 컴포넌트부터 시작해 보겠다
TodoApp.jsx로 가서 ListTodosComponent를 찾아가서

-----------------------------------------------------------------------------------------------
⏺ VSC


⏺ TodoApp.jsx



import { useState } from 'react'
import {BrowserRouter, Routes, Route, useNavigate, useParams, Link} from 'react-router-dom'
import './TodoApp.css'

export default function TodoApp() {
    return(
        <div className='TodoApp'>
            <HeaderComponent />
            <BrowserRouter>
                <Routes>
                    <Route path='/' element={<LoginComponent />} />
                    <Route path='/login' element={<LoginComponent />} />
                    <Route path='/welcome/:username' element={<WelcomeComponent />} />
                    <Route path='/todos' element={<ListTodosComponent />} />
                    <Route path='/logout' element={<LogoutComponent />} />
                    <Route path='*' element={<ErrorComponent />} />
                </Routes>
            </BrowserRouter>
            <FooterComponent />
        </div>
    )
}

function LoginComponent() {

    const [username, setUsername] = useState('in28minutes')
    const [password, setPassword] = useState('')
    const [showSuccessMessage, setShowSuccessMessage] = useState(false)  
    const [showErrorMessage, setShowErrorMessage] = useState(false)
    const navigate = useNavigate();

    function handleUsernameChange(event) {
        setUsername(event.target.value);
    }

    function handlePasswordChange(event) {
        setPassword(event.target.value);
    }

    function handleSubmit() {

        if(username === 'in28minutes' && password === 'dummy') {
            console.log('Success');
            setShowSuccessMessage(true)
            setShowErrorMessage(false)
            navigate(`/welcome/${username}`)
        }else {
            console.log('Failed');
            setShowSuccessMessage(false)
            setShowErrorMessage(true)
        }
    }
    
    return (
        <div className='Login'>
            <h1>Time to Login!</h1>
            {showSuccessMessage && <div className="errorMessage">Authentication Failed. Please check your credentials.</div>}
            {showErrorMessage && <div className="errorMessage">Authentication Failed. 
                                                        Please check your credentials.</div>}
            <div className='LoginForm'>
                <div>
                    <label>User Name:</label>
                    <input type="text" name="username" value={username} onChange={handleUsernameChange} />
                </div>
                <div>
                    <label>Password:</label>
                    <input type="password" name="password" value={password} onChange={handlePasswordChange}/>
                </div>
                <div>
                    <button type="button" name="login" onClick={handleSubmit}>login</button>
                </div>
            </div>
        </div>
    )
}


function WelcomeComponent() {

    const {username} = useParams()

    console.log(username)

    return (
        <div className='WelcomeComponent'>
            <h1>Welcome {username}</h1>
            <div>
                Manage Your todos - <Link to="/todos">Go here</Link>
            </div>
        </div>
    )
}

function ErrorComponent() {
    return (
        <div className='ErrorComponent'>
            <h1>We are working really hard!</h1>
            <div>Apologies for the 404. Reach out to our team at ABC-DEF-GHIJ</div>
        </div>
    )
}

//3: 뭘 사용하려는 거지? 여기에 Bootstrap을 사용하려 한다, 그래서 여기 ListTodoComponent 안에서
function ListTodosComponent() {

    const today = new Date()

    const targetDate = new Date(today.getFullYear() + 12, today.getMonth(), today.getDay())

    const todos = [
        {id : 1, description : 'Learn AWS', done : false, targetDate : targetDate},
        {id : 2, description : 'Learn Full Stack Dev', done : false, targetDate : targetDate},
        {id : 3, description : 'Learn DevOps', done : false, targetDate : targetDate}
      ]

    return (

        //3-1: Bootstrap에서 사용하기 가장 좋은 div는 바로 container이다 (ListTodosComponent 에서 container로)
        //이건 container라고 하고 
        <div className='container'>
            <h1>Things You Want To Do!</h1>
            <div>

                //3-2: 여기는 className으로 table을 주겠다, 이제 어떻게 보이는지 볼까 변경 사항을 저장하고
                <table className='table'>
                    <thead>
                        <tr>
                            <td>ID</td>
                            <td>Description</td>
                            <td>is Done?</td>
                            <td>Target Date</td>
                        </tr>
                    </thead>
                    <tbody>
                        {
                            todos.map(
                                todo => (
                                    <tr key={todo.id}>
                                        <td>{todo.id}</td>
                                        <td>{todo.description}</td>
                                        <td>{todo.done.toString()}</td>
                                        <td>{todo.targetDate.toDateString()}</td>
                                   </tr>
                                )
                            )
                        }
                    </tbody>
                </table>
            </div>
        </div>
    )
}

function HeaderComponent() {
    return (
        <div className='header'>
            Header <hr/>
        </div>
    )
}

function FooterComponent() {
    return (
        <div className='footer'>
           <hr/> Footer 
        </div>
    )
}

function LogoutComponent() {
    return (
        <div className='LogoutComponent'>
            <h1>You are logged out!</h1>
            <div>Thank you for using our App. Come back soon!</div>
        </div>
    )
}
-----------------------------------------------------------------------------------------------

이건 

--------------------------------------------------------------------------------------------

🌎 http://localhost:3000/todos 사이트화면 ==>

(자세한것 확인 하려면 3000으로 접속...)
(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  

                                        Header
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                                 Things You Want To Do!
                                      
ID	Description	            is Done?     	 Target Date
1	  Learn AWS		             false        Sat Jul 05 2036
2	  Learn Full Stack Dev		 false        Sat Jul 05 2036
3	  Learn DevOps		         false        Sat Jul 05 2036
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                                        Footer

-------------------------------------------------------------------------------------------

변경 전 모습이다
                                  |
                                  V
                      
저장하고 돌아온 모습은 

--------------------------------------------------------------------------------------------

🌎 http://localhost:3000/todos 사이트화면 ==>

(자세한것 확인 하려면 3000으로 접속...)
(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  

                                        Header
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                                 Things You Want To Do!
                                      
                  ID	  Description	            is Done?     	 Target Date
                ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                  1	    Learn AWS		             false        Sat Jul 05 2036
                ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                  2	    Learn Full Stack Dev		 false        Sat Jul 05 2036
                ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                  3	    Learn DevOps		         false        Sat Jul 05 2036
                ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                                        Footer

-------------------------------------------------------------------------------------------

훨씬 정돈된 모습을 볼 수 있다

전체 테이블이 잘 정돈되었다, ID, Description, Is Done?, Target Date 모두 잘 보인다
테이블은 페이지 가운데 위치하고 페이지가 깔끔하다







이번 시간에 우리는 Bootstrap을 추가하고 ListTodosComponent를 정돈해봤다
정돈해야 할 컴포넌트가 많지
헤더와 바닥글도 정돈해야 하는데 다음 시간에 해보겠다
