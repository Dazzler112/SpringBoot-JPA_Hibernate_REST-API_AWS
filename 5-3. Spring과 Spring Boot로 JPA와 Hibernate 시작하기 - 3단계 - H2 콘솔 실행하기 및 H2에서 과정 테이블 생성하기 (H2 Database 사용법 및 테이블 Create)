

지난 단계에선 Spring initializr를 사용해 프로젝트를 생성했다 
프로젝트를 생성할 때 H2 Database라는 걸 이용했는데, 인메모리 데이터베이스다
이제 H2 Database로 연결해보려 한다 어떻게 가능할까?

콘솔로그로 가면 여기에 출력된 URL이 보이지? [0;39m [2m:[0;39m HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:19cdc446-8b9d-4d7d-bcaa-264d2c1c15e1 user=SA
여기에 H2 Database의 URL이 출력된 게 보일 것이다 jdbc:h2:mem으로 시작하고 있는데 
이 URL에서 실행되는 H2 Database로 연결하고 싶을 때 H2 콘솔을 사용 설정하거나 데이터베이스로 액세스 하는 방법은 
application.properties로 들어가서 프로퍼티를 설정하는 것이다

---------------------------------------------------------------------------------------------------------------------

⏺ application.properties 파일

#spring.h2.console.enabled=true를 입력하고 저장하면 된다 (입력 저장 후 서버를 멈추고 다시 시작한다)
spring.h2.console.enabled=true

---------------------------------------------------------------------------------------------------------------------

후에 URL로 http://localhost:8080/h2-console/로 검색창으로 입력
그러면 h2콘솔로 액세스하게 해준다
H2 Database가 실행된 게 보인다
기억해야 할 중요한 사항은 여기 URL이 항상 틀리다는 것이다, 매번 이 URL이 맞는지 꼭 확인해라
지금 H2 Database에 필요한 URL은 아직 구성하지 않았다 
그러면 발생하는 현상은 URL이 동적으로 생성된다는 것이다 
여기 connection conn0: url=jdbc:h2:mem:a40e9f11-a7d8-47c0-b29a-40e7d6c93dc2 user=SA URL을 보면 
지금 URL이 jdbc:h2:mem으로 가다가 난수가 이어지는 게 보이지? 바로 시작 로그에서 가져와야 한다

h2콘솔로와서 JDBC:URL:안에 이 (jdbc:h2:mem:a40e9f11-a7d8-47c0-b29a-40e7d6c93dc2)URL을 붙여넣은 다음 연결을 누르겠다
이제 H2 콘솔로 연결할 수 있다

이런 jdbc:h2:mem:a40e9f11-a7d8-47c0-b29a-40e7d6c93dc2 동적 URL이 있어서 작업이 아주 어려워질 수 있다 
재시작할 때마다 바꿔줘야 하기 때문이다 

• H2 Database 정적URL 구성

그럼 정적 URL을 구성해보겠다

---------------------------------------------------------------------------------------------------------------------

⏺ application.properties 파일


spring.h2.console.enabled=true
#이렇게 하면 된다 spring.datasource.url을 입력하고 jdbc:h2:mem: 아까 URL을 똑같이 복사하고 난수는 모두 지우겠다 그럼 jdbc:h2:mem:testdb가 되겠지
#이걸 저장하고 애플리케이션을 다시 시작하자
spring.datasource.url=jdbc:h2:mem:testdb

---------------------------------------------------------------------------------------------------------------------

이제 H2 콘솔로 가서 새로고침하고 전송을 다시 누른다 그럼 H2 콘솔이 실행되겠지 
여기 예전 URL이 나오는데
JDBC:URL:jdbc:h2:mem:a40e9f11-a7d8-47c0-b29a-40e7d6c93dc2
이걸 지우고 application.properties에 구성한 URL(jdbc:h2:mem:testdb)을 붙여넣기 하면 된다
jdbc:h2:mem:testdb 그리고 Connect를 누른다
이제 정적URL로 H2콘솔에 액세스할 수 있다 
jdbc:h2:mem:testdb로 연결할 수 있고, 지금은 H2콘솔에 아무 것도 없다

이제 할 일은 JDBC, JPA, Spring Data JPA, Hibernate등 여러 가지를 사용할 수 있게 하는건데 
그렇게 하려면 여기에 몇 가지 테이블이 있어야 한다

• H2에 테이블 생성법 
H2에 테이블을 생성해야 되고 어떻게 할 수 있을까?

IDE에 src/main/resources안에 schema.sql이라는 파일을 구성하는 것이다 
src/main/resources 우클릭으로 새로만들기 SQL 파일을 선택
schema.sql을 입력한다 (메뉴에 SQL파일이 안보이면 제목없는 텍스트 파일을 생성한다음 schema.sql로 저장해도 된다)

---------------------------------------------------------------------------------------------------------------------

⏺ schema.sql 파일


COURSE라는 테이블을 생성할 것이니 create tabel course라고 입력하고 괄호안에 열을 전부 넣는다
테이블에 저장하려는 세부항목이 뭐지? ID열이 있어야 하고 , 이름 열도 있고, 작성자 열도 있어야 겠지
1. 그럼 먼저 id를 넣어 ID열을 정의해보겠다 long으로 저장할 건데, Java로 뭔가를 long으로 저장할 때마다 H2 콘솔은 BigInt타입을 갖게 되는데 long이 bigint로 매핑된다 그리고 not null을 입력한다 null이 되면 안된다 ID필드기 떄문이다
2. 다음 이름을 구성하겠다 이름은 문자열이지? 텍스트이다, DB에서 텍스트는 가변 문자 varchar로 표현한다 varchar를 넣어주고 길이를 지정하는데 255로 하겠다 이것도 null이 되면 안 되니까 not null이라 입력한다
3. 다음으로 여기 테이블에 구성할 항목은 작성자이다 author도 이름과 똑같이 varchar(255) not null로 하고 
4. 마지막으로 정의할 항목은 기본 키인데 테이블을 정의할 때 항상 기본 키를 정의하는 게 좋다 여기 id는 기본 키이다 이 테이블의 모든 행이 ID 필드 값으로 고유의 값을 가져야 한다는 뜻이다
이 id를 이용해서 특정 테이블에서 특정 열을 식별하게 된다 DB가 처음이라도 이번 섹션이 끝날 무렵에는 기본 키에 대해 훨씬 깊게 알게 될 것이다
지금은 기본키를 구성해 보자 우리가 구성할 기본키는 id이다 그리고 저장

-- id
-- name
-- author

CREATE TABLE course
(
	id bigint not null,
    name varchar(255) not null,
    author varchar(255) not null
    primary key (id)
);
---------------------------------------------------------------------------------------------------------------------

Spring Data JPA Starter를 활용할 떄 마다 자동으로 schema.sql파일을 가져와서 H2에 테이블을 생성해준다
서벌즐 멈추고 다시 LearnJpaAndHibernate.Application을 시작하면 오류가 보이지 않는다


H2 콘솔로 넘어가서 새로고침하고 전송을 누르고 연결을 누른다
그러면 콘솔안을 보면 COURSE 테이블이 생겼다 SELECT * FROM COURSE를 실행(RUN)을 누르면 아래에 ID NAME AUTHOR이 보인다
이제 COURSE테이블이 생성되었다 

COURSE 테이블이 생성된 게 안보이면 schema.sql 파일이 올바른 폴더에 생성되었는지 확인해봐라 src/main/resources에 있어야 하고 
이름은 schema.sql이어야 한다, 그리고 테이블의 구문도 맞는지 확인해라
create table course 다음 id, name, author이 있고 기본 키도 정의하고 있다







Learning JPA and Hibernate - Approach
                                                                                         ______________________                                                                                                                            
● 01: Create a Spring Boot Project with H2                                              |   Spring Data JPA    |                                                                                                                       
● 02: Create COURSE table                                                                ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾                                                                                                                             
● 03: Use Spring JDBC to play with COURSE tabel                                          ______________________                                                                                                                            
● 04: Use JPA and Hibernate to play with COURSE table                                   |         JPA          |                                                                                                                   
● 05: Use Spring Data JPA to play with COURSE table                                      ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾                                                                                                                            
                                                                                         ______________________                                                                                                                             
                                                                                        |     Spring JDBC      |                                                                                                                      
                                                                                         ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾                                                                                                                            
                                                                                         ______________________                                                                                                                            
                                                                                        |         JDBC         |                                                                                                             
                                                                                         ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾   

지난 단계에선 Spring Boot 프로젝트 생성으로 시작해서 이번 단계에선 COURSE 테이블도 생성했다
다음엔 단계별로 Spring JDBC, JPA, Spring Data JPA를 활용해보겠다
