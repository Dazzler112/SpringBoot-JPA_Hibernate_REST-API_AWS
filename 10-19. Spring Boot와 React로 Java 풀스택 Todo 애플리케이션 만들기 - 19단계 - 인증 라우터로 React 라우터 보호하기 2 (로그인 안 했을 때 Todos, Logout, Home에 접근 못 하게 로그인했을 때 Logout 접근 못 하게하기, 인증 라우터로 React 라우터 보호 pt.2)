

사용자가 로그인 했을 때만 todos에 접근하도록 하고 싶다
어떻게 할까? 

TodoApp.jsx로 가면 여기에서 우리가 실제로 인증 라우터를 정의할 수 있지
지금은 로그인 여부에 관계없이 이 경로로 해당 페이지에 갈 수 있다
그러면 인증 라우터를 만들어보면 어떨까?
로그인 여부를 확인해서 로그인 되었을 때만 특정 경로로 이동하는 거지
이번 시간에 다워볼 내용이다

-----------------------------------------------------------------------------------------------
⏺ VSC


⏺ TodoApp.jsx



import {BrowserRouter, Routes, Route} from 'react-router-dom'
import './TodoApp.css'
import LogoutComponent from './LogoutComponent'
import HeaderComponent from './HeaderComponent'
import ListTodosComponent from './ListTodosComponent'
import ErrorComponent from './ErrorComponent'
import WelcomeComponent from './WelcomeComponent'
import LoginComponent from './LoginComponent'
import AuthProvider from './security/AuthContext'


//1: 여기로 가서 새로운 함수를 만들겠다, 어떤 함수지? function AuthencatedRoute()이다
function AuthencatedRoute() {
  //1-1: 여기에서 JSX를 반환한다, AuthencatedRoute는 어떤 일을 해야 할까? 
  return (

  )
}

export default function TodoApp() {
    return(
        <div className='TodoApp'>
            <AuthProvider>
            <BrowserRouter>
                <HeaderComponent />
                <Routes>
                    <Route path='/' element={<LoginComponent />} />
                    <Route path='/login' element={<LoginComponent />} />
                    <Route path='/welcome/:username' element={<WelcomeComponent />} />
                    <Route path='/todos' element={<ListTodosComponent />} />
                    <Route path='/logout' element={<LogoutComponent />} />
                    <Route path='*' element={<ErrorComponent />} />
                </Routes>
            </BrowserRouter>
            </AuthProvider>
        </div>
    )
}
-----------------------------------------------------------------------------------------------

<Route path='/todos' element={<ListTodosComponent />} />, 
<Route path='/logout' element={<LogoutComponent />} />, 
<Route path='*' element={<ErrorComponent />} /> 
이 세 가지 컴포넌트는 사용자가 인증되었을 때만 보여야 한다
인증 라우터 아래에 있어야 한다 

이런 식으로 할 수 있다

-----------------------------------------------------------------------------------------------
⏺ VSC


⏺ TodoApp.jsx




import {BrowserRouter, Routes, Route} from 'react-router-dom'
import './TodoApp.css'
import LogoutComponent from './LogoutComponent'
import HeaderComponent from './HeaderComponent'
import ListTodosComponent from './ListTodosComponent'
import ErrorComponent from './ErrorComponent'
import WelcomeComponent from './WelcomeComponent'
import LoginComponent from './LoginComponent'
import AuthProvider from './security/AuthContext'


            //2-3: 여기 children이 있어야 겠지, 다른 컴포넌트를 말한다
function AuthencatedRoute({children}) {

    //2-4: 일단 그냥 children을 반환해 보겠다, 저장하면 어떻게 되지?
    return children
}

export default function TodoApp() {
    return(
        <div className='TodoApp'>
            <AuthProvider>
            <BrowserRouter>
                <HeaderComponent />
                <Routes>
                    <Route path='/' element={<LoginComponent />} />
                    <Route path='/login' element={<LoginComponent />} />

              //2: 인증이 필요한 라우터는 여기에 이렇게 넣어주고
                    <Route path='/welcome/:username' element={
                  //2-1:  <AuthencatedRoute>와 닫는 태그 사이에 넣어준다
                    <AuthencatedRoute/>
                      <WelcomeComponent />
                    //2-2: 닫아 줘야 한다, 이런식으로 할 수 있다, 웰컴 컴포넌트는 인증 라우터의 자식이 되고, 웰컴 컴포넌트는 사용자가 인증되었을 때만 보이게 될 것이다 //2-3: 다시 AuthencatedRoute() 함수로..
                     </AuthencatedRoute>
                    } />

                    <Route path='/todos' element={<ListTodosComponent />} />
                    <Route path='/logout' element={<LogoutComponent />} />

                    <Route path='*' element={<ErrorComponent />} />
                </Routes>
            </BrowserRouter>
            </AuthProvider>
        </div>
    )
}
-----------------------------------------------------------------------------------------------


localhost:3000/welcome을 입력하면 

--------------------------------------------------------------------------------------------

🌎 http://localhost:3000/welcome/in28minutes 사이트화면 ==>

(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  

          in28minutes                                                         Login
     ___________________________________________________________________________________

                                    Welcome in28minutes

                                Manage Your todos - Go here


-------------------------------------------------------------------------------------------
  Elements  ⚛ Component  >>                                                       🔅  ⁞  x
            ‾‾‾‾‾‾‾‾‾‾‾
-------------------------------------------------------------------------------------------
  ↖  |  🔍  Search (text or /regex/)                                               |  🔅
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
  ▼ App
    ▼ TodoApp
     ▼ AuthProvider
      ▼ Context.Provider
       ▼ BrowserRouter
        ▼ Router
         ▼ Navigation.Provider
          ▼ Location.Provider
           ▼ HeaderComponent
              Link
           ▼ Routes
            ▼ RenderedRoute
             ▼ Route.Provider
              ▼ welcomecomponent
                  Link
-------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------

Context.Provider                  ⏱  👁  🐞  <>
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
props
▶ children:{$$typeof: Symbol(react.element), _owner: FiberNode…}
▶ value: {isAuthenticated: false, number: 10, setAuthenticat…}
  new entry: ""
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
rendered by
  AuthProvider
  TodoApp
  App
  createRoot()
  react-dom@18.3.1

-------------------------------------------------------------------------------------------

in28minutes가 뜬다, 아직 기능에는 변화가 없다

인증 라우터에 아무것도 구현하지 않았기때문이다
변화가 생긴 건 컴포넌트에서 볼 수 있다


-------------------------------------------------------------------------------------------
  Elements  ⚛ Component  >>                                                       🔅  ⁞  x
            ‾‾‾‾‾‾‾‾‾‾‾
-------------------------------------------------------------------------------------------
  ↖  |  🔍  Search (text or /regex/)                                               |  🔅
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
  ▼ App
    ▼ TodoApp
     ▼ AuthProvider
      ▼ Context.Provider
       ▼ BrowserRouter
        ▼ Router
         ▼ Navigation.Provider
          ▼ Location.Provider
           ▼ HeaderComponent
              Link
           ▼ Routes
            ▼ RenderedRoute
             ▼ Route.Provider
              ▼ AuthenticatedRoute
                ▼ welcomecomponent
                   Link
-------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------

Context.Provider                  ⏱  👁  🐞  <>
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
props
▶ children:{$$typeof: Symbol(react.element), _owner: FiberNode…}
▶ value: {isAuthenticated: false, number: 10, setAuthenticat…}
  new entry: ""
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
rendered by
  AuthProvider
  TodoApp
  App
  createRoot()
  react-dom@18.3.1

-------------------------------------------------------------------------------------------

여기 보면 AuthenticatedRoute가 있고 그 아래 WelcomeComponent가 보인다


돌아가겠다
우리가 하려는 것은 페이지를 보여주기 전 사용자 인증 여부를 확인하는 것이다
어떻게 하지?
간단하다, 그렇지?
Auth를 TodoApp.jsx의 AuthenticatedRoute 함수에 사용하면 된다, 여기로 들어가서

-----------------------------------------------------------------------------------------------
⏺ VSC


⏺ TodoApp.jsx




import {BrowserRouter, Routes, Route} from 'react-router-dom'
import './TodoApp.css'
import LogoutComponent from './LogoutComponent'
import HeaderComponent from './HeaderComponent'
import ListTodosComponent from './ListTodosComponent'
import ErrorComponent from './ErrorComponent'
import WelcomeComponent from './WelcomeComponent'
import LoginComponent from './LoginComponent'
import AuthProvider from './security/AuthContext'

//3-1: 임포트가 들어왔다, ./security/AuthContext에서 AuthProvider와 useAuth가 들어왔다 좋다 //3-2: 다시 AuthencatedRoute() 함수로..
import AuthProvider, { useAuth } from './security/AuthContext'


function AuthencatedRoute({children}) {

    //3:const authContext = useAuth(), ctrl+스페이스 엔터로 임포트 하겠다 //3-1: 임포트로..
    const authContext = useAuth()

    //3-2: if문으로 authContext.isAuthenticated 확인한다, 사용자가 인증되었으면 children을 반환하는 거지, 저장한다
    if(authContext.isAuthenticated)
      return children
}

export default function TodoApp() {
    return(
        <div className='TodoApp'>
            <AuthProvider>
            <BrowserRouter>
                <HeaderComponent />
                <Routes>
                    <Route path='/' element={<LoginComponent />} />
                    <Route path='/login' element={<LoginComponent />} />

                    <Route path='/welcome/:username' element={
                        <AuthencatedRoute>
                        <WelcomeComponent />
                        </AuthencatedRoute>
                        } />

                    <Route path='/todos' element={<ListTodosComponent />} />
                    <Route path='/logout' element={<LogoutComponent />} />

                    <Route path='*' element={<ErrorComponent />} />
                </Routes>
            </BrowserRouter>
            </AuthProvider>
        </div>
    )
}
-----------------------------------------------------------------------------------------------

어떻게 되지?
                                        |
                                        V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000/welcome/in28minutes 사이트화면 ==>

(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  

          in28minutes                                                         Login
     ___________________________________________________________________________________





-------------------------------------------------------------------------------------------
  Elements  ⚛ Component  >>                                                       🔅  ⁞  x
            ‾‾‾‾‾‾‾‾‾‾‾
-------------------------------------------------------------------------------------------
  ↖  |  🔍  Search (text or /regex/)                                               |  🔅
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
  ▼ App
    ▼ TodoApp
     ▼ AuthProvider
      ▼ Context.Provider
       ▼ BrowserRouter
        ▼ Router
         ▼ Navigation.Provider
          ▼ Location.Provider
           ▼ HeaderComponent
              Link
           ▼ Routes
            ▼ RenderedRoute
             ▼ Route.Provider
              ▼ AuthenticatedRoute
                ▼ welcomecomponent
                   Link
-------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------

Context.Provider                  ⏱  👁  🐞  <>
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
props
▶ children:{$$typeof: Symbol(react.element), _owner: FiberNode…}
▶ value: {isAuthenticated: false, number: 10, setAuthenticat…}
  new entry: ""
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
rendered by
  AuthProvider
  TodoApp
  App
  createRoot()
  react-dom@18.3.1

-------------------------------------------------------------------------------------------

아하! localhost:3000/welcome/in28minutes로 들어가도 
웰컴 페이지가 보이지 않는다

로그인으로 가서 in28minutes, dummy를 넣어서 로그인을 하면
                                              |
                                              V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000/welcome/in28minutes 사이트화면 ==>

(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  

          in28minutes  Home  Todos                                            Logout
     ___________________________________________________________________________________

                                    Welcome in28minutes

                                Manage Your todos - Go here


-------------------------------------------------------------------------------------------
  Elements  ⚛ Component  >>                                                       🔅  ⁞  x
            ‾‾‾‾‾‾‾‾‾‾‾
-------------------------------------------------------------------------------------------
  ↖  |  🔍  Search (text or /regex/)                                               |  🔅
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
  ▼ App
    ▼ TodoApp
     ▼ AuthProvider
      ▼ Context.Provider
       ▼ BrowserRouter
        ▼ Router
         ▼ Navigation.Provider
          ▼ Location.Provider
           ▼ HeaderComponent
              Link
           ▼ Routes
            ▼ RenderedRoute
             ▼ Route.Provider
              ▼ AuthenticatedRoute
                ▼ welcomecomponent
                   Link
-------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------

Context.Provider                  ⏱  👁  🐞  <>
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
props
▶ children:{$$typeof: Symbol(react.element), _owner: FiberNode…}
▶ value: {isAuthenticated: false, number: 10, setAuthenticat…}
  new entry: ""
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
rendered by
  AuthProvider
  TodoApp
  App
  createRoot()
  react-dom@18.3.1

-------------------------------------------------------------------------------------------

이제 보인다 
로그인을 하면 Welcome페이지를 볼 수 있다



로그아웃하고 직접 URL을 입력하면 

--------------------------------------------------------------------------------------------

🌎 http://localhost:3000/welcome/in28minutes 사이트화면 ==>

(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  

          in28minutes                                                         Login
     ___________________________________________________________________________________





-------------------------------------------------------------------------------------------
  Elements  ⚛ Component  >>                                                       🔅  ⁞  x
            ‾‾‾‾‾‾‾‾‾‾‾
-------------------------------------------------------------------------------------------
  ↖  |  🔍  Search (text or /regex/)                                               |  🔅
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
  ▼ App
    ▼ TodoApp
     ▼ AuthProvider
      ▼ Context.Provider
       ▼ BrowserRouter
        ▼ Router
         ▼ Navigation.Provider
          ▼ Location.Provider
           ▼ HeaderComponent
              Link
           ▼ Routes
            ▼ RenderedRoute
             ▼ Route.Provider
              ▼ AuthenticatedRoute
                ▼ welcomecomponent
                   Link
-------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------

Context.Provider                  ⏱  👁  🐞  <>
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
props
▶ children:{$$typeof: Symbol(react.element), _owner: FiberNode…}
▶ value: {isAuthenticated: false, number: 10, setAuthenticat…}
  new entry: ""
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
rendered by
  AuthProvider
  TodoApp
  App
  createRoot()
  react-dom@18.3.1

-------------------------------------------------------------------------------------------

빈 페이지만 나온다

사용자가 로그인 하지 않으면 어떻게 돼야 할까?
URL로 접속하려 하고 있다
어떻게 해야 할까?

로그인 페이지로 연결해주는 게 좋겠지

여기서 해보자

-----------------------------------------------------------------------------------------------
⏺ VSC


⏺ TodoApp.jsx


//4-1: import에 Navigate를 추가하고 ( {}안에 Navigate 추가) 저장하겠다
import {BrowserRouter, Routes, Route, Navigate} from 'react-router-dom'
import './TodoApp.css'
import LogoutComponent from './LogoutComponent'
import HeaderComponent from './HeaderComponent'
import ListTodosComponent from './ListTodosComponent'
import ErrorComponent from './ErrorComponent'
import WelcomeComponent from './WelcomeComponent'
import LoginComponent from './LoginComponent'
import AuthProvider, { useAuth } from './security/AuthContext'


function AuthencatedRoute({children}) {
    const authContext = useAuth()
    if(authContext.isAuthenticated)
    return children

    //4: 여기서 해보자, 만약 인증되지 않았으면 Navigate 하면 된다, Navigate를 입력하고 to에다가 루트 페이지를 준다 이 노드를 반환한다, 저장하고
    //Navigate도 React Router DOM에서 정의된다 //4-1: import로..
    return <Navigate to="/" />
}

export default function TodoApp() {
    return(
        <div className='TodoApp'>
            <AuthProvider>
            <BrowserRouter>
                <HeaderComponent />
                <Routes>
                    <Route path='/' element={<LoginComponent />} />
                    <Route path='/login' element={<LoginComponent />} />

                    <Route path='/welcome/:username' element={
                        <AuthencatedRoute>
                        <WelcomeComponent />
                        </AuthencatedRoute>
                        } />

                    <Route path='/todos' element={<ListTodosComponent />} />
                    <Route path='/logout' element={<LogoutComponent />} />

                    <Route path='*' element={<ErrorComponent />} />
                </Routes>
            </BrowserRouter>
            </AuthProvider>
        </div>
    )
}
-----------------------------------------------------------------------------------------------

---------------------
function AuthencatedRoute({children}) {
    const authContext = useAuth()
    if(authContext.isAuthenticated)
        return children

    return <Navigate to="/" />
}
---------------------
AuthenticatedRoute 에서 하는 것은 
사용자가 인증됐는지 확인하고 <= if(authContext.isAuthenticated) 
인증이 됐으면 AuthencatedRoute 아래에 있는 컴포넌트인 
---------------------
<Route path='/welcome/:username' element={
  <AuthencatedRoute>
  <WelcomeComponent />
  </AuthencatedRoute>
  } />
---------------------
웰컴 컴포넌트로 연결한다

하지만 인증되지 않았으면 루트 URL로 리디렉션 한다 <= return <Navigate to="/" />
로그인 컴포넌트 URL이지 <= <Route path='/' element={<LoginComponent />} />


여기로 와서
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000/ 사이트화면 ==>

(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  

          in28minutes                                                        Login   
     ___________________________________________________________________________________

                                          Time to Login!
                     
                                               _________________
                                  User Name:  |in28minutes      | 
                                               ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                                              __________________
                                  Password:  |●●●●●             |
                                              ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                                              _______
                                             | login |  
                                              ‾‾‾‾‾‾‾

-------------------------------------------------------------------------------------------
로그인한다
                            |
                            V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000/welcome/in28minutes 사이트화면 ==>

(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  

          in28minutes  Home  Todos                                            Logout
     ___________________________________________________________________________________

                                    Welcome in28minutes

                                Manage Your todos - Go here


-------------------------------------------------------------------------------------------
  Elements  ⚛ Component  >>                                                       🔅  ⁞  x
            ‾‾‾‾‾‾‾‾‾‾‾
-------------------------------------------------------------------------------------------
  ↖  |  🔍  Search (text or /regex/)                                               |  🔅
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
  ▼ App
    ▼ TodoApp
     ▼ AuthProvider
      ▼ Context.Provider
       ▼ BrowserRouter
        ▼ Router
         ▼ Navigation.Provider
          ▼ Location.Provider
           ▼ HeaderComponent
              Link
           ▼ Routes
            ▼ RenderedRoute
             ▼ Route.Provider
              ▼ AuthenticatedRoute
                ▼ welcomecomponent
                   Link
-------------------------------------------------------------------------------------------
-------------------------------------------------------------------------------------------

Context.Provider                  ⏱  👁  🐞  <>
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
props
▶ children:{$$typeof: Symbol(react.element), _owner: FiberNode…}
▶ value: {isAuthenticated: false, number: 10, setAuthenticat…}
  new entry: ""
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
rendered by
  AuthProvider
  TodoApp
  App
  createRoot()
  react-dom@18.3.1

-------------------------------------------------------------------------------------------

좋다

로그아웃하고 

--------------------------------------------------------------------------------------------

🌎 http://localhost:3000/logout 사이트화면 ==>

(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  

          in28minutes                                                        Login
     ___________________________________________________________________________________

                                   You are logged out!

                       Thank you for using our App. Come back soon!


-------------------------------------------------------------------------------------------

welcome/in28minutes로 들어가면
                                  |
                                  V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000/ 사이트화면 ==>

(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  

          in28minutes                                                        Login   
     ___________________________________________________________________________________

                                          Time to Login!
                     
                                               _________________
                                  User Name:  |in28minutes      | 
                                               ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                                              __________________
                                  Password:  |                  |
                                              ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                                              _______
                                             | login |  
                                              ‾‾‾‾‾‾‾

-------------------------------------------------------------------------------------------

로그인 페이지로 연결된다

다시 로그인 하면 
                                  |
                                  V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000/welcome/in28minutes 사이트화면 ==>

(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  

          in28minutes  Home  Todos                                            Logout
     ___________________________________________________________________________________

                                    Welcome in28minutes

                                Manage Your todos - Go here


-------------------------------------------------------------------------------------------

웰컴 페이지로 들어간다



이제 다른 컴포넌트에서도 동일하게 하면 되겠지,
ListTodosComponent와 LogoutComponent이다

-----------------------------------------------------------------------------------------------
⏺ VSC


⏺ TodoApp.jsx





import {BrowserRouter, Routes, Route, Navigate} from 'react-router-dom'
import './TodoApp.css'
import LogoutComponent from './LogoutComponent'
import HeaderComponent from './HeaderComponent'
import ListTodosComponent from './ListTodosComponent'
import ErrorComponent from './ErrorComponent'
import WelcomeComponent from './WelcomeComponent'
import LoginComponent from './LoginComponent'
import AuthProvider, { useAuth } from './security/AuthContext'


function AuthencatedRoute({children}) {
    const authContext = useAuth()
    if(authContext.isAuthenticated)
        return children

    return <Navigate to="/" />
}

export default function TodoApp() {
    return(
        <div className='TodoApp'>
            <AuthProvider>
            <BrowserRouter>
                <HeaderComponent />
                <Routes>
                    <Route path='/' element={<LoginComponent />} />
                    <Route path='/login' element={<LoginComponent />} />

                    <Route path='/welcome/:username' element={
                        <AuthencatedRoute>
                            <WelcomeComponent />
                        </AuthencatedRoute>
                        } />

                    <Route path='/todos' element={

                      //5: 코드를 정리하고 AuthenticationRoute를 추가하면 되지
                        <AuthencatedRoute>
                            <ListTodosComponent />
                      //5-1: 여기도 마찬가지다, 좋다
                        </AuthencatedRoute>
                        } />

                    <Route path='/logout' element={

                      //5-2: 로그아웃 컴포넌트에도 동일하게 하겠다, 여기로 가서 이렇게 하자 AuthenticationRoute
                        <AuthencatedRoute>
                            <LogoutComponent />
                      //5-3: 태그를 닫아주고 밑으로가서, 좋다, 웰컴 라우터, Todo 라우터, 로그아웃 라우터가 모두 인증 라우터로 보호되고 있다, 로그인 컴포넌트와 에러 컴포넌트는 그냥 두겠다, 저장하고 돌아가자
                        </AuthencatedRoute>
                        } />

                    <Route path='*' element={<ErrorComponent />} />
                </Routes>
            </BrowserRouter>
            </AuthProvider>
        </div>
    )
}
-----------------------------------------------------------------------------------------------

여기로 가서 로그아웃
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000/welcome/in28minutes 사이트화면 ==>

(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  

          in28minutes  Home  Todos                                            Logout
     ___________________________________________________________________________________

                                    Welcome in28minutes

                                Manage Your todos - Go here


-------------------------------------------------------------------------------------------
                                  |
                                  V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000/ 사이트화면 ==>

(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  

          in28minutes                                                        Login   
     ___________________________________________________________________________________

                                          Time to Login!
                     
                                               _________________
                                  User Name:  |in28minutes      | 
                                               ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                                              __________________
                                  Password:  |●●●●●             |
                                              ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                                              _______
                                             | login |  
                                              ‾‾‾‾‾‾‾

-------------------------------------------------------------------------------------------

다시 로그인
                                          |
                                          V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000/welcome/in28minutes 사이트화면 ==>

(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  

          in28minutes  Home  Todos                                            Logout
     ___________________________________________________________________________________

                                    Welcome in28minutes

                                Manage Your todos - Go here


-------------------------------------------------------------------------------------------

좋다

하지만 페이지를 새로 고침 하면 인증 토근은 사라지고 로그인 페이지로 연결된다
                                            |
                                            V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000/ 사이트화면 ==>

(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  

          in28minutes                                                        Login   
     ___________________________________________________________________________________

                                          Time to Login!
                     
                                               _________________
                                  User Name:  |in28minutes      | 
                                               ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                                              __________________
                                  Password:  |●●●●●             |
                                              ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                                              _______
                                             | login |  
                                              ‾‾‾‾‾‾‾

-------------------------------------------------------------------------------------------

접근하려고 할 때
페이지를 새로 고침 하면 로그인 페이지로 연결되고 로그인한 다음 특정 페이지로 가야 하지




지난 몇 시간 동안 우리는 컴포넌트 몇 개를 만들었지
Home컴포넌트, Todo 컴포넌트, Logout 컴포넌트도 있지
헤더와 바닥글도 있다
인증과 승인 로직도 제대로 작동한다
공유 컨텍스트를 만들어서 여러 컴포넌트에서 접근할 수 있게 했다
그럼 뭘 해야 하지?
이제 백엔드 API와 통신해야 한다
REST API와 통신하고 싶다

다음 섹션에서 해보겠다
