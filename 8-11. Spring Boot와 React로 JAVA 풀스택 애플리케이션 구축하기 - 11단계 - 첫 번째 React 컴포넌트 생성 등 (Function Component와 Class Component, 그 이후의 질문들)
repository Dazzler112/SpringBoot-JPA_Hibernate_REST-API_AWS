

Creating a React Component
  ________________________________________________________________________
 |   function FirstComponent() {                                          |
 |     return (                                                           |           
 |       <div className="FirstComponent">FirstComponent</div>             |           
 |     );                                                                 |     
 |   }                                                                    |        
 |    class ThirdComponent extends Component {                            |                
 |     render() {                                                         |         
 |       return (                                                         |         
 |         <div className="ThirdComponent">ThirdComponent</div>           |           
 |       );                                                               |         
 |     }                                                                  |      
 |    }                                                                   |       
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾

첫 번째 리액트 컴포넌트를 만들다니, 재미있겠지?
시작해보자

현재 VSC에 src 폴더에 있다
여기 보면 App.js파일이 있다

-------------------------------
import './App.css';

function App() {
  return (
    <div className="App">
      My Todo Application Updated
    </div>
  );
}

export default App;

-------------------------------

App.js는 우리 페이지에 로드되는 실제 내용이 들어있는 파일이다
우리가 만들 모든 리액트 컴포넌트는 여기 보이는 앱 컴포넌트의 자식 컴포넌트가 될 것이다

그럼 여기에다가 첫 번째 컴포넌트의 코드를 작성해보자

---------------------------------------------------------------------------------------------------
⏺ VSC

⏺ App.js 파일



import './App.css';

function App() {
  return (
    <div className="App">
      My Todo Application Updated
    </div>
  );
}

//1: 여기에 함수를 하나 쓰겠다, 컴포넌트를 생성하는 구문은 아주 간단하다 function이라 쓰고 컴포넌트 이름을 입력하면 된다 
//이름은 단순하게 FirstComponent라고 하고 괄호를 써주고 중괄호를, 이구문에 익숙해져야 한다, 새롭긴 하지만
function FirstComponent (){
  //1-1: 그럼 컴포넌트에서 뭘 반환해야 할까??, 컴포넌트에서 무언가를 반환할 때는 괄호 안에 넣는다
  return(
    //1-2: 괄호 안에는 컴포넌트에서 반환하려는 항목을 정의해야하지, 뭘 반환하든 그 컴포넌트의 일부로 나타난다, 간단하게 해보자
    //지금은 간단히 div를 만들고 <div >안에 className을 FirstComponent라고 주겠다 그리고 텍스트로 First Component를 준다 저장후..
    <div className="FirstComponent">First Component</div>    
  );
}
export default App;

---------------------------------------------------------------------------------------------------
페이지로 돌아가서                                  |
                                                 V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000 사이트화면 ==>

(자세한것 확인 하려면 3000으로 접속...)
(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  


                                     My Todo Application Updated



--------------------------------------------------------------------------------------------

여기에 보여야 하는데 First Component가 여기 안보이지


컴포넌트를 표시하려면 앱 컴포넌트의 계층 구조에 포함해야 한다, 앱 컴포넌트 안에서 이 First Component를 보여주겠다

---------------------------------------------------------------------------------------------------
⏺ VSC

⏺ App.js 파일


import './App.css';

function App() {
  return (
    <div className="App">
      My Todo Application Updated

      //2: First Component를 보여주고 싶다 여기로 가서 태그를 추가한다, First Component를 주고 태그를 닫는다, 닫는 태그도 추가되었지, 저장!
      <FirstComponent></FirstComponent>  
    </div>
  );
}

function FirstComponent (){
  return (
    <div className="FirstComponent">First Component</div>
  );
}

export default App;

---------------------------------------------------------------------------------------------------
                                                |
                                                V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000 사이트화면 ==>

(자세한것 확인 하려면 3000으로 접속...)
(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  


                                     My Todo Application Updated
                                           First Component


--------------------------------------------------------------------------------------------
그러면 My Todo Application Update가 보이고 First Component가 보인다
첫 번째 리액트 컴포넌트를 만든 걸 축하한다, 쉽지?

그럼 여기서 두 번째 컴포넌트를 추가해 볼까?
두 번째 컴포넌트의 클래스 이름은 SecondComponet로 하겠다
텍스트 Second Component를 포함하고 앱에 표시하고 싶다

---------------------------------------------------------------------------------------------------
⏺ VSC

⏺ App.js 파일




import './App.css';

function App() {
  return (
    <div className="App">
      My Todo Application Updated
      <FirstComponent></FirstComponent>

      //3-2:여기에서 SecondComponent를 사용한다 작동할까?
      <SecondComponet></SecondComponet>      
    </div>
  );
}

function FirstComponent (){
  return (
    <div className="FirstComponent">First Component</div>
  );
}

//3: 아주 간단하다 FirstComponent()를 복사해서 컴포넌트명을 SecondComponent라고 하겠다
function SecondComponet () {
  return(
      //3-1: className에 SecondComponent을 써주고 텍스트도 Second겠지//3-2: App() 컴포넌트로..
    <div className="SecondComponent">Second Component</div>
  );
}

export default App;

---------------------------------------------------------------------------------------------------
                                              |
                                              V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000 사이트화면 ==>

(자세한것 확인 하려면 3000으로 접속...)
(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  


                                     My Todo Application Updated
                                           First Component
                                           Second Component

--------------------------------------------------------------------------------------------
잘 된다 My Todo Application Updated, First Component, Second Component 멋지다

이제 My Todo Application Updated줄을 지우겠다

---------------------------------------------------------------------------------------------------
⏺ VSC

⏺ App.js 파일



import './App.css';

function App() {
  return (
    <div className="App">
      //4: My Todo Application Updated 삭제 (여기서만 주석처리함) 더 이상 필요하지 않다
//      My Todo Application Updated
      <FirstComponent></FirstComponent>
      <SecondComponet></SecondComponet>
    </div>
  );
}

function FirstComponent (){
  return (
    <div className="FirstComponent">First Component</div>
  );
}

function SecondComponet () {
  return(
    <div className="SecondComponent">Second Component</div>
  );
}

export default App;

---------------------------------------------------------------------------------------------------
                                              |
                                              V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000 사이트화면 ==>

(자세한것 확인 하려면 3000으로 접속...)
(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  



                                           First Component
                                           Second Component

--------------------------------------------------------------------------------------------

이제 First Component와 Second Component가 전부이다

--------------------------------------
import './App.css';

function App() {
  return (
    <div className="App">
      <FirstComponent></FirstComponent>
      <SecondComponet></SecondComponet>
    </div>
  );
}

function FirstComponent (){
  return (
    <div className="FirstComponent">First Component</div>
  );
}

function SecondComponet () {
  return(
    <div className="SecondComponent">Second Component</div>
  );
}

export default App;
--------------------------------------
현재 우리 컴포넌트의 계층 구조는 앱 컴포넌트가 상단에 있고
First 컴포넌트와 Second 컴포넌트가 앱 컴포넌트의 자식으로 있다
이미 관찰했겠지만 사실 우리는 컴포넌트를 생성하기 위해 function(함수)를 사용한다,
그래서 우리는 이것을 함수 컴포넌트라 부른다 ( function FirstComponent (){ )
함수를 활용해서 First Component, Second Component, App Component를 만들지 
이들이 함수 컴포넌트이다

리액트에서는 클래스 컴포넌트라는 것도 있다 
리액트에서 클래스 컴포넌트는 어떻게 만들까?
이것도 아주 간단하다

---------------------------------------------------------------------------------------------------
⏺ VSC

⏺ App.js 파일



import './App.css';

function App() {
  return (
    <div className="App">
      <FirstComponent></FirstComponent>
      <SecondComponet></SecondComponet>
    </div>
  );
}

function FirstComponent (){
  return (
    <div className="FirstComponent">First Component</div>
  );
}

function SecondComponet () {
  return(
    <div className="SecondComponent">Second Component</div>
  );
}

//5: 클래스 컴포넌트를 만드는 방법은 class를 쓰면 된다 그리고 여기에 이름을 쓰면 된다 ThirdComponent라고 해보겠다, 괄호를 열고 닫아주고
//클래스 컴포넌트에서 또 해야 할 일은 함수 컴포넌트 코드와 매우 유사한 메서드를 정의하는 것이다 SecondComponet()를 복사해서 붙여넣기 하겠다
class ThirdComponent {<== //5-3:ThirdComponent()의 () 삭제, 함수에만 괄호가 필요하다 클래스에는 괄호가 없다 이름만 있다//5-4: 바로 아래로..
    //5-1: ThirdComponent 안에서 html을 반환하는 메서드를 정의할 것이다
  SecondComponent () {
    return(
        //5-2: 이부분은 ThirdComponent 가 될 거고 className도 ThirdComponent가 되겠지, 클래스 컴포넌트에서 중요한 한 가지는 괄호가 필요 없다는 것이다 //5-3: class ThirdComponent 부분으로..
      <div className="ThirdComponent">Third Component</div>
    );
  }
}

export default App;

---------------------------------------------------------------------------------------------------
   
---------------------------------------------------------------------------------------------------
⏺ VSC

⏺ App.js 파일


//6-2: 임포트 구문은 Java의 임포트와 매우 비슷하다 바깥의 다른 곳에 있는 함수나 클래스를 사용하고 싶은 경우가 있다면, import를 여기에 쓰면 된다
//무엇을 사용하려고 하지? Component를 사용하고 싶다 중괄호 열고 닫은 사이 Component를 넣어주고, Component는 어디에 정의되었지? 리액트 프레임워크에서 정의되었다 from 'react'라고 하겠다
//우리는 extends Component라고 했고 리액트에서 Component를 임포트 했다 어떻게 되는지 확인해보자
import { Component } from 'react';
import './App.css';

function App() {
  return (
    <div className="App">
      <FirstComponent></FirstComponent>
      <SecondComponet></SecondComponet>
      <ThirdComponent></ThirdComponent>
    </div>
  );
}

function FirstComponent (){
  return (
    <div className="FirstComponent">First Component</div>
  );
}

function SecondComponet () {
  return(
    <div className="SecondComponent">Second Component</div>
  );
}

class ThirdComponent  extends Component { //6-1: 세번째로 할 일은 extends 하고 Component를 주는 것이다, 그리고 임포트 해야 한다 //6-2: import 부분으로...
  
  render () { //6: 첫 번째로 ThirdComponent라는 클래스가 생겼다, 두 번째로 이 메서드 이름을 render로 지정해야지 (SecondComponent() 에서 render로)
              //6 계속: 클래스 컴포넌트에서 우리가 정의하는 건 렌더링 메서드이다, 렌더링 메서드는 컴포넌트 일부로 보여주고 싶은 텍스트를 반환해야 한다 //6-1: ThirdComponent로...
    return(
      <div className="ThirdComponent">Third Component</div>
    );
  }
}

export default App;

---------------------------------------------------------------------------------------------------
                                                |
                                                V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000 사이트화면 ==>

(자세한것 확인 하려면 3000으로 접속...)
(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  



                                           First Component
                                           Second Component
                                           Third Component

--------------------------------------------------------------------------------------------

First Component, Second Component, Third Component 멋지다

이제 네 번째 컴포넌트를 추가해보자

---------------------------------------------------------------------------------------------------
⏺ VSC

⏺ App.js 파일



import { Component } from 'react';
import './App.css';

function App() {
  return (
    <div className="App">
      {/* <header className="App-header">
        <img src={logo} className="App-logo" alt="logo" />
        <p>
          Edit <code>src/App.js</code> and save to reload.
        </p>
        <a
          className="App-link"
          href="https://reactjs.org"
          target="_blank"
          rel="noopener noreferrer"
        >
          Learn React
        </a>
      </header> */}
      <FirstComponent></FirstComponent>
      <SecondComponet></SecondComponet>
      <ThirdComponent></ThirdComponent>
      //7-2: Fourth Component를 띄어보자 <FourthComponent><FourthComponent/> 가 되지 저장하고
      <FourthComponent/>
    </div>
  );
}

function FirstComponent (){
  return (
    <div className="FirstComponent">First Component</div>
  );
}

function SecondComponet () {
  return(
    <div className="SecondComponent">Second Component</div>
  );
}

class ThirdComponent  extends Component{

  render () {
    return(
      <div className="ThirdComponent">Third Component</div>
    );
  }
}

//7: 네 번째 컴포넌트도 클래스 컴포넌트로 만들겠다, 여기에 Fourth Component라 하고 extends Component 이다
class FourthComponent extends Component{
  render (){
    return(
        //7-1: 여기도 FourthComponent가 될 거고 여기 텍스트도 Fourth Component겠지 저장하고 Fourth Component를 띄워보자 //7-2: App() 컴포넌트로가서 작성...
      <div className="FourthComponent">Fourth Component</div>
    );
  }
}

export default App;

---------------------------------------------------------------------------------------------------
                                                  |
                                                  V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000 사이트화면 ==>

(자세한것 확인 하려면 3000으로 접속...)
(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  



                                           First Component
                                           Second Component
                                           Third Component
                                           Fourth Component

--------------------------------------------------------------------------------------------
좋다 First, Second, Third, Fourth Component가 여기 있다








이번 강의에선 함수 컴포넌트와 클래스 컴포넌트를 몇 개 만들어보았다
JavaScript 구문에 익숙해지는 데는 시간이 걸릴 것이다,
이번 강의의 핵심이다
그러면 이런 질문들을 생각해 봐야 한다 
함수 컴포넌트와 클래스 컴포넌트는 어떻게 다를까?
어떤 기준으로 선택하지?

또 다른 질문은 입력에 관련된 것이다
import { Component } from 'react'; <=여기에서 중괄호를 썼는데 
return(<div className="ThirdComponent">Third Component</div>); <= 무언가를 반환할 때 여기에는 괄호를 썼다
중괄호는 언제 쓸까?, 괄호는 언제 쓸까?

또 다른 질문이 떠오를 수도 있다 
이번 섹션을 진행하면서 이 질문에 대한 답을 찾아 나가 보자
다음 강의에서 보겠다
