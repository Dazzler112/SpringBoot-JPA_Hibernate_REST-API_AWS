

Define CSS in JSX

  ________________________________________________________________________
 |   const customStyle = {                                                |  
 |     backgroundColor: "green",                                          |                    
 |     fontSize: "16px",                                                  |          
 |     padding: "15px 30px",                                              |              
 |     color: "white",                                                    |        
 |     width: "100px",                                                    |          
 |     border: "1px solid #666666",                                       |               
 |     borderRadius: "30px",                                              |                  
 |   };                                                                   |         
 |                                                                        |                       
 |   <button style={customStyle}>+1</button>                              |                  
 |                                                                        |                 
 |   <button className="cssClass">+1</button>                             |                     
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾

● Options of styling your React components
  ■ 1:style
    ○ Error:<button style={border-radius:30px}>
    ○ Correct Syntax: <button style={{borderRadius:"30px"}>    
  ■ 2: className
    ○ Define the cssClass in your component CSS file



이번 학습엔 버튼과 카운터에 필요한 CSS를 정의하는 데 집중하겠다
● Options of styling your React components
리액트 컴포넌트 스타일은 다양한 방식으로 적용할 수 있다 
  ■ 1:style
    ○ Error:<button style={border-radius:30px}>
    ○ Correct Syntax: <button style={{borderRadius:"30px"}> 
한 가지 방법은 'style'속성을 사용하는 것이다
스타일을 요소 자체의 속성으로 포함시키는 방법이지
스타일을 요소 자체의 속성으로 포함시키는 방법이지
  ■ 2: className
    ○ Define the cssClass in your component CSS file
두 번째 방법은 'className'을 사용하는 것이다
지금까지는 className만 사용했지

이번 단계에선 style과 className을 모두 사용해 보자
그럼 이제 버튼 클래스에 사용할 스타일을 정의해보자


🔵 CSS style방식 정의 (리액트)

컴포넌트에서 버튼 클래스로 가보겠다

-----------------------------------------------------------------------------------------------
⏺ VSC


⏺ Counter.jsx



export default function Counter() {

    function incrementCounterFunction() {
        console.log('increment clicked')
    }
    

    return(
    <div className='Counter'>
        <span className='count'>0</span>
        <div>
          //1: 이 안에서 스타일을 정의할 것이다
         <button className="counterButton" 
                 onClick={incrementCounterFunction}
              //1-1: 형식을 이렇게 변경한 다음 이 밑에서 스타일을 정의해 보겠다
              //style속성을 추가하고, 스타일을 어떻게 정의해 볼까?, 여기에 바로 스타일을 정의하면 되겠지? 
              //그럼 font-size를 추가하고 100px로 지정해 보겠다 동작할까?
                 style="font-size: 100px"

          >+1</button>
        </div>
    </div>
    )
}
-----------------------------------------------------------------------------------------------
                                                |
                                                V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000 사이트화면 ==>

(자세한것 확인 하려면 3000으로 접속...)
(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  


                                          

                                  
-------------------------------------------------------------------------------------------

아무것도 나오지 않는다 

--------------------------------------------------------------------------------------------

⏺ cmd창 >


Compiled with warnings.

[eslint]
src\components\counter\Counter.jsx
  Line 14:18:  Style prop value must be an object  react/style-prop-object

Search for the keywords to learn more about each warning.
To ignore, add // eslint-disable-next-line to the line before.

WARNING in [eslint]
src\components\counter\Counter.jsx
  Line 14:18:  Style prop value must be an object  react/style-prop-object

webpack compiled with 1 warning
--------------------------------------------------------------------------------------------

Style 프로퍼티 값은 객체여야 한다고 나온다
무슨 뜻일까?

-----------------------------------------------------------------------------------------------
⏺ VSC


⏺ Counter.jsx



export default function Counter() {

    function incrementCounterFunction() {
        console.log('increment clicked')
    }
    

    return(
    <div className='Counter'>
        <span className='count'>0</span>
        <div>
         <button className="counterButton" 
                 onClick={incrementCounterFunction}
                  //2: Style에는 이렇게 객체 형태의 값을 넣어야 한다는 뜻이다, 이렇게 하면 동작할까? 저장하면
                 style={font-size: 100px}
         
         >+1</button>
        </div>
    </div>
    )
}
-----------------------------------------------------------------------------------------------
                                                |
                                                V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000 사이트화면 ==>

(자세한것 확인 하려면 3000으로 접속...)

Compiled with problems:
×
ERROR in ./src/components/counter/Counter.jsx
Module build failed (from ./node_modules/babel-loader/lib/index.js):
SyntaxError: C:\study\frontend\todo-app\src\components\counter\Counter.jsx: Unexpected token, expected "}" (14:33)

  12 |          <button className="counterButton" 
  13 |                  onClick={incrementCounterFunction}
> 14 |                  style={font-size: 100px}
     |                                  ^
  15 |          
  16 |          >+1</button>
  17 |         </div>
    at constructor (C:\study\frontend\todo-app\node_modules\@babel\parser\lib\index.js:351:19)
  ....
ERROR
[eslint] 
src\components\counter\Counter.jsx
  Line 14:33:  Parsing error: Unexpected token, expected "}" (14:33)
-------------------------------------------------------------------------------------------

또 오류가 난다. '}' 토큰이 없어서 모듈 빌드가 실패했다고 나온다, 왜일까?

-----------------------------------------------------------------------------------------------
⏺ VSC


⏺ Counter.jsx



export default function Counter() {

    function incrementCounterFunction() {
        console.log('increment clicked')
    }
    

    return(
    <div className='Counter'>
        <span className='count'>0</span>
        <div>
         <button className="counterButton" 
                 onClick={incrementCounterFunction}
                  //3: 아마도 여기에 큰따옴표를 붙이지 않아서 그런 것 같다, 100px이건 값이다 (font-size:)앞쪽은 프로퍼티이고 뒤쪽은 (100px) 값이다
                  //이렇게 하면 될까?
                 style={font-size: "100px"}
         
         >+1</button>
        </div>
    </div>
    )
}
-----------------------------------------------------------------------------------------------
                                                |
                                                V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000 사이트화면 ==>

(자세한것 확인 하려면 3000으로 접속...)

Compiled with problems:
×
ERROR in ./src/components/counter/Counter.jsx
Module build failed (from ./node_modules/babel-loader/lib/index.js):
SyntaxError: C:\study\frontend\todo-app\src\components\counter\Counter.jsx: Unexpected token, expected "}" (14:33)

  12 |          <button className="counterButton" 
  13 |                  onClick={incrementCounterFunction}
> 14 |                  style={font-size: "100px"}
     |                                  ^
  15 |          
  16 |          >+1</button>
  17 |         </div>
  ....
ERROR
[eslint] 
src\components\counter\Counter.jsx
  Line 14:33:  Parsing error: Unexpected token, expected "}" (14:33)
-------------------------------------------------------------------------------------------

이번에도 동작하지 않는다, 마찬가지로 잘못된 토큰 오류가 발생한다


-----------------------------------------------------------------------------------------------
⏺ VSC


⏺ Counter.jsx



export default function Counter() {

    function incrementCounterFunction() {
        console.log('increment clicked')
    }
    

    return(
    <div className='Counter'>
        <span className='count'>0</span>
        <div>
         <button className="counterButton" 
                 onClick={incrementCounterFunction}
                  //4: JavaScript에선 프로퍼티 이름에 붙임표(-)를 포함할 수 없기 때문이다, 뒷부분의 첫 글자를 대문자로 바꿔줘야 한다
                  //'font-size'가 아니라 'fontSize'로 바꿔야 한다, 이렇게 바꾸면 이번에는 될까?
                 style={fontSize: "100px"}
         
         >+1</button>
        </div>
    </div>
    )
}
-----------------------------------------------------------------------------------------------
                                                |
                                                V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000 사이트화면 ==>

(자세한것 확인 하려면 3000으로 접속...)

Compiled with problems:
×
ERROR in ./src/components/counter/Counter.jsx
Module build failed (from ./node_modules/babel-loader/lib/index.js):
SyntaxError: C:\study\frontend\todo-app\src\components\counter\Counter.jsx: Unexpected token, expected "}" (14:32)

  12 |          <button className="counterButton" 
  13 |                  onClick={incrementCounterFunction}
> 14 |                  style={fontSize: "100px"}
     |                                 ^
  15 |          
  16 |          >+1</button>
  17 |         </div>
  ....
ERROR
[eslint] 
src\components\counter\Counter.jsx
  Line 14:33:  Parsing error: Unexpected token, expected "}" (14:33)
-------------------------------------------------------------------------------------------

대답은 '아니오' 이다

-----------------------------------------------------------------------------------------------
⏺ VSC


⏺ Counter.jsx



export default function Counter() {

    function incrementCounterFunction() {
        console.log('increment clicked')
    }
    

    return(
    <div className='Counter'>
        <span className='count'>0</span>
        <div>
         <button className="counterButton" 
                 onClick={incrementCounterFunction}
                  //5: 마지막으로 해야 할 게 있는데, 앞뒤에서 중괄호를 한 번 더 여닫아줘야 한다, 이번에는 될까?, 저장하면
                 style={{fontSize: "100px"}}

         >+1</button>
        </div>
    </div>
    )
}
-----------------------------------------------------------------------------------------------
                                                |
                                                V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000 사이트화면 ==>

(자세한것 확인 하려면 3000으로 접속...)
(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  


                                          
                                        0
                                     ________
                                    |        |
                                    |   +1   | (<=여기선 표시가 안되지만 +1이 100px크기로 커짐)
                                    |        |
                                     ‾‾‾‾‾‾‾‾   
                                  
-------------------------------------------------------------------------------------------

보다시피 글씨가 100픽셀로 표시된다 좋다,

-----------------------------------------------------------------------------------------------
⏺ VSC


⏺ Counter.jsx



export default function Counter() {

    function incrementCounterFunction() {
        console.log('increment clicked')
    }
    

    return(
    <div className='Counter'>
        <span className='count'>0</span>
        <div>
         <button className="counterButton" 
                 onClick={incrementCounterFunction}
                  //6: 크기를 좀 줄여서 30px로 바꿔주겠다 
                 style={{fontSize: "30px"}}

         >+1</button>
        </div>
    </div>
    )
}
-----------------------------------------------------------------------------------------------
                                                |
                                                V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000 사이트화면 ==>

(자세한것 확인 하려면 3000으로 접속...)
(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  


                                          
                                        0
                                      ______
                                     |  +1  | (<=여기선 표시가 안되지만 +1이 30px크기로 커짐)
                                      ‾‾‾‾‾‾ 
                                  
-------------------------------------------------------------------------------------------

글자 크기가 30픽셀로 바뀌었다
보기 좋다 
이런 식으로 요소에서 직접 CSS 스타일을 정의할 수 있다


이렇게 요소에서 바로 스타일을 정의할 때 좀 더 권장되는 방식은 여기 있는 속성값을 별도의 스타일 객체로 정의하는 것이다

-----------------------------------------------------------------------------------------------
⏺ VSC


⏺ Counter.jsx



export default function Counter() {

    //7:위쪽에서 상수를 선언하고 변수명은 'buttonStyle'로 하겠다, 여기에 속성값을 넣는다//7-1:아래 버튼의 style위로..
    const buttonStyle = {fontSize: "30px"}; 

    function incrementCounterFunction() {
        console.log('increment clicked')
    }
    

    return(
    <div className='Counter'>
        <span className='count'>0</span>
        <div>
         <button className="counterButton" 
                 onClick={incrementCounterFunction}
                 //7-1: 그런 다음 style에 buttonStyle을 넣고, 이제 앞선 강의에서 함수 이름에 중괄호를 붙였던 이유를 알겠지?
                 //이건 JSX 문법이다, JSX 문법에서 이렇게 중괄호를 열면 JavaScript 객체 값에 접근한다는 걸 의미한다, 중괄호를 연 다음에는 다시 닫아주고,
                 //JavaScript XML의 객체 표기법이지, 우리는 이 안에서 또 다른 객체를 정의한 것이다, ( const buttonStyle = {fontSize: "30px"}; )<=이 객체에는 JavaScript 속성과 값이 있고 이렇게 저장하면 
                 style={buttonStyle}
         >+1</button>
        </div>
    </div>
    )
}
-----------------------------------------------------------------------------------------------
                                                |
                                                V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000 사이트화면 ==>

(자세한것 확인 하려면 3000으로 접속...)
(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  


                                          
                                        0
                                      ______
                                     |  +1  | (<=여기선 표시가 안되지만 +1이 30px크기로 커짐)
                                      ‾‾‾‾‾‾ 
                                  
-------------------------------------------------------------------------------------------

이런 식으로 화면에 표시된다

그럼 이제 스타일을 조금 더 추가해 좀 더 예쁜 모양으로 만들어 보겠다

-----------------------------------------------------------------------------------------------
⏺ VSC


⏺ Counter.jsx



export default function Counter() {

    //8: JavaScript 객체로 정의하는 거니까 뒤에 쉼표를 붙인 다음 'backgroundColor'를 추가하겠다 배경색은 원하는 대로 지정하면 된다 '#00a5ab'라는 걸로 하겠다
    const buttonStyle = {
          fontSize: "30px",
          backgroundColor: "#00a5ab"
    };

    function incrementCounterFunction() {
        console.log('increment clicked')
    }
    

    return(
    <div className='Counter'>
        <span className='count'>0</span>
        <div>
         <button className="counterButton" 
                 onClick={incrementCounterFunction}
                 style={buttonStyle}
         >+1</button>
        </div>
    </div>
    )
}

-----------------------------------------------------------------------------------------------
어떻게 나오는지 보자                             |
                                                V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000 사이트화면 ==>

(자세한것 확인 하려면 3000으로 접속...)
(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  


                                          
                                        0
                                      ______
                                     |  +1  | (<=바탕 색상이 어두운 민트계열로 생김)
                                      ‾‾‾‾‾‾ 
                                  
-------------------------------------------------------------------------------------------

좋다, +1 뒤로 배경색이 보인다

-----------------------------------------------------------------------------------------------
⏺ VSC


⏺ Counter.jsx



export default function Counter() {

    const buttonStyle = {
          fontSize: "30px",
          backgroundColor: "#00a5ab"

          //9: width 속성도 추가하겠다 값은 100px로 지정하겠다, 좋다
          width: "100px",
          //9-1: 그리고 마진은 10px로 지정하겠다
          margin: "10px",
          //9-2: 글자 색은 흰색으로 할 거니까 color는 'white'로 하겠다
          color: "white",
          //9-3: 패딩도 약간 추가하겠다, padding은 15px로 지정하겠다
          padding: "15px", 
    };

    function incrementCounterFunction() {
        console.log('increment clicked')
    }
    

    return(
    <div className='Counter'>
        <span className='count'>0</span>
        <div>
         <button className="counterButton" 
                 onClick={incrementCounterFunction}
                 style={buttonStyle}
         >+1</button>
        </div>
    </div>
    )
}

-----------------------------------------------------------------------------------------------
                                                |
                                                V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000 사이트화면 ==>

(자세한것 확인 하려면 3000으로 접속...)
(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  


                                          
                                        0
                                      _________
                                     |   +1    | 
                                     |         |(<=글자색, 패딩,width, 마진 적용됨)
                                      ‾‾‾‾‾‾‾‾‾ 
                                  
-------------------------------------------------------------------------------------------

거의 다 된 것 같다, 마지막으로 버튼을 조금 둥굴게 만들어 보겠다

-----------------------------------------------------------------------------------------------
⏺ VSC


⏺ Counter.jsx




export default function Counter() {

    const buttonStyle = {
        fontSize: "30px",
        backgroundColor: "#00a5ab",
        width: "100px",    
        margin: "10px",
        color: "white",
        padding: "15px",

        //10: 그러려면 border-radius라는 속성을 추가해야 한다, JavaScript 객체에서는 어떻게 써야 할까?
        //JavaScript에서 이 속성을 사용할 때 'borderRadius'로 써야 한다 값은 30px로 지정하겠다, 저장하겠다
        borderRadius: "30px"
    };

    function incrementCounterFunction() {
        console.log('increment clicked')
    }
    

    return(
    <div className='Counter'>
        <span className='count'>0</span>
        <div>
         <button className="counterButton" 
                 onClick={incrementCounterFunction}
                 style={buttonStyle}
         >+1</button>
        </div>
    </div>
    )
}
-----------------------------------------------------------------------------------------------
                                                |
                                                V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000 사이트화면 ==>

(자세한것 확인 하려면 3000으로 접속...)
(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  


                                          
                                        0
                                       
                                     ◜ ‾‾‾‾‾‾‾ ◝ 
                                     |   +1    | (<=border-radius 적용됨)
                                     ◟ _______ ◞ 
                                  
-------------------------------------------------------------------------------------------

좋다, +1 버튼을 둥글게 만들었다


글자 크기를 조금 줄이겠다

-----------------------------------------------------------------------------------------------
⏺ VSC


⏺ Counter.jsx



export default function Counter() {

    const buttonStyle = {

        //11: 16 픽셀로 줄였음..
        fontSize: "16px",
        backgroundColor: "#00a5ab",
        width: "100px",    
        margin: "10px",
        color: "white",
        padding: "15px",
        borderRadius: "30px"  
    };

    function incrementCounterFunction() {
        console.log('increment clicked')
    }
    

    return(
    <div className='Counter'>
        <span className='count'>0</span>
        <div>
         <button className="counterButton" 
                 onClick={incrementCounterFunction}
                 style={buttonStyle}
         >+1</button>
        </div>
    </div>
    )
}
-----------------------------------------------------------------------------------------------

이제 이렇게 멋진 버튼이 완성됐다, JavaScript 객체를 정의해 버튼 스타일을 적용해 봤다



하지만 가장 좋은 방법은 CSS 파일을 만드는 것이다, 
    const buttonStyle = {
        fontSize: "30px",
        backgroundColor: "#00a5ab",
        width: "100px",    
        margin: "10px",
        color: "white",
        padding: "15px",
        borderRadius: "30px"  
    };
이렇게 JavaScript 객체를 정의하는 것보다
CSS 파일에 정의하는 게 더 나은 접근 방식이다


