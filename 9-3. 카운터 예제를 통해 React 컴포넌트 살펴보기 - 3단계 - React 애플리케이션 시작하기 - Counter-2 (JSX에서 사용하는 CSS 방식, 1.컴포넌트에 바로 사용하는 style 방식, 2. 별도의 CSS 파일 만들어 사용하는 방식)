

Define CSS in JSX

  ________________________________________________________________________
 |   const customStyle = {                                                |  
 |     backgroundColor: "green",                                          |                    
 |     fontSize: "16px",                                                  |          
 |     padding: "15px 30px",                                              |              
 |     color: "white",                                                    |        
 |     width: "100px",                                                    |          
 |     border: "1px solid #666666",                                       |               
 |     borderRadius: "30px",                                              |                  
 |   };                                                                   |         
 |                                                                        |                       
 |   <button style={customStyle}>+1</button>                              |                  
 |                                                                        |                 
 |   <button className="cssClass">+1</button>                             |                     
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾

● Options of styling your React components
  ■ 1:style
    ○ Error:<button style={border-radius:30px}>
    ○ Correct Syntax: <button style={{borderRadius:"30px"}>    
  ■ 2: className
    ○ Define the cssClass in your component CSS file



이번 학습엔 버튼과 카운터에 필요한 CSS를 정의하는 데 집중하겠다
● Options of styling your React components
리액트 컴포넌트 스타일은 다양한 방식으로 적용할 수 있다 
  ■ 1:style
    ○ Error:<button style={border-radius:30px}>
    ○ Correct Syntax: <button style={{borderRadius:"30px"}> 
한 가지 방법은 'style'속성을 사용하는 것이다
스타일을 요소 자체의 속성으로 포함시키는 방법이지
스타일을 요소 자체의 속성으로 포함시키는 방법이지
  ■ 2: className
    ○ Define the cssClass in your component CSS file
두 번째 방법은 'className'을 사용하는 것이다
지금까지는 className만 사용했지

이번 단계에선 style과 className을 모두 사용해 보자
그럼 이제 버튼 클래스에 사용할 스타일을 정의해보자


🔵 CSS style방식 정의 (리액트)

컴포넌트에서 버튼 클래스로 가보겠다

-----------------------------------------------------------------------------------------------
⏺ VSC


⏺ Counter.jsx



export default function Counter() {

    function incrementCounterFunction() {
        console.log('increment clicked')
    }
    

    return(
    <div className='Counter'>
        <span className='count'>0</span>
        <div>
          //1: 이 안에서 스타일을 정의할 것이다
         <button className="counterButton" 
                 onClick={incrementCounterFunction}
              //1-1: 형식을 이렇게 변경한 다음 이 밑에서 스타일을 정의해 보겠다
              //style속성을 추가하고, 스타일을 어떻게 정의해 볼까?, 여기에 바로 스타일을 정의하면 되겠지? 
              //그럼 font-size를 추가하고 100px로 지정해 보겠다 동작할까?
                 style="font-size: 100px"

          >+1</button>
        </div>
    </div>
    )
}
-----------------------------------------------------------------------------------------------
                                                |
                                                V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000 사이트화면 ==>

(자세한것 확인 하려면 3000으로 접속...)
(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  


                                          

                                  
-------------------------------------------------------------------------------------------

아무것도 나오지 않는다 

--------------------------------------------------------------------------------------------

⏺ cmd창 >


Compiled with warnings.

[eslint]
src\components\counter\Counter.jsx
  Line 14:18:  Style prop value must be an object  react/style-prop-object

Search for the keywords to learn more about each warning.
To ignore, add // eslint-disable-next-line to the line before.

WARNING in [eslint]
src\components\counter\Counter.jsx
  Line 14:18:  Style prop value must be an object  react/style-prop-object

webpack compiled with 1 warning
--------------------------------------------------------------------------------------------

Style 프로퍼티 값은 객체여야 한다고 나온다
무슨 뜻일까?

-----------------------------------------------------------------------------------------------
⏺ VSC


⏺ Counter.jsx



export default function Counter() {

    function incrementCounterFunction() {
        console.log('increment clicked')
    }
    

    return(
    <div className='Counter'>
        <span className='count'>0</span>
        <div>
         <button className="counterButton" 
                 onClick={incrementCounterFunction}
                  //2: Style에는 이렇게 객체 형태의 값을 넣어야 한다는 뜻이다, 이렇게 하면 동작할까? 저장하면
                 style={font-size: 100px}
         
         >+1</button>
        </div>
    </div>
    )
}
-----------------------------------------------------------------------------------------------
                                                |
                                                V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000 사이트화면 ==>

(자세한것 확인 하려면 3000으로 접속...)

Compiled with problems:
×
ERROR in ./src/components/counter/Counter.jsx
Module build failed (from ./node_modules/babel-loader/lib/index.js):
SyntaxError: C:\study\frontend\todo-app\src\components\counter\Counter.jsx: Unexpected token, expected "}" (14:33)

  12 |          <button className="counterButton" 
  13 |                  onClick={incrementCounterFunction}
> 14 |                  style={font-size: 100px}
     |                                  ^
  15 |          
  16 |          >+1</button>
  17 |         </div>
    at constructor (C:\study\frontend\todo-app\node_modules\@babel\parser\lib\index.js:351:19)
  ....
ERROR
[eslint] 
src\components\counter\Counter.jsx
  Line 14:33:  Parsing error: Unexpected token, expected "}" (14:33)
-------------------------------------------------------------------------------------------

또 오류가 난다. '}' 토큰이 없어서 모듈 빌드가 실패했다고 나온다, 왜일까?

-----------------------------------------------------------------------------------------------
⏺ VSC


⏺ Counter.jsx



export default function Counter() {

    function incrementCounterFunction() {
        console.log('increment clicked')
    }
    

    return(
    <div className='Counter'>
        <span className='count'>0</span>
        <div>
         <button className="counterButton" 
                 onClick={incrementCounterFunction}
                  //3: 아마도 여기에 큰따옴표를 붙이지 않아서 그런 것 같다, 100px이건 값이다 (font-size:)앞쪽은 프로퍼티이고 뒤쪽은 (100px) 값이다
                  //이렇게 하면 될까?
                 style={font-size: "100px"}
         
         >+1</button>
        </div>
    </div>
    )
}
-----------------------------------------------------------------------------------------------
                                                |
                                                V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000 사이트화면 ==>

(자세한것 확인 하려면 3000으로 접속...)

Compiled with problems:
×
ERROR in ./src/components/counter/Counter.jsx
Module build failed (from ./node_modules/babel-loader/lib/index.js):
SyntaxError: C:\study\frontend\todo-app\src\components\counter\Counter.jsx: Unexpected token, expected "}" (14:33)

  12 |          <button className="counterButton" 
  13 |                  onClick={incrementCounterFunction}
> 14 |                  style={font-size: "100px"}
     |                                  ^
  15 |          
  16 |          >+1</button>
  17 |         </div>
  ....
ERROR
[eslint] 
src\components\counter\Counter.jsx
  Line 14:33:  Parsing error: Unexpected token, expected "}" (14:33)
-------------------------------------------------------------------------------------------

이번에도 동작하지 않는다, 마찬가지로 잘못된 토큰 오류가 발생한다


-----------------------------------------------------------------------------------------------
⏺ VSC


⏺ Counter.jsx



export default function Counter() {

    function incrementCounterFunction() {
        console.log('increment clicked')
    }
    

    return(
    <div className='Counter'>
        <span className='count'>0</span>
        <div>
         <button className="counterButton" 
                 onClick={incrementCounterFunction}
                  //4: JavaScript에선 프로퍼티 이름에 붙임표(-)를 포함할 수 없기 때문이다, 뒷부분의 첫 글자를 대문자로 바꿔줘야 한다
                  //'font-size'가 아니라 'fontSize'로 바꿔야 한다, 이렇게 바꾸면 이번에는 될까?
                 style={fontSize: "100px"}
         
         >+1</button>
        </div>
    </div>
    )
}
-----------------------------------------------------------------------------------------------
                                                |
                                                V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000 사이트화면 ==>

(자세한것 확인 하려면 3000으로 접속...)

Compiled with problems:
×
ERROR in ./src/components/counter/Counter.jsx
Module build failed (from ./node_modules/babel-loader/lib/index.js):
SyntaxError: C:\study\frontend\todo-app\src\components\counter\Counter.jsx: Unexpected token, expected "}" (14:32)

  12 |          <button className="counterButton" 
  13 |                  onClick={incrementCounterFunction}
> 14 |                  style={fontSize: "100px"}
     |                                 ^
  15 |          
  16 |          >+1</button>
  17 |         </div>
  ....
ERROR
[eslint] 
src\components\counter\Counter.jsx
  Line 14:33:  Parsing error: Unexpected token, expected "}" (14:33)
-------------------------------------------------------------------------------------------

대답은 '아니오' 이다

-----------------------------------------------------------------------------------------------
⏺ VSC


⏺ Counter.jsx



export default function Counter() {

    function incrementCounterFunction() {
        console.log('increment clicked')
    }
    

    return(
    <div className='Counter'>
        <span className='count'>0</span>
        <div>
         <button className="counterButton" 
                 onClick={incrementCounterFunction}
                  //5: 마지막으로 해야 할 게 있는데, 앞뒤에서 중괄호를 한 번 더 여닫아줘야 한다, 이번에는 될까?, 저장하면
                 style={{fontSize: "100px"}}

         >+1</button>
        </div>
    </div>
    )
}
-----------------------------------------------------------------------------------------------
                                                |
                                                V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000 사이트화면 ==>

(자세한것 확인 하려면 3000으로 접속...)
(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  


                                          
                                        0
                                     ________
                                    |        |
                                    |   +1   | (<=여기선 표시가 안되지만 +1이 100px크기로 커짐)
                                    |        |
                                     ‾‾‾‾‾‾‾‾   
                                  
-------------------------------------------------------------------------------------------

보다시피 글씨가 100픽셀로 표시된다 좋다,

-----------------------------------------------------------------------------------------------
⏺ VSC


⏺ Counter.jsx



export default function Counter() {

    function incrementCounterFunction() {
        console.log('increment clicked')
    }
    

    return(
    <div className='Counter'>
        <span className='count'>0</span>
        <div>
         <button className="counterButton" 
                 onClick={incrementCounterFunction}
                  //6: 크기를 좀 줄여서 30px로 바꿔주겠다 
                 style={{fontSize: "30px"}}

         >+1</button>
        </div>
    </div>
    )
}
-----------------------------------------------------------------------------------------------
                                                |
                                                V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000 사이트화면 ==>

(자세한것 확인 하려면 3000으로 접속...)
(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  


                                          
                                        0
                                      ______
                                     |  +1  | (<=여기선 표시가 안되지만 +1이 30px크기로 커짐)
                                      ‾‾‾‾‾‾ 
                                  
-------------------------------------------------------------------------------------------

글자 크기가 30픽셀로 바뀌었다
보기 좋다 
이런 식으로 요소에서 직접 CSS 스타일을 정의할 수 있다


이렇게 요소에서 바로 스타일을 정의할 때 좀 더 권장되는 방식은 여기 있는 속성값을 별도의 스타일 객체로 정의하는 것이다

-----------------------------------------------------------------------------------------------
⏺ VSC


⏺ Counter.jsx



export default function Counter() {

    //7:위쪽에서 상수를 선언하고 변수명은 'buttonStyle'로 하겠다, 여기에 속성값을 넣는다//7-1:아래 버튼의 style위로..
    const buttonStyle = {fontSize: "30px"}; 

    function incrementCounterFunction() {
        console.log('increment clicked')
    }
    

    return(
    <div className='Counter'>
        <span className='count'>0</span>
        <div>
         <button className="counterButton" 
                 onClick={incrementCounterFunction}
                 //7-1: 그런 다음 style에 buttonStyle을 넣고, 이제 앞선 강의에서 함수 이름에 중괄호를 붙였던 이유를 알겠지?
                 //이건 JSX 문법이다, JSX 문법에서 이렇게 중괄호를 열면 JavaScript 객체 값에 접근한다는 걸 의미한다, 중괄호를 연 다음에는 다시 닫아주고,
                 //JavaScript XML의 객체 표기법이지, 우리는 이 안에서 또 다른 객체를 정의한 것이다, ( const buttonStyle = {fontSize: "30px"}; )<=이 객체에는 JavaScript 속성과 값이 있고 이렇게 저장하면 
                 style={buttonStyle}
         >+1</button>
        </div>
    </div>
    )
}
-----------------------------------------------------------------------------------------------
                                                |
                                                V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000 사이트화면 ==>

(자세한것 확인 하려면 3000으로 접속...)
(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  


                                          
                                        0
                                      ______
                                     |  +1  | (<=여기선 표시가 안되지만 +1이 30px크기로 커짐)
                                      ‾‾‾‾‾‾ 
                                  
-------------------------------------------------------------------------------------------

이런 식으로 화면에 표시된다

그럼 이제 스타일을 조금 더 추가해 좀 더 예쁜 모양으로 만들어 보겠다

-----------------------------------------------------------------------------------------------
⏺ VSC


⏺ Counter.jsx



export default function Counter() {

    //8: JavaScript 객체로 정의하는 거니까 뒤에 쉼표를 붙인 다음 'backgroundColor'를 추가하겠다 배경색은 원하는 대로 지정하면 된다 '#00a5ab'라는 걸로 하겠다
    const buttonStyle = {
          fontSize: "30px",
          backgroundColor: "#00a5ab"
    };

    function incrementCounterFunction() {
        console.log('increment clicked')
    }
    

    return(
    <div className='Counter'>
        <span className='count'>0</span>
        <div>
         <button className="counterButton" 
                 onClick={incrementCounterFunction}
                 style={buttonStyle}
         >+1</button>
        </div>
    </div>
    )
}

-----------------------------------------------------------------------------------------------
어떻게 나오는지 보자                             |
                                                V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000 사이트화면 ==>

(자세한것 확인 하려면 3000으로 접속...)
(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  


                                          
                                        0
                                      ______
                                     |  +1  | (<=바탕 색상이 어두운 민트계열로 생김)
                                      ‾‾‾‾‾‾ 
                                  
-------------------------------------------------------------------------------------------

좋다, +1 뒤로 배경색이 보인다

-----------------------------------------------------------------------------------------------
⏺ VSC


⏺ Counter.jsx



export default function Counter() {

    const buttonStyle = {
          fontSize: "30px",
          backgroundColor: "#00a5ab"

          //9: width 속성도 추가하겠다 값은 100px로 지정하겠다, 좋다
          width: "100px",
          //9-1: 그리고 마진은 10px로 지정하겠다
          margin: "10px",
          //9-2: 글자 색은 흰색으로 할 거니까 color는 'white'로 하겠다
          color: "white",
          //9-3: 패딩도 약간 추가하겠다, padding은 15px로 지정하겠다
          padding: "15px", 
    };

    function incrementCounterFunction() {
        console.log('increment clicked')
    }
    

    return(
    <div className='Counter'>
        <span className='count'>0</span>
        <div>
         <button className="counterButton" 
                 onClick={incrementCounterFunction}
                 style={buttonStyle}
         >+1</button>
        </div>
    </div>
    )
}

-----------------------------------------------------------------------------------------------
                                                |
                                                V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000 사이트화면 ==>

(자세한것 확인 하려면 3000으로 접속...)
(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  


                                          
                                        0
                                      _________
                                     |   +1    | 
                                     |         |(<=글자색, 패딩,width, 마진 적용됨)
                                      ‾‾‾‾‾‾‾‾‾ 
                                  
-------------------------------------------------------------------------------------------

거의 다 된 것 같다, 마지막으로 버튼을 조금 둥굴게 만들어 보겠다

-----------------------------------------------------------------------------------------------
⏺ VSC


⏺ Counter.jsx




export default function Counter() {

    const buttonStyle = {
        fontSize: "30px",
        backgroundColor: "#00a5ab",
        width: "100px",    
        margin: "10px",
        color: "white",
        padding: "15px",

        //10: 그러려면 border-radius라는 속성을 추가해야 한다, JavaScript 객체에서는 어떻게 써야 할까?
        //JavaScript에서 이 속성을 사용할 때 'borderRadius'로 써야 한다 값은 30px로 지정하겠다, 저장하겠다
        borderRadius: "30px"
    };

    function incrementCounterFunction() {
        console.log('increment clicked')
    }
    

    return(
    <div className='Counter'>
        <span className='count'>0</span>
        <div>
         <button className="counterButton" 
                 onClick={incrementCounterFunction}
                 style={buttonStyle}
         >+1</button>
        </div>
    </div>
    )
}
-----------------------------------------------------------------------------------------------
                                                |
                                                V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000 사이트화면 ==>

(자세한것 확인 하려면 3000으로 접속...)
(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  


                                          
                                        0
                                       
                                     ◜ ‾‾‾‾‾‾‾ ◝ 
                                     |   +1    | (<=border-radius 적용됨)
                                     ◟ _______ ◞ 
                                  
-------------------------------------------------------------------------------------------

좋다, +1 버튼을 둥글게 만들었다


글자 크기를 조금 줄이겠다

-----------------------------------------------------------------------------------------------
⏺ VSC


⏺ Counter.jsx



export default function Counter() {

    const buttonStyle = {

        //11: 16 픽셀로 줄였음..
        fontSize: "16px",
        backgroundColor: "#00a5ab",
        width: "100px",    
        margin: "10px",
        color: "white",
        padding: "15px",
        borderRadius: "30px"  
    };

    function incrementCounterFunction() {
        console.log('increment clicked')
    }
    

    return(
    <div className='Counter'>
        <span className='count'>0</span>
        <div>
         <button className="counterButton" 
                 onClick={incrementCounterFunction}
                 style={buttonStyle}
         >+1</button>
        </div>
    </div>
    )
}
-----------------------------------------------------------------------------------------------

이제 이렇게 멋진 버튼이 완성됐다, JavaScript 객체를 정의해 버튼 스타일을 적용해 봤다



하지만 가장 좋은 방법은 CSS 파일을 만드는 것이다, 
    const buttonStyle = {
        fontSize: "30px",
        backgroundColor: "#00a5ab",
        width: "100px",    
        margin: "10px",
        color: "white",
        padding: "15px",
        borderRadius: "30px"  
    };
이렇게 JavaScript 객체를 정의하는 것보다
CSS 파일에 정의하는 게 더 나은 접근 방식이다


🔵 CSS 파일 만들어서 사용

탐색창으로 가서 새로운 CSS 파일을 만들겠다, 폴더를 우클릭하고 새 파일에서 'Counter.css'를 만들겠다

-----------------------------------------------------------------------------------------------
⏺ VSC


⏺ Counter.css


//12: 여기에 방금 복사한 걸 붙여 넣겠다, 이렇게 붙여 넣겠다, 다음 주석 처리하겠다, CSS 문법대로 작성되지 않았기 떄문이다
//CSS에선 스타일 앞에 클래스 이름을 넣어야 한다, 이 스타일을 적용할 클래스는 counterButton이지 (<button className="counterButton"..), button을 넣어도 되고
/*   
  const buttonStyle = {
        fontSize: "30px",
        backgroundColor: "#00a5ab",
        width: "100px",    
        margin: "10px",
        color: "white",
        padding: "15px",
        borderRadius: "30px"  
    };
*/
//12-1: 우린 클래스 이름인 counterButton을 넣겠다
//여기에서 'counterButton'을 넣겠다, 그리고 속성 이름을 다시 바꿔줘야 한다 
  .counterButton {
    //12-2: CSS 문법에선 'font-size'이렇게 써야 한다, 모든 속성 뒤에는 세미콜론 ';'을 붙여야 하고 
        fontSize: "30px";
    //12-3: 이것도 background-color 로 바꾸고 ';'을 붙여준다, CSS 문법은 조금 다르기 때문에 모두 CSS 문법에 맞게 바꿔줘야 한다
    //margin 값은 10px이고 color 값은 white지 
        background-color: "#00a5ab";
        width: "100px";    
        margin: "10px";
        color: "white";
        //12-4: 여기 까지는 됐다
        padding: "15px";
        //12-5: 마지막으로 borderRadius도 이렇게 border-radius로 바꿔주면 되겠지 
        border-radius: "30px";  
    };
-----------------------------------------------------------------------------------------------

좋다, 다 된거 같다 바꾼걸 저장하고 
다시 Counter.jsx로 가서

-----------------------------------------------------------------------------------------------
⏺ VSC


⏺ Counter.jsx



export default function Counter() {


    function incrementCounterFunction() {
        console.log('increment clicked')
    }
    

    return(
    <div className='Counter'>
        <span className='count'>0</span>
        <div>
        //13: 클래스 이름이 제대로 지정되어 있는지 확인하겠다 잘 되어있다, 
         <button className="counterButton" 
                 onClick={incrementCounterFunction}
              //13-1: 이제 style 속성은 필요 업으니까 이건 지우도록 하겠다, 저장하고
               //  style={buttonStyle}  (<= 여기서만 주석처리 실제코드에선 삭제)
         >+1</button>
        </div>
    </div>
    )
}
-----------------------------------------------------------------------------------------------
확인해보면                                       |
                                                V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000 사이트화면 ==>

(자세한것 확인 하려면 3000으로 접속...)
(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  


                                          
                                        0
                                       ____
                                      | +1 |
                                       ‾‾‾‾
                                  
-------------------------------------------------------------------------------------------

이런.. 스타일이 적용되지 않았다
왜일까?


CSS를 임포트하지 않았기 때문이다 
-----------------------------------------------------------------------------------------------
⏺ VSC


⏺ Counter.jsx



//14: 'import' ./Counter.css" 로 임포트해야 한다, CSS 파일을 가져오는 건 간단하다, import 뒤에 가져올 CSS 파일의 이름을 넣기만 하면 된다, 그러면..
import './Counter.css'

export default function Counter() {


    function incrementCounterFunction() {
        console.log('increment clicked')
    }
    

    return(
    <div className='Counter'>
        <span className='count'>0</span>
        <div>
         <button className="counterButton" 
                 onClick={incrementCounterFunction}
         >+1</button>
        </div>
    </div>
    )
}
-----------------------------------------------------------------------------------------------
                                                |
                                                V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000 사이트화면 ==>

(자세한것 확인 하려면 3000으로 접속...)
(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  


                                          
                                        0
                                       ____
                                      | +1 |
                                       ‾‾‾‾
                                  
-------------------------------------------------------------------------------------------

여전히 아무것도 바뀌지 않았다 

빠르게 한 번 살펴보자

-----------------------------------------------------------------------------------------------
⏺ VSC


⏺ Counter.jsx



import './Counter.css'

export default function Counter() {


    function incrementCounterFunction() {
        console.log('increment clicked')
    }
    

    return(
    <div className='Counter'>
        <span className='count'>0</span>
        <div>
         <button className="counterButton" 
                 onClick={incrementCounterFunction}
         >+1</button>
        </div>
    </div>
    )
}

버튼의 클래스 이름은 counterButton이고 
버튼은 여기 있고 , Counter.css 로 가보자,

-----------------------------------------

⏺ Counter.css


/* const buttonStyle = {
    fontSize: "30px",
    backgroundColor: "#00a5ab",
    width: "100px",    
    margin: "10px",
    color: "white",
    padding: "15px",
    borderRadius: "30px"  
}; */

.counterButton {
    font-size: "30px";
    background-color: #00a5ab;
    width: "100px";   
    margin: "10px";
    color: "white";
    padding: "15px";
    border-radius: "30px";  
};

여기에도 똑같이 '.counterButton'이 있다
-----------------------------------------------------------------------------------------------

왜 스타일 적용이 안 될까?
CSS 에선 값에 큰따옴표를 붙일 필요가 없기 때문이다 

-----------------------------------------------------------------------------------------------
⏺ VSC


⏺ Counter.css


/* const buttonStyle = {
    fontSize: "30px",
    backgroundColor: "#00a5ab",
    width: "100px",    
    margin: "10px",
    color: "white",
    padding: "15px",
    borderRadius: "30px"  
}; */

//15: 값에 ""삭제!, 값에 붙어 있는 큰따옴표를 지워줘야 한다, 큰따옴표를 모두 지우겠다
//이게 올바른 CSS 문법이다, 이렇게 저장하고 
.counterButton {
    font-size: 30px;
    background-color: #00a5ab;
    width: 100px;   
    margin: 10px;
    color: white;
    padding: 15px;
    border-radius: 30px;  
};

-----------------------------------------------------------------------------------------------
확인해보면                                       |
                                                V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000 사이트화면 ==>

(자세한것 확인 하려면 3000으로 접속...)
(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  


                                          
                                        0
                                       
                                     ◜ ‾‾‾‾‾‾‾ ◝ 
                                     |   +1    | (<= 모든 스타일이 적용됨)
                                     ◟ _______ ◞ 
                                  
-------------------------------------------------------------------------------------------

+1 버튼 스타일이 적용됐다

이제 숫자 표시 부분의 스타일을 추가해 보겠다
카운트 부분의 클래스 이름은 count이다
클래스 이름으로 만들겠다

-----------------------------------------------------------------------------------------------
⏺ VSC


⏺ Counter.css


/* const buttonStyle = {
    fontSize: "30px",
    backgroundColor: "#00a5ab",
    width: "100px",    
    margin: "10px",
    color: "white",
    padding: "15px",
    borderRadius: "30px"  
}; */

.counterButton {
    font-size: 30px;
    background-color: #00a5ab;
    width: 100px;   
    margin: 10px;
    color: white;
    padding: 15px;
    border-radius: 30px;  
}

//16: '.count' 뒤에 스타일을 정의하겠다
.count {
  //16-1: 카운트를 표시할 글자 크기는 150px로 지정하겠다
    font-size: 150px;
  //16-2: 그리고 여기에 패딩을 약간 추가하겠다, padding을 추가해 20px 만큼 패딩을 넣겠다
}
-----------------------------------------------------------------------------------------------
                                                |
                                                V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000 사이트화면 ==>

(자세한것 확인 하려면 3000으로 접속...)
(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  


                                          
                                          0  ( <== 위의 150px, 패딩은 20px만큼 들어감 (여기선 확인 한됨))
                                        
                                     ◜ ‾‾‾‾‾‾‾ ◝ 
                                     |   +1    | 
                                     ◟ _______ ◞ 
                                  
-------------------------------------------------------------------------------------------

좋다 
이제 +1 버튼을 완성했으니까 
+1 버튼을 클릭했을 때 위에 있는 숫자가 증가하게 만들어 보자

CSS는 이 정도면 된 것 같다 


리액트 애플리케이션 관점에서 이런 식으로 스타일을 추가하는 것도 해봤고
Counter 컴포넌트와 분리된 CSS 파일을 추가해 필요한 스타일을 모두 정의하는 것도 해봤다
스타일을 정의할 때 Counter 컴포넌트에 있는 클래스들을 사용했고 

마지막으로 CSS에 몇 가지 속성을 추가로 정의해 버튼의 모양을 조금 더 보기 좋게 바꿔보겠다



-----------------------------------------------------------------------------------------------
⏺ VSC


⏺ Counter.css



/* const buttonStyle = {
    fontSize: "30px",
    backgroundColor: "#00a5ab",
    width: "100px",    
    margin: "10px",
    color: "white",
    padding: "15px",
    borderRadius: "30px"  
}; */

.counterButton {
    font-size: 30px;
    background-color: #00a5ab;
    width: 100px;   
    margin: 10px;
    color: white;
    padding: 15px;
    border-radius: 30px;  
    //17: 테두리 색깔이 일정하지 않으니까 스타일에 'border-color'를 추가하고 black으로 지정하겠다,
    border-color: black;
    //17-1: 'border-width'도 추가해 5px로 지정하고 저장
    border-width: 5px;
}

.count {
    font-size: 150px;
    padding: 20px;
}
-----------------------------------------------------------------------------------------------
                                                |
                                                V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000 사이트화면 ==>

(자세한것 확인 하려면 3000으로 접속...)
(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  


                                          
                                          0  
                                        
                                     ◜ ‾‾‾‾‾‾‾ ◝ 
                                     |   +1    |  (<= bordercolor 와 borderwidth가 적용됨)
                                     ◟ _______ ◞ 


-------------------------------------------------------------------------------------------

좋다, 괜찮은 것 같다
이렇게 +1 버튼과 카운터가 함께 표시되도록 만들었다 

여기 있는 CSS 속성 중에 잘 모르는 게 있어도 걱정할 필요는 없다 
본격적으로 구현을 시작하기 전에 모양새를 가다듬은 것뿐이다
그게 이번 단계의 목적이었다
다음 단계에선 더 재미있는 걸 해볼 것이다 







Define CSS in JSX

  ________________________________________________________________________
 |   const customStyle = {                                                |  
 |     backgroundColor: "green",                                          |                    
 |     fontSize: "16px",                                                  |          
 |     padding: "15px 30px",                                              |              
 |     color: "white",                                                    |        
 |     width: "100px",                                                    |          
 |     border: "1px solid #666666",                                       |               
 |     borderRadius: "30px",                                              |                  
 |   };                                                                   |         
 |                                                                        |                       
 |   <button style={customStyle}>+1</button>                              |                  
 |                                                                        |                 
 |   <button className="cssClass">+1</button>                             |                     
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾

● Options of styling your React components
  ■ 1:style
    ○ Error:<button style={border-radius:30px}>
    ○ Correct Syntax: <button style={{borderRadius:"30px"}>    
  ■ 2: className
    ○ Define the cssClass in your component CSS file




이번 시간에는 JSX에서 CSS를 정의하는 방법을 살펴봤다
두 가지 방법이 있었지 
  ■ 1:style
첫 번째는 style 속성을 사용해 요소 안에서 하드코딩하는 방식이었다
    ○ Error:<button style={border-radius:30px}> 이 방식에선 이 처럼 사용하면 오류가 발생한다,
요소 안에서 바로 스타일 값을 정의할 때는 반드시 중괄호를 이중으로 써야 한다 ( ○ Correct Syntax: <button style={{borderRadius:"30px"}> ) 
안에서 스타일을 정의한 다음, 중괄호를 두 번 닫아줘야 하고 
그리고 JavaScript 속성으로 스타일을 정의할 때는 붙임표 '-'를 사용하면 안 된다 ( border-radius ) -r에 해당하는 부분을 대문자 R로 바꿔줘야 한다
  ■ 2: className
이렇게 정의한 속성을 CSS 방식으로 바꾸는 것도 해봤다 
    ○ Define the cssClass in your component CSS file
컴포넌트에서 클래스 이름을 'className="cssClass"' 이런 식으로 정의하고, 이 클래스에 대한 스타일을 CSS 파일에 정의해봤다

다음 시간에 보겠다
