
Comparing Lazy Initialization vs Eager Initialization

Heading                        Lazy Initialization                                           Eager Initialization
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ
Initialization time            Bean initialized when the it is made use of                   Bean initialized at startup of the application
                               in your application
-------------------------------------------------------------------------------------------------------------------------------------------------------------
Default                        NOT Default                                                   Default
-------------------------------------------------------------------------------------------------------------------------------------------------------------
Code Snippet                   @Lazy OR @Lazy(value=true)                                    @Lazy(value=false) OR (Absence of @Lazy)
-------------------------------------------------------------------------------------------------------------------------------------------------------------
What happens if there          Errors will result in runtime exceptions                      Errors will prevent application from starting up
are errors in initializing?
-------------------------------------------------------------------------------------------------------------------------------------------------------------
Usage                          Rarely used                                                   Very frequently used
-------------------------------------------------------------------------------------------------------------------------------------------------------------
Memory Consumption             Less (until bean is initialized)                              All beans are initialized at startup
-------------------------------------------------------------------------------------------------------------------------------------------------------------
ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ


이번 학습에선 지연초기화와 즉시초기화를 빠르게 비교해 보겠다
초기화 시간에 대해 이야기하며 시작해 보자

● Initialization time

- Lazy Initialization
Bean initialized when the it is made use of in your application
지연 초기화의 경우 Bean은 애플리케이션에서 처음 사용될 때 초기화된다

- Eager Initialization
Bean initialized at startup of the application
반면 즉시 초기화일 때 Bean은 애플리케이션이 시작되거나 Spring 컨텍스트가 시작될 때 초기화된다

● Default
- Lazy Initialization
NOT Default
지연 초기화는 기본값이 아니고  

- Eager Initialization
Default
즉시 초기화가 기본값이다

● Code Snippet
- Lazy Initialization
@Lazy OR @Lazy(value=true)
지연 초기화를 사용하려면 @Lazy를 사용하거나 @Lazy의 속성값이 true라고 입력하면 된다

- Eager Initialization
@Lazy(value=false) OR (Absence of @Lazy)
즉시 초기화를 사용하려면 @Lazy 값이 false라고 하거나 @Lazy를 없앤다
그러니까 @ 컴포넌트만 있고 @Lazy는 없다면 즉시 초기화가 된다

다음으로, 초기화하다가 오류가 발생하면 어떻게 될까?
● What happens if there are errors in initializing?
- Lazy Initialization
Errors will result in runtime exceptions
지연 초기화를 사용하고 있다면 오류는 런타임 예외가 된다

- Eager Initialization
Errors will prevent application from starting up
반면 즉시 초기화의 경우, 오류가 있다면 애플리케이션이 시작되지 않는다 애플리케이션은 시작되지도 않는 것이다

● Usage
- Lazy Initialization
Rarely used 
지연 초기화는 아주 드물게 사용된다

- Eager Initialization
Very frequently used
즉시 초기화가 자주 사용된다

메모리 사용량을 비교해보면 , 
● Memory Consumption
- Lazy Initialization
Less (until bean is initialized)
지연 초기화의 경우 메모리 사용량이 조금 적을 수 있다 Bean이 초기화될 때까지는 메모리를 많이 사용하지 않기때문이다

- Eager Initialization
All beans are initialized at startup
즉시 초기화일 경우 모든 Bean은 시작 시 초기화되므로, 시작할 때 모든 것이 로드된다


어떤 시나리오가 지연 초기화와 즉시 초기화에 적합할까?
애플리케이션에 Bean이 아주 드물게 사용될 때 지연 초기화가 좋다
시작할 때부터 Bean을 로드하지 않고, 특히 사용해야 할 때만 가죠오는 것이다

즉시 초기화는 기본값이고 거의 모든 Bean에 권장되는 설정이다



/*
이번 단계에선 지연 초기화와 즉시 초기화를 비교해서 살펴봤다
*/
