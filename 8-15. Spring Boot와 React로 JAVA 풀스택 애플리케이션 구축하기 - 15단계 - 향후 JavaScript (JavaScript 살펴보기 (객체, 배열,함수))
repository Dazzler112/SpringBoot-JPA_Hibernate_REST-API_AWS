

지난 몇 개 강의 동안 우리는 JavaScript의 기본과 리액트 프레임워크의 기본을 이해했다
이번 강의에선 JavaScript의 기본 몇 가지를 더 집중해서 살펴보겠다

learning-examples 폴더로 가겠다 그리고 새 파일을 생성한다 LearningJavaScript.jsx라고 하겠다
여기에서 우리는 함수를 만들어볼 것이다

------------------------------------------------------------------------------------------
⏺ VSC


⏺ LearningJavaScript.jsx


//1:function LearningJavaScript라고 하겠다, 여러 번 해봤던 거지 앞에 export default function으로 하고
export default function LearningJavaScript () {
    //1-1: 여기에서 return 할 것이다, 반환하고 싶은 JSX를 주는 거다, 무언가 반환하면 컴파일이 되겠지
    //1-1 계속: 일단 지금은 빈 div를 반환하겠다, 좋다, 이제 어디로 갈까? LearningComponent에서 마지막으로 추가한다//1-2: LearningComponent.jsx파일로..
    return(
      <div  />
    )
}

--------------------------------------------


⏺ LearningComponent.jsx



import FirstComponent from './FirstComponent';
import {FifthComponent} from './FirstComponent';
import SecondComponent from './SecondComponent';
import ThirdComponent  from './ThirdComponent';
import FourthComponent from './FourthComponent';
//1-2 계속: 임포트도 추가 './LearningJavaScript', LearningJavaScript를 LearningJavaScript에서 불러오는 거지, 좋다
import LearningJavaScript from './LearningJavaScript';

export default function LearningComponent() {
    return (
        <div className="App">
        <FirstComponent />
        <SecondComponent />
        <ThirdComponent/>
        <FourthComponent />
        <FifthComponent />

        //1-2: LearningJavaScript를 마지막으로 추가하고 임포트도 해주겠다
        <LearningJavaScript />
      </div>
    )
  }

------------------------------------------------------------------------------------------
                                                    |
                                                    V
------------------------------------------------------------------------------------------
⏺ VSC


⏺ LearningJavaScript.jsx


export default function LearningJavaScript () {
    return(
      //2: 내용을 확인하기 위해 div를 열어주고 닫아주고 안에다가 LearningJavaScript를 써주겠다, 저장하고
      <div>LearningJavaScript</div>
    )
}

------------------------------------------------------------------------------------------
오류가 없는지 확인해볼까?

------------------------------------------------------------------------------------------

⏺ cmd 창 >


Compiled successfully!

You can now view todo-app in the browser.

  Local:            http://localhost:3000
  On Your Network:  http://172.27.0.1:3000

Note that the development build is not optimized.
To create a production build, use npm run build.

webpack compiled successfully
------------------------------------------------------------------------------------------
컴파일이 잘 된다
좋다                                         
                                            |
                                            V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000 사이트화면 ==>

(자세한것 확인 하려면 3000으로 접속...)
(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  



                                           First Component
                                           Second Component
                                           Third Component
                                           Fourth Component
                                           Fourth Component
                                           Fifth Component
                                          LearningJavaScript


--------------------------------------------------------------------------------------------

LearningJavaScript도 여기 보인다, 멋지다




그럼 이 단계에서 LearningJavaScript에 집중해보자

🔵 자바스크립트 객체정의

------------------------------------------------------------------------------------------
⏺ VSC


⏺ LearningJavaScript.jsx


//3: 여기에서 JavaScript 객체를 정의해보자, Java에선 객체를 생성하고 싶으면 클래스를 생성해서 클래스에 해당하는 객체를 만들지
//하지만 JavaScript에선 그럴 필요가 없다, 지금은 상수 객체를 만들겠다, const라 쓰고 person에 뭘 줄까?
//여기 바로 중괄호를 열어 객체를 생성할 수 있다 그리고 중괄호 안에 해당 객체가 필요한 속성을 모두 넣어주는 것이다
const person = {
    //3-1: name은 Ranaga라고 하자, 좋다, LearningJavaScript()컴포넌트에선 LearningJavaScript라고 되어있지, 여기에선 값을 보여주고 싶다, 지금까진 그냥 텍스트만 보였지, person.name을 여기 LearningJavaScrip컴포넌트에 보여주고 싶다면 어떻게 할까?? //3-2: LearningJavaScript컴포넌트로...
}

export default function LearningJavaScript () {
    return(
        //3-2: 방법은 다시 중괄호를 열고 닫은 다음 안에다가 person.name을 넣어준다, 저장하고 결과를 보자
        <div>{person.name}</div>
    )
}
------------------------------------------------------------------------------------------
                                            |
                                            V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000 사이트화면 ==>

(자세한것 확인 하려면 3000으로 접속...)
(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  



                                           First Component
                                           Second Component
                                           Third Component
                                           Fourth Component
                                           Fourth Component
                                           Fifth Component
                                                Ranga


--------------------------------------------------------------------------------------------

Ranga가 나오는 게 보인다, Ranga가 여기 출력됐다
좋다

------------------------------------------------------------------------------------------
⏺ VSC


⏺ LearningJavaScript.jsx


//4: Ranga Karanam으로 바꾸면 바뀌는지 볼까?
const person = {
    name: 'Ranga Karanam'
}


export default function LearningJavaScript () {
    return(
        <div>{person.name}</div>
    )
}

------------------------------------------------------------------------------------------
                                            |
                                            V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000 사이트화면 ==>

(자세한것 확인 하려면 3000으로 접속...)
(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  



                                           First Component
                                           Second Component
                                           Third Component
                                           Fourth Component
                                           Fourth Component
                                           Fifth Component
                                            Ranga Karanam


--------------------------------------------------------------------------------------------

Ranga Karanam이라고 나온다
좋다


여기에 더 많은 속성을 넣을 수 있다 
JavaScript에선 원하는 만큼 속성을 넣을 수 있다

------------------------------------------------------------------------------------------
⏺ VSC


⏺ LearningJavaScript.jsx



const person = {
    name: 'Ranga Karanam',
    //5: 예를 들어 address라는속성을 줄 수도 있겠지 Ranga가 123 Baker Street에 거주한다 London
    address: '123 Baker Street London'    
}


export default function LearningJavaScript () {
    return(
        <>(5-2 계속: <> 작성)

          <div>{person.name}</div>
        //5-1: 여기 div를 하나 추가해서 person.address를 주는 거지
          <div>{person.address}</div>

        //5-2: 오류가 나는 게 보인다 빈 태그로 감싸준다 (위에서 부터 <> 맨아래에 </>로 작성), JSX를 배울때 봤었지 저장한다
        </>(5-2 계속: </> 작성)
    )
}

------------------------------------------------------------------------------------------
                                            |
                                            V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000 사이트화면 ==>

(자세한것 확인 하려면 3000으로 접속...)
(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  



                                           First Component
                                           Second Component
                                           Third Component
                                           Fourth Component
                                           Fourth Component
                                           Fifth Component
                                            Ranga Karanam
                                       123 Baker Street London


--------------------------------------------------------------------------------------------

123 Baker Street, London 잘 보인다


🔵 자바스크립트 하위객체

사실 주소는 이렇게 한 줄로 잘 끝나지 않는다 
여러 개로 구성될 수 있지 그래서 address: '123 Baker Street London' 이건 하위 객체가 되는 게 낫겠다


------------------------------------------------------------------------------------------
⏺ VSC


⏺ LearningJavaScript.jsx



const person = {
    name: 'Ranga Karanam',

    //6: 여기에 이렇게 객체를 생성할 수 있거든, 일단 이걸 지우고 ('123 Baker Street London' 삭제후 {}작성) 중괄호를 열고 닫고
    address: {
      //6-1: 여기 안에다 line1을 쓰고 Baker Street
      line1: 'Baker Street',
      //6-1계속: city는 London이고
      city: 'London',
      //6-1계속: 원하면 country는 UK라 줄 수 있겠지, 각 속성은 콤마로 구분한다
      //콤마, 콤마 그리고 마지막 속성 다음에도 콤마를 붙일 수 있다, 여기에도 붙일 수 있고
      country: 'UK',
    },//JavaScript는 뭐라고 하지 않는다, 저장하면 된다 //6-2: LearningJavaScript컴포넌트로..
}


export default function LearningJavaScript () {
    return(
        <>
        <div>{person.name}</div>

        //6-2: person.address.line1이라고 하고 다른 것도 추가할 수 있겠지
        //줄마다 city, country등 다른 속성을 추가할 수 있다, 보면
        <div>{person.address.line1}</div>
        </>
    )
}

------------------------------------------------------------------------------------------
                                            |
                                            V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000 사이트화면 ==>

(자세한것 확인 하려면 3000으로 접속...)
(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  



                                           First Component
                                           Second Component
                                           Third Component
                                           Fourth Component
                                           Fourth Component
                                           Fifth Component
                                            Ranga Karanam
                                             Baker Street


--------------------------------------------------------------------------------------------

Ranga Karanam , Baker Street지 좋다
교육자가 제일 좋아하는게 셜록 홈즈여서 베이커라는 주소를 썼다고 함..

🔵 자바스크립트 배열

------------------------------------------------------------------------------------------
⏺ VSC


⏺ LearningJavaScript.jsx



const person = {
    name: 'Ranga Karanam',
    address: {
        line1: 'Baker Street',
        city: 'London',
        country: 'UK',
    },
    //7: Ranga에게는 여러 프로필이 있다고 하겠다, 모든 프로필을 나타내는 배열이 있다, Twitter 프로필이 있을거고, LinkedIn 프로필, instagram 프로필도 있을 수 있겠지
    //이게 배열이다, 이게 JavaScript에서 배열을 나타내는 방법이다, 배열에 접근하는 방법은 Java와 매우 비슷하다//7-1: LearningJavaScript컴포넌트로..
    profiles: ['twitter', 'linkedin', 'instagram']
}


export default function LearningJavaScript () {
    return(
        <>
        <div>{person.name}</div>
        <div>{person.address.line1}</div>
        
        //7-1: 첫 번째 요소에 접근하고 싶으면 div라 하고 profiles[0]이라고 하겠다 ㅇㅋ profiles의 0번째는 뭘까? 사실 profiles의 0번째가 아니라
        //person.profiles의 0번째여야 한다, 그리고 그 값에 접근하고 싶지 중괄호 안에 넣어줘야 한다, 그리고 확인해보자
        <div>{person.profiles[0]}</div>       
        </>
    )
}

------------------------------------------------------------------------------------------
                                            |
                                            V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000 사이트화면 ==>

(자세한것 확인 하려면 3000으로 접속...)
(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  



                                           First Component
                                           Second Component
                                           Third Component
                                           Fourth Component
                                           Fourth Component
                                           Fifth Component
                                            Ranga Karanam
                                             Baker Street
                                                twitter


--------------------------------------------------------------------------------------------

twitter가 나온다
1번째로 가면 linkedin, 2번째로 가면 instagram이지
좋다

🔵 자바스크립트 함수

여기에 함수도 추가할 수 있다

------------------------------------------------------------------------------------------
⏺ VSC


⏺ LearningJavaScript.jsx



const person = {
    name: 'Ranga Karanam',
    address: {
        line1: 'Baker Street',
        city: 'London',
        country: 'UK',
    },
    profiles: ['twitter', 'linkedin', 'instagram']

    //8: 여기에 printProfile이라는 함수를 만들겠다, printProfile 함수가 이런 걸 한다고 해보자//8-1: 아래에서 작성.. 
    printProfile:
}

🟢 일반함수
//8-1: function printProfile, function printProfile 이렇게 보통 함수를 정의한다,
function printProfile () {
  //8-2: console.log로 person.profiles의 0번째를 보겠다, 보통 이런 식으로 한다 
  console.log(person.profiles[0])
}

export default function LearningJavaScript () {
    return(
        <>
        <div>{person.name}</div>
        <div>{person.address.line1}</div>
        <div>{person.profiles[0]}</div>
        </>
    )
}
------------------------------------------------------------------------------------------
                                            |
                                            V
------------------------------------------------------------------------------------------
⏺ VSC


⏺ LearningJavaScript.jsx



const person = {
    name: 'Ranga Karanam',
    address: {
        line1: 'Baker Street',
        city: 'London',
        country: 'UK',
    },
    profiles: ['twitter', 'linkedin', 'instagram'],
    
    🟢 화살표 함수
    //9: 여기 객체 안에도 비슷한 걸 할 수 있다, 화살표 스타일로 정의할 것이다, 이건 Java에서 Lambda함수를 정의하는 것과 매우 비슷하다, 객체의 일부로 함수를 정의하는 거지
    //아래의 함수의 이름이 여기 들어가니까 printProfile이 여기 속성 이름이 되는 거고 여기 화살표 함수가 들어가는 것이다 열고()닫는 괄호안에 파라미터를 넣고 화살표를 쓴다 Lambda 함수를 정의하는 것과 비슷하다
    //일반적으로 화살표 함수를 정의하는 가장 좋은 방법은 바로 중괄호이다, 중괄호를 열고 닫은 다음 이 코드를 여기에 옮기겠다 (아래의 함수 console.log를 여기 중괄호 안으로 옮기기)
     printProfile: () => {
        //9-1: console.log로 person.profiles[0]을 보겠다 아래의 함수는 지우겠다, 일반 함수와 화살표 함수의 차이를 보여주려고 만든 거니까 
        console.log(person.profiles[0])
    }
    //printProfile 함수 설명: printProfile이라는 화살표 함수가 정의되었고 로그로 person.profiles를 출력하고 있다
    //이제 LearningJavaScript컴포넌트에 printProfile을 호출해보자 //9-2:LearningJavaScript 컴포넌트로..
}

    /* <== 여기선 주석처리 하지만 실제로는 삭제함
    function printProfile () {  
    }*/

export default function LearningJavaScript () {
    return(
        <>
        <div>{person.name}</div>
        <div>{person.address.line1}</div>
        <div>{person.profiles[0]}</div>

        //9-2: 어떻게 할까? 중괄호 안에 넣는다, person.printProfile에다가 괄호를 추가한다, 함수를 호출하고 싶다 중괄호 안에 person.printProfile()하고, 저장하고 어떻게 되는지 보자
        <div>{person.printProfile()}</div>
        </>
    )
}
------------------------------------------------------------------------------------------
 브라우저로 가서 마우스 우측 검사 클릭         |
                                            V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000 사이트화면 ==>

(자세한것 확인 하려면 3000으로 접속...)
(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  



                                           First Component
                                           Second Component
                                           Third Component
                                           Fourth Component
                                           Fourth Component
                                           Fifth Component
                                            Ranga Karanam
                                             Baker Street
                                                twitter


-------------------------------------------------------------------------------------------
  Elements  Console  Sources Network  Performance      >>                       🔅  ⁞  x
            ‾‾‾‾‾‾‾
-------------------------------------------------------------------------------------------
  Download the React DevTools for a better development experience:         react refresh:6 
  https://reactjs.org/link/react-devtools
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾ 
  twitter
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
  twitter

--------------------------------------------------------------------------------------------

여기 twitter가 출력되는 게 보인다 
twitter가 출력되는 이유는 이게 ( console.log(person.profiles[0]) ) person.profiles의 0번째였기 때문이지



이제 printProfile 안에서 로그에 모든 프로필을 출력하고 싶다 어떻게 할까?

------------------------------------------------------------------------------------------
⏺ VSC


⏺ LearningJavaScript.jsx



const person = {
    name: 'Ranga Karanam',
    address: {
        line1: 'Baker Street',
        city: 'London',
        country: 'UK',
    },
    profiles: ['twitter', 'linkedin', 'instagram'],
    printProfile: () => {
        //10: 이것은 map 함수라는 것으로 할 수 있다 profiles를 쓰고 .map이라고 하겠다, 
        //괄호 안에서 출력하기 위한 화살표 함수를 넘길 수 있다
        profiles.map(
          //10-1: 여기에다가 괄호를 쓰고 각 프로필 요소를 쓰겠다, 각 요소로 뭘 하고 싶지?  중괄호를 열고 닫고 
          (profile) => {
              //10-2: console.log로 프로필을 출력해보겠다, 저장하고 
               console.log()
          }            
        )
        console.log(person.profiles[0])
    }
}


export default function LearningJavaScript () {
    return(
        <>
        <div>{person.name}</div>
        <div>{person.address.line1}</div>
        <div>{person.profiles[0]}</div>
        <div>{person.printProfile()}</div>
        </>
    )
}

------------------------------------------------------------------------------------------
브라우저로 가보자                                    |
                                                   V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000 사이트화면 ==>

(자세한것 확인 하려면 3000으로 접속...)


Compiled with problems:

ERROR
[eslint] 
src\components\learning-examples\LearningJavaScript.jsx
  Line 10:9:  'profiles' is not defined  no-undef

Search for the keywords to learn more about each error.
--------------------------------------------------------------------------------------------

이런.. 오류다 profiles가 정의되지 않았다고 나온다 



사실 이건 profiles가 아니다 person.profiles이어야 한다

------------------------------------------------------------------------------------------
⏺ VSC


⏺ LearningJavaScript.jsx


const person = {
    name: 'Ranga Karanam',
    address: {
        line1: 'Baker Street',
        city: 'London',
        country: 'UK',
    },
    profiles: ['twitter', 'linkedin', 'instagram'],
    printProfile: () => {

        //11: person.profiles.map으로 각 프로필을 주고 로그를 출력해 보겠다
        person.profiles.map(
            (profile) => {
                console.log(profile)
            }
        )

        console.log(person.profiles[0])
    }
}


export default function LearningJavaScript () {
    return(
        <>
        <div>{person.name}</div>
        <div>{person.address.line1}</div>
        <div>{person.profiles[0]}</div>
        <div>{person.printProfile()}</div>
        </>
    )
}

------------------------------------------------------------------------------------------
어떻게 되나 볼까??                           |
                                            V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000 사이트화면 ==>

(자세한것 확인 하려면 3000으로 접속...)
(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  



                                           First Component
                                           Second Component
                                           Third Component
                                           Fourth Component
                                           Fourth Component
                                           Fifth Component
                                            Ranga Karanam
                                             Baker Street
                                                twitter


-------------------------------------------------------------------------------------------
  Elements  Console  Sources Network  Performance      >>                       🔅  ⁞  x
            ‾‾‾‾‾‾‾
-------------------------------------------------------------------------------------------
  Download the React DevTools for a better development experience:         react refresh:6 
  https://reactjs.org/link/react-devtools
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾ 
  twitter                                                       LearningJavaScript.jsx:12 
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
  linkedin                                                      LearningJavaScript.jsx:12 
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
  instagram                                                     LearningJavaScript.jsx:12 
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
  twitter                                                       LearningJavaScript.jsx:12 
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
  twitter                                                       LearningJavaScript.jsx:12 
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
  linkedin                                                      LearningJavaScript.jsx:12 
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
  instagram                                                     LearningJavaScript.jsx:12 
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
  twitter                                                       LearningJavaScript.jsx:12

--------------------------------------------------------------------------------------------

이제 다 출력되지, linkedin, instagram, twitter가 보인다 

세 개가 모두 출력 되었다
twitter, instagram, linkedin 이
새로 고침 해보겠다
linkedin, instagram, twitter 이 보인다
좋다


------------------------------------------------------------------------------------------
⏺ VSC


⏺ LearningJavaScript.jsx



const person = {
    name: 'Ranga Karanam',
    address: {
        line1: 'Baker Street',
        city: 'London',
        country: 'UK',
    },
    profiles: ['twitter', 'linkedin', 'instagram'],
    printProfile: () => {
        person.profiles.map(
            (profile) => {
                console.log(profile)
            }
        )

        //12: 여기 마지막 로그를 제거하고 다시 새로고침 하면
    //    console.log(person.profiles[0])
    }
}


export default function LearningJavaScript () {
    return(
        <>
        <div>{person.name}</div>
        <div>{person.address.line1}</div>
        <div>{person.profiles[0]}</div>
        <div>{person.printProfile()}</div>
        </>
    )
}
------------------------------------------------------------------------------------------
                                            |
                                            V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000 사이트화면 ==>

(자세한것 확인 하려면 3000으로 접속...)
(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  



                                           First Component
                                           Second Component
                                           Third Component
                                           Fourth Component
                                           Fourth Component
                                           Fifth Component
                                            Ranga Karanam
                                             Baker Street
                                                twitter


-------------------------------------------------------------------------------------------
  Elements  Console  Sources Network  Performance      >>                       🔅  ⁞  x
            ‾‾‾‾‾‾‾
-------------------------------------------------------------------------------------------
  Download the React DevTools for a better development experience:         react refresh:6 
  https://reactjs.org/link/react-devtools
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾ 
  twitter                                                       LearningJavaScript.jsx:12 
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
  linkedin                                                      LearningJavaScript.jsx:12 
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
  instagram                                                     LearningJavaScript.jsx:12 
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
  twitter                                                       LearningJavaScript.jsx:12 
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
  linkedin                                                      LearningJavaScript.jsx:12 
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
  instagram                                                     LearningJavaScript.jsx:12 
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾

--------------------------------------------------------------------------------------------

twitter, linkedin instagram 이다




사실 단 하나의 파라미터와 한 줄의 코드만 있으면 정말 간단하게 만들 수 있다 

------------------------------------------------------------------------------------------
⏺ VSC


⏺ LearningJavaScript.jsx



const person = {
    name: 'Ranga Karanam',
    address: {
        line1: 'Baker Street',
        city: 'London',
        country: 'UK',
    },
    profiles: ['twitter', 'linkedin', 'instagram'],
    printProfile: () => {
        person.profiles.map(
            //13: 여기 괄호를 지우고 profile이라 한 다음 중괄호도 지우면 훨씬 더 간단해졌지, 
            profile => console.log(profile)
        ) 
    }
       //코드 정리: person.profiles.map 에서 같은 줄 화살표 함수를 정의했다 profile console.log(profile)
}


export default function LearningJavaScript () {
    return(
        <>
        <div>{person.name}</div>
        <div>{person.address.line1}</div>
        <div>{person.profiles[0]}</div>
        <div>{person.printProfile()}</div>
        </>
    )
}

------------------------------------------------------------------------------------------








Quick JavaScript Tour FOr Java Developers

 ____________________________________________________________________
|  const person = {                                                  |
|    name: 'Ranga Karana',                                           | 
|    address: {                                                      |    
|      line1: 'Baker Street',                                        |  
|      city: 'London',                                               |       
|      country: 'UK',                                                |        
|    },                                                              | 
|    profiles: ['twitter'. 'linkedin', 'instagram'],                 |       
|    printProfile: () => {                                           |     
|      profile => console.log(profile)                               |           
|    }                                                               |         
|  }                                                                 |           
 ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
● No need to use semicolon!
● Dynamic objects
● You can store a function in an object!


이 여정의 목적은 다음 섹션으로 넘어가기 전에 JavaScript를 잠깐 보여주는 거였다
● No need to use semicolon!
보다시피 JavaScript에는 세미콜론을 쓰지 않아도 됐지, 코드 한 줄마다 세미콜론을 쓸 필요가 없었다
● Dynamic objects
동적 객체를 만들 수도 있었다
원하는 속성을 포함한 객체를 만들 수 있었고 객체는 여러 계층 구조를 가질 수도 있었다
예1) name: 'Ranga Karana',
예2)    name: 'Ranga Karana',                         
        address: {                                            
          line1: 'Baker Street',                                 
          city: 'London',                                               
          country: 'UK',                                                 
        },
● You can store a function in an object!
객체 안에 함수를 저장할 수 도 있었다, 여기 함수 안에 직접 함수를 만들어 객체의 일부로 만들었지
   printProfile: () => {                                           
      profile => console.log(profile)                                 
   }     









Digging Deeper into Components - Counter
                                                                                ______     ______
● Parts of a Component                                                         (  +1  )   (  -1  )
  ■ View (JSX or JavaScript)                                                    ‾‾‾‾‾‾     ‾‾‾‾‾‾
  ■ Logic (JavaScript)                                                          ______     ______
  ■ Styling (CSS)                                                              (  +2  )   (  -2  )
  ■ State (Internal Data Store)                                                 ‾‾‾‾‾‾     ‾‾‾‾‾‾
  ■ Props (Pass Data)                                                           ______     ______
● Let's learn more about each of these building another simple example         (  +5  )   (  -5  )
  ■ A Counter App                                                               ‾‾‾‾‾‾     ‾‾‾‾‾‾
● Let's take a hands-on step by step approach                                           0
                                                                                   ____________   
                                                                                  (   Reset    ) 
                                                                                   ‾‾‾‾‾‾‾‾‾‾‾‾

이 섹션의 목표는 리액트와 JavaScript를 간단히 소개하는 거였다 
이 섹션을 즐겁게 지나왔기를 바란다, 
다음 섹션에선 카운터 애플리케이션을 하나씩 순서대로 만들것이다
새로운 것도 두 가지 배울 예정이다
State와 Props이다
다음 섹션에서 보겠다
