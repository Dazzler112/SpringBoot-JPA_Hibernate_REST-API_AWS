

Enhancing Counter Example
                                                                                ______     ______
● 1: Let's create multiple counter buttons                                     (  +1  )   (  -1  )
● 2: Let's have a different increment value for each button                     ‾‾‾‾‾‾     ‾‾‾‾‾‾
                                                                                ______     ______
                                                                               (  +2  )   (  -2  )
                                                                                ‾‾‾‾‾‾     ‾‾‾‾‾‾
                                                                                ______     ______
                                                                               (  +5  )   (  -5  )
                                                                                ‾‾‾‾‾‾     ‾‾‾‾‾‾
                                                                                        0
                                                                                   ____________   
                                                                                  (   Reset    ) 
                                                                                   ‾‾‾‾‾‾‾‾‾‾‾‾


카운터 앱의 기본 틀을 완성했다 
이제 기능을 보강해보자
● 1: Let's create multiple counter buttons
첫 번째로 할 작업은 카운터 버튼을 여러 개 만드는 것이다
카운터에 여러 개의 버튼을 추가하고, 모든 버튼이 하나의 변수를 업데이트하도록 만들 것이다
그럼 먼저 각각에 상태를 가진 여러 개의 카운터 버튼을 만들어 보자


버튼을 여러개 만들려면 어떻게 해야 할까?

아주 간단하다


-----------------------------------------------------------------------------------------------
⏺ VSC


⏺ App.js



import './App.css';
import Counter from './components/counter/Counter';

function App() {
  return (
    <div className="App">
    //1: 먼저 App.js 파일로 가서 Counter를 복사해 '<Counter />', 이렇게 붙이면 되겠지?
     <Counter />
     <Counter />
     <Counter />
    </div>
  )
}

export default App;

-----------------------------------------------------------------------------------------------
                                               |
                                               V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000 사이트화면 ==>

(자세한것 확인 하려면 3000으로 접속...)
(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  


                                          
                                          -1               (자세한 건 직접 확인)
                                        
                              ◜ ‾‾‾‾‾‾‾ ◝    ◜ ‾‾‾‾‾‾‾ ◝ 
                              |   +1    |   |   -1    |
                              ◟ _______ ◞    ◟ _______ ◞
                                          
                                          0               
                                        
                              ◜ ‾‾‾‾‾‾‾ ◝    ◜ ‾‾‾‾‾‾‾ ◝ 
                              |   +1    |   |   -1    |
                              ◟ _______ ◞    ◟ _______ ◞
                                          
                                          0              
                                        
                              ◜ ‾‾‾‾‾‾‾ ◝    ◜ ‾‾‾‾‾‾‾ ◝ 
                              |   +1    |   |   -1    |
                              ◟ _______ ◞    ◟ _______ ◞


-------------------------------------------------------------------------------------------

좋다 +1 버튼을 눌러보면 숫자가 증가하고 
페이지를 새로 고치면 모두 0으로 돌아온다, +1도 잘 되고 -1도 잘 된다
+1, -1, +1, -1 다 잘 된다

지금은 세 개의 Counter 컴포넌트 모두 각자의 값을 갖고 있다
그리고 모든 증가 버튼과 감소 버튼이 1씩 늘어나고 줄어들게 되어있다

● 2: Let's have a different increment value for each button 
이제 여기 있는 모든 버튼이 각기 다른 증분 값을 갖도록 만들 것이다

--------------------------------------------------------------------------------------------

🌎 http://localhost:3000 사이트화면 ==>

(자세한것 확인 하려면 3000으로 접속...)
(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  


                                          
                                          -1               (자세한 건 직접 확인)
                                        
                              ◜ ‾‾‾‾‾‾‾ ◝    ◜ ‾‾‾‾‾‾‾ ◝ 
                              |   +1    |   |   -1    |
                              ◟ _______ ◞    ◟ _______ ◞
                                          
                                          0               
                                        
                              ◜ ‾‾‾‾‾‾‾ ◝    ◜ ‾‾‾‾‾‾‾ ◝ 
                              |   +1    |   |   -1    |
                              ◟ _______ ◞    ◟ _______ ◞
                                          
                                          0              
                                        
                              ◜ ‾‾‾‾‾‾‾ ◝    ◜ ‾‾‾‾‾‾‾ ◝ 
                              |   +1    |   |   -1    |
                              ◟ _______ ◞    ◟ _______ ◞


-------------------------------------------------------------------------------------------

맨 위에서 부터 1, 2, 5를 더하고 빼도록 만들 것이다

어떻게 하면 될까?
    <div className="App">
     <Counter />  //우리가 원하는 건 이 <Counter />의 증분 값을 1로 설정하고,
     <Counter />  // 이 Counter의 증분 값은 2,
     <Counter />  // 이 Counter의 증분 값은 5로 설정하는 것이다
    </div>
한번 설정한 증분 값은 Counter 컴포넌트가 실행되는 동안 바뀌지 않는다
증분 값을 1로 설정한 카운터에선 항상 1씩 늘어날 거고
증분 값을 2로 설정한 카운터에선 항상 2씩 늘어날 것이다,
증분 값을 5로 설정한 카운터에선 항상 5씩 늘어날 것이고


또 다른 방법은 Counter 컴포넌트를 아예 새로 만드는 것이다

----------------------------------------
export default function Counter() {

    // [0, ƒ] 
    // const [firstElt, secondElt] = array
    const [count, setCount] = useState(0);

    function incrementCounterFunction() {

        setCount(count + 1)

    }

    function decrementCounterFunction() {
        
        setCount(count - 1)
    }

    return(
    <div className='Counter'>
        <span className='count'>{count}</span>
        <div>
         <button className="counterButton" 
                 onClick={incrementCounterFunction}
         >+1</button>
        <button className="counterButton" 
                 onClick={decrementCounterFunction}
         >-1</button>
        </div>
    </div>
    )
}
----------------------------------------

새로운 Counter 컴포넌트를 추가해 카운터에서 증가시킬 값에 따라서 
함수에서 더하는 숫자만 2, 3, 4, 5 이런 식으로 바꾸는 거지
이건 좋은 방법이 아니다, 코드 중복이 아주 많아질 테니까

어떻게 하면 중복된 코드 없이 각 Counter의 증분 값을 다르게 설정할 수 있을까?








Exploring React props

  ________________________________________________________________________
 |   <playingWithProps prop1="value1" prop2="value2" />                   |   
 |                                                                        |      
 |    function playingWithProps({prop1, prop2}) {                         |               
 |       return (<>{prop1} {prop2</>)                                     |               
 |    }                                                                   |             
 |                                                                        |          
 |    function CounterButton({ incrementBy}) {...}                        |                                  
 |                                                                        |            
 |    <CounterButton incrementBy={2}>                                     |               
 |                                                                        |          
 |    Counter.defaultProps = {                                            |          
 |       incrementBy: 1,                                                  |              
 |    };                                                                  |          
 |                                                                        |            
 |    Counter.propTypes = {                                               |       
 |       incrementBy: propTypes.number,                                   |             
 |    };                                                                  |    
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾

● You can pass "props" (short for properties) object to a React Component
● Used for things that remain a constant during lifetime of a component
  ■ Exmple increment value of a specific component

이렇 때 필요한 게 바로 리액트의 Props, 즉 '프로퍼티'라는 개념이다 
하나의 컴포넌트는 여러 개의 프로퍼티를 가질 수 있다, 
● You can pass "props" (short for properties) object to a React Component
( prop1="value1" prop2="value2" )이 Props를 다른 리액트 컴포넌트에게 넘겨줄 수 있다
● Used for things that remain a constant during lifetime of a component
Props는 컴포넌트가 실행되는 동안 유지해야 하는 값이 있을 때 사용한다 
  ■ Exmple increment value of a specific component
우리 컴포넌트의 증분 값 같은 경우가 좋은 예시이다
Counter가 실행되는 동안 변하지 않는 값이니까

그럼 이제 프로퍼티를 활용해 보자


App 컴포넌트로 가서 간단한 함수를 하나 만들 것이다


-----------------------------------------------------------------------------------------------
⏺ VSC


⏺ App.js



import './App.css';
import Counter from './components/counter/Counter';

function App() {
  return (
      <div className="App">
     <Counter />
     <Counter />           
     <Counter />

    //2-3: PlayingWithProps를 추가하겠다 '<PlayingWithProps />' 이렇게 저장 하겠다, 어떻게 될까?
     <PlayingWithProps />
    </div>
  )
}


//2: 여기에 'PlayingWithProps()'라고 만들겠다,
function PlayingWithProps() {

  //2-1:  이 함수에서 반환할 값은, 아마 
  return(
  //2-2: HTML 요소겠지 빈 div 요소를 반환하면 될것 같다, 그리고 위쪽으로//2-3: App 컴포넌트로..
    <div></div>    
  )
}

export default App;

-----------------------------------------------------------------------------------------------
                                                  |
                                                  V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000 사이트화면 ==>

(자세한것 확인 하려면 3000으로 접속...)
(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  


                                          
                                          0               
                                        
                              ◜ ‾‾‾‾‾‾‾ ◝    ◜ ‾‾‾‾‾‾‾ ◝ 
                              |   +1    |   |   -1    |
                              ◟ _______ ◞    ◟ _______ ◞
                                          
                                          0               
                                        
                              ◜ ‾‾‾‾‾‾‾ ◝    ◜ ‾‾‾‾‾‾‾ ◝ 
                              |   +1    |   |   -1    |
                              ◟ _______ ◞    ◟ _______ ◞
                                          
                                          0              
                                        
                              ◜ ‾‾‾‾‾‾‾ ◝    ◜ ‾‾‾‾‾‾‾ ◝ 
                              |   +1    |   |   -1    |
                              ◟ _______ ◞    ◟ _______ ◞


-------------------------------------------------------------------------------------------

바뀐게 없다 

-----------------------------------------------------------------------------------------------
⏺ VSC


⏺ App.js



import './App.css';
import Counter from './components/counter/Counter';

function App() {
  return (
     <div className="App">
       <Counter />
       <Counter />           
       <Counter />
     <PlayingWithProps />
    </div>
  )
}

function PlayingWithProps() {
  return(

    //3: 안에 'Props'라는 텍스트를 넣어서 화면에 보이게 만들겠다
    <div>Props</div>
  )
}

export default App;
-----------------------------------------------------------------------------------------------
                                                  |
                                                  V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000 사이트화면 ==>

(자세한것 확인 하려면 3000으로 접속...)
(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  


                                          
                                          0               
                                        
                              ◜ ‾‾‾‾‾‾‾ ◝    ◜ ‾‾‾‾‾‾‾ ◝ 
                              |   +1    |   |   -1    |
                              ◟ _______ ◞    ◟ _______ ◞
                                          
                                          0               
                                        
                              ◜ ‾‾‾‾‾‾‾ ◝    ◜ ‾‾‾‾‾‾‾ ◝ 
                              |   +1    |   |   -1    |
                              ◟ _______ ◞    ◟ _______ ◞
                                          
                                          0              
                                        
                              ◜ ‾‾‾‾‾‾‾ ◝    ◜ ‾‾‾‾‾‾‾ ◝ 
                              |   +1    |   |   -1    |
                              ◟ _______ ◞    ◟ _______ ◞

                                        Props

-------------------------------------------------------------------------------------------

맨 밑에 Props가 나왔다

-----------------------------------------------------------------------------------------------
⏺ VSC


⏺ App.js



import './App.css';
import Counter from './components/counter/Counter';

function App() {
  return (
     <div className="App">
        
      //4 계속: <PlayingWithProps />를 상단으로 옮김
       <PlayingWithProps />
       <Counter />
       <Counter />           
       <Counter />

      //4: 이 요소를 맨 위로 옮겨서 Props가 맨 위에 나오도록 만들겠다 (<PlayingWithProps /> 상단으로..)
//     <PlayingWithProps />
    </div>
  )
}

function PlayingWithProps() {
  return(

    //3: 안에 'Props'라는 텍스트를 넣어서 화면에 보이게 만들겠다
    <div>Props</div>
  )
}

export default App;
-----------------------------------------------------------------------------------------------
                                                  |
                                                  V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000 사이트화면 ==>

(자세한것 확인 하려면 3000으로 접속...)
(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  


                                        Props
                                          
                                          0               
                                        
                              ◜ ‾‾‾‾‾‾‾ ◝    ◜ ‾‾‾‾‾‾‾ ◝ 
                              |   +1    |   |   -1    |
                              ◟ _______ ◞    ◟ _______ ◞
                                          
                                          0               
                                        
                              ◜ ‾‾‾‾‾‾‾ ◝    ◜ ‾‾‾‾‾‾‾ ◝ 
                              |   +1    |   |   -1    |
                              ◟ _______ ◞    ◟ _______ ◞
                                          
                                          0              
                                        
                              ◜ ‾‾‾‾‾‾‾ ◝    ◜ ‾‾‾‾‾‾‾ ◝ 
                              |   +1    |   |   -1    |
                              ◟ _______ ◞    ◟ _______ ◞


-------------------------------------------------------------------------------------------

Props가 위쪽에 나온다, 좋다


그럼 이제 프로퍼티 동작에 대해 알아보자 

-----------------------------------------------------------------------------------------------
⏺ VSC


⏺ App.js



import './App.css';
import Counter from './components/counter/Counter';

function App() {
  return (
    <div className="App">

    //5: 이 컴포넌트에 property1="value1" property2="value2"를 추가하면, 함수형 컴포넌트 안에서 이 값에 접근할 수 있다
    //값에 접근하는 방법은 함수에 매개변수를 추가하는 것이다// 5-1: PlayingWithProps() 함수로..
     <PlayingWithProps />
     <Counter />
     <Counter />           
     <Counter />
    </div>
  )
}

//5-1: 함수에 'properties'라는 매개변수를 추가해 보겠다, 함수에 반환하기 전 간단한 로그를 하나 출력하겠다
function PlayingWithProps(properties) {
    //5-2: console.log()로 properties를 출력하겠다, 저장한 다음 
    console.log(properties)

  return(
    <div>Props</div>
  )
}

export default App;
-----------------------------------------------------------------------------------------------

Chrome 브라우저로 가보자                            |
콘솔 창을 열어보면                                  V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000 사이트화면 ==>

(자세한것 확인 하려면 3000으로 접속...)
(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  


                                        Props
                                          
                                          0               
                                        
                              ◜ ‾‾‾‾‾‾‾ ◝    ◜ ‾‾‾‾‾‾‾ ◝ 
                              |   +1    |   |   -1    |
                              ◟ _______ ◞    ◟ _______ ◞
                                          
                                          0               
                                        
                              ◜ ‾‾‾‾‾‾‾ ◝    ◜ ‾‾‾‾‾‾‾ ◝ 
                              |   +1    |   |   -1    |
                              ◟ _______ ◞    ◟ _______ ◞
                                          
                                          0              
                                        
                              ◜ ‾‾‾‾‾‾‾ ◝    ◜ ‾‾‾‾‾‾‾ ◝ 
                              |   +1    |   |   -1    |
                              ◟ _______ ◞    ◟ _______ ◞


-------------------------------------------------------------------------------------------
  Elements  Console  Sources Network  Performance      >>                       🔅  ⁞  x
            ‾‾‾‾‾‾‾
-------------------------------------------------------------------------------------------
  Download the React DevTools for a better development experience:         react refresh:6 
  https://reactjs.org/link/react-devtools
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾ 
  ▼{property1: 'value1', property2: 'value2'}                                    App.js:32
    property1: "value1"
    property2: "value2"
    ▶ [[Prototype]]: Object
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾ 
  ▼{property1: 'value1', property2: 'value2'}                                    App.js:32
    property1: "value1"
    property2: "value2"
    ▶ [[Prototype]]: Object
-------------------------------------------------------------------------------------------

보는 것처럼 프로퍼티가 객체 형태로 전달되었다

프로퍼티는 이렇게 {property1: 'value1', property2: 'value2'} 객체 형태로 전달된다
어떤 값을 전달하든 함수에는 이런 형태로 들어온다
Property1 이라는 이름을 가진 프로퍼티와 property2라는 프로퍼티를 가진 객체 형태로 전달됐다

이값을 가져오려면 이런식으로 하면 된다

-----------------------------------------------------------------------------------------------
⏺ VSC


⏺ App.js




import './App.css';
import Counter from './components/counter/Counter';

function App() {
  return (
    <div className="App">
     <PlayingWithProps property1="value1" property2="value2"/>
     <Counter />
     <Counter />           
     <Counter />
    </div>
  )
}

// {property1: 'value1', property2: 'value2'}
function PlayingWithProps(properties) {

  console.log(properties)

  //6: 'console.log(properties.property1)'
  console.log(properties.property1)
  //6-1: 'console.log(properties.property2)' 코드를 저장하고
  console.log(properties.property2)

  return(
    <div>Props</div>
  )
}

export default App;

-----------------------------------------------------------------------------------------------
다시 Chrome으로 가보면                              |
                                                   V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000 사이트화면 ==>

(자세한것 확인 하려면 3000으로 접속...)
(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  


                                        Props
                                          
                                          0               
                                        
                              ◜ ‾‾‾‾‾‾‾ ◝    ◜ ‾‾‾‾‾‾‾ ◝ 
                              |   +1    |   |   -1    |
                              ◟ _______ ◞    ◟ _______ ◞
                                          
                                          0               
                                        
                              ◜ ‾‾‾‾‾‾‾ ◝    ◜ ‾‾‾‾‾‾‾ ◝ 
                              |   +1    |   |   -1    |
                              ◟ _______ ◞    ◟ _______ ◞
                                          
                                          0              
                                        
                              ◜ ‾‾‾‾‾‾‾ ◝    ◜ ‾‾‾‾‾‾‾ ◝ 
                              |   +1    |   |   -1    |
                              ◟ _______ ◞    ◟ _______ ◞


-------------------------------------------------------------------------------------------
  Elements  Console  Sources Network  Performance      >>                       🔅  ⁞  x
            ‾‾‾‾‾‾‾
-------------------------------------------------------------------------------------------
  Download the React DevTools for a better development experience:         react refresh:6 
  https://reactjs.org/link/react-devtools
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾ 
  ▼{property1: 'value1', property2: 'value2'}                                    App.js:33
    property1: "value1"
    property2: "value2"
    ▶ [[Prototype]]: Object
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾ 
   value1                                                                        App.js:34 
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾ 
   value2                                                                        App.js:35 
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾ 
  ▼{property1: 'value1', property2: 'value2'}                                    App.js:33
    property1: "value1"
    property2: "value2"
    ▶ [[Prototype]]: Object
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾ 
   value1                                                                        App.js:34 
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾ 
   value2                                                                        App.js:35
-------------------------------------------------------------------------------------------

이렇게 두 값이 출력된 걸 볼 수 있다 'value1' 'value2'


이렇게 해서 프로퍼티를 전달하는 방법과 값을 가져오는 방법을 살펴봤다

예전에는 프로퍼티를 전달받아 값을 가져올 때 보통 이런 식으로 가져왔다
----------------------------------------
function PlayingWithProps(properties) {

  console.log(properties)
  console.log(properties.property1)
  console.log(properties.property2)
  return(
    <div>Props</div>
  )
}
----------------------------------------


하지만 다른 방법도 있다

코드를 복사하고 기존 코드는 주석처리 하겠다

-----------------------------------------------------------------------------------------------
⏺ VSC


⏺ App.js



// import logo from './logo.svg';
import './App.css';
import Counter from './components/counter/Counter';

function App() {
  return (
      <div className="App">
      {/* <header className="App-header">
        <img src={logo} className="App-logo" alt="logo" />
        <p>
          Edit <code>src/App.js</code> and save to reload.
        </p>
        <a
          className="App-link"
          href="https://reactjs.org"
          target="_blank"
          rel="noopener noreferrer"
        >
          Learn React
        </a>
      </header> */}
     <PlayingWithProps property1="value1" property2="value2"/>
     <Counter />
     <Counter />           
     <Counter />
    </div>
  )
}

// {property1: 'value1', property2: 'value2'}  <== 어떤 값을 전달하든 함수에는 이런 형태로 들어온다
//7: 기존 코드 복사 후 주석처리... (알겠지만 주석처리는 코드 드래그 후 ctrl+ /)
/*
function PlayingWithProps(properties) {

  console.log(properties)
  console.log(properties.property1)
  console.log(properties.property2)
  return(
    <div>Props</div>
  )
} 
*/

//7-1: 이번에는 모던 자바스크립트 방식으로 프로퍼티 값에 접근하는 걸 보여주겠다
//다른 사람들이 이런 식으로 사용하는 걸 본 적이 있을 것이다, 먼저 중괄호를 열고 닫은 다음
//그 안에 property1 과 property2를 넣으면 된다
function PlayingWithProps({property1, property2}) {

  //7-2: 이렇게 하면 console.log()에서 property1과 property2를 바로 사용할 수 있지, 리액트에서 프로퍼티를 사용할 때는 보통 이런 식으로 코드를 작성한다
  console.log(property1)
  console.log(property2)
  return(
    <div>Props</div>
  )
}

export default App;

-----------------------------------------------------------------------------------------------

다시 Chrome으로 가 보면                        
                                                   |
                                                   V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000 사이트화면 ==>

(자세한것 확인 하려면 3000으로 접속...)
(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  


                                        Props
                                          
                                          0               
                                        
                              ◜ ‾‾‾‾‾‾‾ ◝    ◜ ‾‾‾‾‾‾‾ ◝ 
                              |   +1    |   |   -1    |
                              ◟ _______ ◞    ◟ _______ ◞
                                          
                                          0               
                                        
                              ◜ ‾‾‾‾‾‾‾ ◝    ◜ ‾‾‾‾‾‾‾ ◝ 
                              |   +1    |   |   -1    |
                              ◟ _______ ◞    ◟ _______ ◞
                                          
                                          0              
                                        
                              ◜ ‾‾‾‾‾‾‾ ◝    ◜ ‾‾‾‾‾‾‾ ◝ 
                              |   +1    |   |   -1    |
                              ◟ _______ ◞    ◟ _______ ◞


-------------------------------------------------------------------------------------------
  Elements  Console  Sources Network  Performance      >>                       🔅  ⁞  x
            ‾‾‾‾‾‾‾
-------------------------------------------------------------------------------------------
  Download the React DevTools for a better development experience:         react refresh:6 
  https://reactjs.org/link/react-devtools
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾ 
   value1                                                                        App.js:45 
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾ 
   value2                                                                        App.js:46 
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾ 
   value1                                                                        App.js:45 
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾ 
   value2                                                                        App.js:46
-------------------------------------------------------------------------------------------

콘솔 창에 value1, value2가 출력된 걸 볼 수 있지


properties에는 두 개의 속성 property1과 property2가 있다
----------------------------------------------

// {property1: 'value1', property2: 'value2'}
/*
function PlayingWithProps(properties) {

  console.log(properties)
  console.log(properties.property1)
  console.log(properties.property2)
  return(
    <div>Props</div>
  )
} 
*/
----------------------------------------------

여기서는 매개변수 자리에 객체 표시를 넣고, 그 안에 property1과 property2를 넣었다
----------------------------------------------
function PlayingWithProps({property1, property2}) {

  console.log(property1)
  console.log(property2)
  return(
    <div>Props</div>
  )
}
----------------------------------------------

이렇게 하면 프로퍼티가 함수의 매개변수로 전달될 때 '구조 분해' 하른 동작이 일어난다
프로퍼티 안에 있는 값이 각각의 변수에 할당된다
property1은 property1에 할당되고 property2는 property2에 할당된다,
그래서 코드에서 각 프로퍼티를 바로 쓸 수 있는 것이다

카운터 예제에선 이 방식을 사용할 것이다
----------------------------------------------
function PlayingWithProps({property1, property2}) {

  console.log(property1)
  console.log(property2)
  return(
    <div>Props</div>
  )
}
----------------------------------------------

그럼 이제 우리가 만든 예제에 이 방식을 적용해 보자
먼저 <PlayingWithProps property1="value1" property2="value2"/> 이 요소를 지우겠다

-----------------------------------------------------------------------------------------------
⏺ VSC


⏺ App.js



import './App.css';
import Counter from './components/counter/Counter';

function App() {
  return (
      <div className="App">

      //8: 여기에는 PlayingWithProps가 있을 필요가 없으니 지우겠다, 그런 다음 Counter에 프로퍼티를 추가하겠다
//     <PlayingWithProps property1="value1" property2="value2"/> (<== 여기서만 주석처리 실제 코드에는 삭제)

    //8-1: 이름은 'by'로 하겠다, 증분 값을 지정하는 속성이니까 이 Counter는 1만큼 늘릴 거고, 
     <Counter by="1"/>
    //8-2: 이건 2만큼 늘릴 것이다
     <Counter by="2"/> 
    //8-3: 이건 3만큼 늘리고, 이제 Counter에서 이 값에 접근해보자 //8-4: Counter.jsx파일로..
     <Counter by="3"/>
    </div>
  )
}

// {property1: 'value1', property2: 'value2'}  <== 어떤 값을 전달하든 함수에는 이런 형태로 들어온다
/*
function PlayingWithProps(properties) {

  console.log(properties)
  console.log(properties.property1)
  console.log(properties.property2)
  return(
    <div>Props</div>
  )
} 
*/

function PlayingWithProps({property1, property2}) {

  console.log(property1)
  console.log(property2)
  return(
    <div>Props</div>
  )
}

export default App;

-----------------------------------------------


⏺ Counter.jsx



import { useState } from 'react'
import './Counter.css'


//8-4: Counter에서 이 값을 가져오려면 어떻게 해야 할까? 우린 이미 방법을 알고있지
//매개변수를 통해 가져오면 된다, 객체 표시를 입력하고 'by'를 넣겠다,그럼 by 값이 여기로 들어올 것이다, 먼저 각 Counter의 by값을 출력해 보겠다
export default function Counter({by}) {

    // [0, ƒ] 
    // const [firstElt, secondElt] = array
    const [count, setCount] = useState(0);

    //8-5: Counter 시작 부분에서 console.log(by)로 값을 출력하겠다, 그럼 어떻게 될까?
    console.log(by)

    function incrementCounterFunction() {

        setCount(count + 1)

    }

    function decrementCounterFunction() {
        
        setCount(count - 1)
    }

    return(
    <div className='Counter'>
        <span className='count'>{count}</span>
        <div>
         <button className="counterButton" 
                 onClick={incrementCounterFunction}
         >+1</button>
        <button className="counterButton" 
                 onClick={decrementCounterFunction}
         >-1</button>
        </div>
    </div>
    )
}

-----------------------------------------------------------------------------------------------
                                                   |
                                                   V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000 사이트화면 ==>

(자세한것 확인 하려면 3000으로 접속...)
(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  


                                        Props
                                          
                                          0               
                                        
                              ◜ ‾‾‾‾‾‾‾ ◝    ◜ ‾‾‾‾‾‾‾ ◝ 
                              |   +1    |   |   -1    |
                              ◟ _______ ◞    ◟ _______ ◞
                                          
                                          0               
                                        
                              ◜ ‾‾‾‾‾‾‾ ◝    ◜ ‾‾‾‾‾‾‾ ◝ 
                              |   +1    |   |   -1    |
                              ◟ _______ ◞    ◟ _______ ◞
                                          
                                          0              
                                        
                              ◜ ‾‾‾‾‾‾‾ ◝    ◜ ‾‾‾‾‾‾‾ ◝ 
                              |   +1    |   |   -1    |
                              ◟ _______ ◞    ◟ _______ ◞


-------------------------------------------------------------------------------------------
  Elements  Console  Sources Network  Performance      >>                       🔅  ⁞  x
            ‾‾‾‾‾‾‾
-------------------------------------------------------------------------------------------
  Download the React DevTools for a better development experience:         react refresh:6 
  https://reactjs.org/link/react-devtools
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾ 
   1                                                                        Counter.jsx:10 
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾ 
   1                                                                        Counter.jsx:10 
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾ 
   2                                                                        Counter.jsx:10 
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾ 
   2                                                                        Counter.jsx:10
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾ 
   3                                                                        Counter.jsx:10
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾ 
   3                                                                        Counter.jsx:10
-------------------------------------------------------------------------------------------

보는 것처럼 1,2,3이 출력된다

App.js로 가서 

-----------------------------------------------------------------------------------------------
⏺ VSC


⏺ App.js


import './App.css';
import Counter from './components/counter/Counter';

function App() {
  return (
    <div className="App">
     <Counter by="1"/>
     <Counter by="2"/>    

      //9: 마지막 부분을 5로 바꾸고 저장하겠다
     <Counter by="5"/>
    </div>
  )
}

// {property1: 'value1', property2: 'value2'}
/*
function PlayingWithProps(properties) {

  console.log(properties)
  console.log(properties.property1)
  console.log(properties.property2)
  return(
    <div>Props</div>
  )
} 
*/

function PlayingWithProps({property1, property2}) {

  console.log(property1)
  console.log(property2)
  return(
    <div>Props</div>
  )
}

export default App;

-----------------------------------------------------------------------------------------------
                                                   |
                                                   V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000 사이트화면 ==>

(자세한것 확인 하려면 3000으로 접속...)
(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  


                                        Props
                                          
                                          0               
                                        
                              ◜ ‾‾‾‾‾‾‾ ◝    ◜ ‾‾‾‾‾‾‾ ◝ 
                              |   +1    |   |   -1    |
                              ◟ _______ ◞    ◟ _______ ◞
                                          
                                          0               
                                        
                              ◜ ‾‾‾‾‾‾‾ ◝    ◜ ‾‾‾‾‾‾‾ ◝ 
                              |   +1    |   |   -1    |
                              ◟ _______ ◞    ◟ _______ ◞
                                          
                                          0              
                                        
                              ◜ ‾‾‾‾‾‾‾ ◝    ◜ ‾‾‾‾‾‾‾ ◝ 
                              |   +1    |   |   -1    |
                              ◟ _______ ◞    ◟ _______ ◞


-------------------------------------------------------------------------------------------
  Elements  Console  Sources Network  Performance      >>                       🔅  ⁞  x
            ‾‾‾‾‾‾‾
-------------------------------------------------------------------------------------------
  Download the React DevTools for a better development experience:         react refresh:6 
  https://reactjs.org/link/react-devtools
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾ 
   1                                                                        Counter.jsx:10 
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾ 
   1                                                                        Counter.jsx:10 
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾ 
   2                                                                        Counter.jsx:10 
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾ 
   2                                                                        Counter.jsx:10
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾ 
   5                                                                        Counter.jsx:10
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾ 
   5                                                                        Counter.jsx:10
-------------------------------------------------------------------------------------------

그럼 이렇게 1, 2, 5가 출력되지
좋다
이렇게 App.js에서 설정한 값을 매개변수로 받아 출력했다



-----------------------------------------------------------------------------------------------
⏺ VSC


⏺ Counter.jsx



import { useState } from 'react'
import './Counter.css'

export default function Counter({by}) {

    // [0, ƒ] 
    // const [firstElt, secondElt] = array
    const [count, setCount] = useState(0);

    //10-1: log코드 삭제, 다시 브라우저로..
//    console.log(by) (<= 여기서만 주석처리 실제 코드는 삭제)


    //10: 이제 1씩 증가시키는 게 아니라 by값 만큼 하도록 바꿔야 한다, count + by,count - by 로 바꾸면 된다, 참 쉽지?
    function incrementCounterFunction() {

        setCount(count + by)

    }

    //10계속: 여기도 1에서 by로 수정, 로그 출력 코드를 지운 다음 저장하겠다 //10-1: 위로..
    function decrementCounterFunction() {
        
        setCount(count - by)
    }

    return(
    <div className='Counter'>
        <span className='count'>{count}</span>
        <div>
         <button className="counterButton" 
                 onClick={incrementCounterFunction}
         >+1</button>
        <button className="counterButton" 
                 onClick={decrementCounterFunction}
         >-1</button>
        </div>
    </div>
    )
}
-----------------------------------------------------------------------------------------------
                                                   |
잘 될까?                                            V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000 사이트화면 ==>

(자세한것 확인 하려면 3000으로 접속...)
(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  


                                        Props
                                          
                                          10111               
                                        
                              ◜ ‾‾‾‾‾‾‾ ◝    ◜ ‾‾‾‾‾‾‾ ◝ 
                              |   +1    |   |   -1    |
                              ◟ _______ ◞    ◟ _______ ◞
                                          
                                          0               
                                        
                              ◜ ‾‾‾‾‾‾‾ ◝    ◜ ‾‾‾‾‾‾‾ ◝ 
                              |   +1    |   |   -1    |
                              ◟ _______ ◞    ◟ _______ ◞
                                          
                                          0              
                                        
                              ◜ ‾‾‾‾‾‾‾ ◝    ◜ ‾‾‾‾‾‾‾ ◝ 
                              |   +1    |   |   -1    |
                              ◟ _______ ◞    ◟ _______ ◞


-------------------------------------------------------------------------------------------
  Elements  Console  Sources Network  Performance      >>                       🔅  ⁞  x
            ‾‾‾‾‾‾‾
-------------------------------------------------------------------------------------------
  Download the React DevTools for a better development experience:         react refresh:6 
  https://reactjs.org/link/react-devtools
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾ 
   1                                                                        Counter.jsx:10 
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾ 
   1                                                                        Counter.jsx:10 
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾ 
   2                                                                        Counter.jsx:10 
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾ 
   2                                                                        Counter.jsx:10
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾ 
   5                                                                        Counter.jsx:10
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾ 
   5                                                                        Counter.jsx:10
-------------------------------------------------------------------------------------------

+1을 누르면 
웁스
문제가 좀있다
+1 버튼과 -1버튼을 눌러보면, 우리 생각대로 동작하지 않는다

뭐가 문제인지 살펴보자
그것보다 이것부터 고쳐야겠다

-----------------------------------------------------------------------------------------------
⏺ VSC


⏺ Counter.jsx



import { useState } from 'react'
import './Counter.css'

export default function Counter({by}) {

    // [0, ƒ] 
    // const [firstElt, secondElt] = array
    const [count, setCount] = useState(0);

    function incrementCounterFunction() {

        setCount(count + by)

    }

    function decrementCounterFunction() {
        
        setCount(count - by)
    }

    return(
    <div className='Counter'>
        <span className='count'>{count}</span>
        <div>
         <button className="counterButton" 
                 onClick={incrementCounterFunction}

        //11: 여기서 +1과 -1을 표시하고 있기때문이다, 우린 여기서 by값을 출력할 것이다
        //1 대신에 by를 넣겠다, 중괄호로 감싸서
         >+{by}</button>
        <button className="counterButton" 
                 onClick={decrementCounterFunction}
        //11-1: 아래쪽에 있는 1도 바꿔주고, 잘 바뀌는지 보자
         >-{by}</button>
        </div>
    </div>
    )
}
-----------------------------------------------------------------------------------------------
                                                   |
                                                   V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000 사이트화면 ==>

(자세한것 확인 하려면 3000으로 접속...)
(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  


                                        Props
                                          
                                        10111               
                                        
                              ◜ ‾‾‾‾‾‾‾ ◝    ◜ ‾‾‾‾‾‾‾ ◝ 
                              |   +1    |    |   -1    |
                              ◟ _______ ◞    ◟ _______ ◞
                                          
                                        22218               
                                        
                              ◜ ‾‾‾‾‾‾‾ ◝    ◜ ‾‾‾‾‾‾‾ ◝ 
                              |   +2    |    |   -2    |
                              ◟ _______ ◞    ◟ _______ ◞
                                          
                                          0              
                                        
                              ◜ ‾‾‾‾‾‾‾ ◝    ◜ ‾‾‾‾‾‾‾ ◝ 
                              |   +5    |   |    -5    |
                              ◟ _______ ◞    ◟ _______ ◞


-------------------------------------------------------------------------------------------
  Elements  Console  Sources Network  Performance      >>                       🔅  ⁞  x
            ‾‾‾‾‾‾‾
-------------------------------------------------------------------------------------------
  Download the React DevTools for a better development experience:         react refresh:6 
  https://reactjs.org/link/react-devtools
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾ 
   1                                                                        Counter.jsx:10 
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾ 
   1                                                                        Counter.jsx:10 
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾ 
   2                                                                        Counter.jsx:10 
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾ 
   2                                                                        Counter.jsx:10
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾ 
   5                                                                        Counter.jsx:10
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾ 
   5                                                                        Counter.jsx:10
-------------------------------------------------------------------------------------------

이제 +1 버튼, +2 버튼, +5 버튼이 생겼다, 각각에 해당하는 감소(-) 버튼도 생겼고
+2 버튼과 -2 버튼을 누르면 어떤 문제가 나올까?
여기서도 우리가 생각한 대로 숫자가 증가하고 감소하지 않는다 
왜 이런 걸까?

다음 시간에 해결 방법을 찾아보자
