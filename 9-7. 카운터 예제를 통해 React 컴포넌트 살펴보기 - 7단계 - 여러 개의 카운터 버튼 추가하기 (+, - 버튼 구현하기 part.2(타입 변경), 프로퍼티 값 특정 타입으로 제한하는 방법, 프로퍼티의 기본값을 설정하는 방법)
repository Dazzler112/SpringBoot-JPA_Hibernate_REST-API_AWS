

--------------------------------------------------------------------------------------------

🌎 http://localhost:3000 사이트화면 ==>

(자세한것 확인 하려면 3000으로 접속...)
(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  


                                       
                                          
                                        0111               
                                        
                              ◜ ‾‾‾‾‾‾‾ ◝    ◜ ‾‾‾‾‾‾‾ ◝ 
                              |   +1    |    |   -1    |
                              ◟ _______ ◞    ◟ _______ ◞
                                          
                                          0               
                                        
                              ◜ ‾‾‾‾‾‾‾ ◝    ◜ ‾‾‾‾‾‾‾ ◝ 
                              |   +2    |    |   -2    |
                              ◟ _______ ◞    ◟ _______ ◞
                                          
                                          0              
                                        
                              ◜ ‾‾‾‾‾‾‾ ◝    ◜ ‾‾‾‾‾‾‾ ◝ 
                              |   +5    |   |    -5    |
                              ◟ _______ ◞    ◟ _______ ◞



-------------------------------------------------------------------------------------------

지난 시간에 +1 버튼을 눌렀을 때 문자열 추가 동작이 일어나는 걸 봤다
덧셈 연산이 일어나지 않았지, 어떻게 고쳐야 할까?


VSC에서 App.js로 가보자

-----------------------------------------------------------------------------------------------
⏺ VSC


⏺ App.js




import './App.css';
import Counter from './components/counter/Counter';

function App() {
  return (
    <div className="App">

      //1: 여기서 큰따옴표를 빼보겠다 이러면 될까?, 문자열 대신 숫자를 넘겨보는 것이다
     <Counter by=1/>
     <Counter by=2/>           
     <Counter by=5/>
    </div>
  )
}

// {property1: 'value1', property2: 'value2'} 
/*
function PlayingWithProps(properties) {

  console.log(properties)
  console.log(properties.property1)
  console.log(properties.property2)
  return(
    <div>Props</div>
  )
} 
*/

function PlayingWithProps({property1, property2}) {

  console.log(property1)
  console.log(property2)
  return(
    <div>Props</div>
  )
}

export default App;

-----------------------------------------------------------------------------------------------
과연 될까?                                         |
                                                  V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000 사이트화면 ==>

(자세한것 확인 하려면 3000으로 접속...)


Compiled with problems:

ERROR in ./src/App.js
Module build failed (from ./node_modules/babel-loader/lib/index.js):
SyntaxError: C:\study\frontend\todo-app\src\App.js: JSX value should be either an expression or a quoted JSX text. (22:17)

  20 |         </a>
  21 |       </header> */}
> 22 |      <Counter by=1/>
     |                  ^
  23 |      <Counter by=2/>           
  24 |      <Counter by=5/>
  25 |     </div>
    at constructor (C:\study\frontend\todo-app\node_modules\@babel\parser\lib\index.js:351:19)
    ...
ERROR
[eslint] 
src\App.js
  Line 22:17:  Parsing error: JSX value should be either an expression or a quoted JSX text. (22:17)

-------------------------------------------------------------------------------------------

보디시피 컴파일 오류가 발생한다 

이 문제를 해결하려면 숫자 앞뒤에 중괄호를 붙여야 한다

-----------------------------------------------------------------------------------------------
⏺ VSC


⏺ App.js



import './App.css';
import Counter from './components/counter/Counter';

function App() {
  return (
    <div className="App">

    //2: 중괄호 안에 숫자를 넣어줘야 숫자 값을 넘길 수 있다, 1, 2, 5를 이렇게 넘긴 다음 화면을 새로 고쳐보겠다,
     <Counter by={1}/>
     <Counter by={2}/>           
     <Counter by={5}/>
    </div>
  )
}

// {property1: 'value1', property2: 'value2'}
/*
function PlayingWithProps(properties) {

  console.log(properties)
  console.log(properties.property1)
  console.log(properties.property2)
  return(
    <div>Props</div>
  )
} 
*/

function PlayingWithProps({property1, property2}) {

  console.log(property1)
  console.log(property2)
  return(
    <div>Props</div>
  )
}

export default App;
-----------------------------------------------------------------------------------------------
페이지를 확식히 새로 고친 다음                      |
+1 버튼을 눌러보고 -1버튼도 눌러보겠다              V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000 사이트화면 ==>

(자세한것 확인 하려면 3000으로 접속...)
(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  


                                       
                                          
                                          1               
                                        
                              ◜ ‾‾‾‾‾‾‾ ◝    ◜ ‾‾‾‾‾‾‾ ◝ 
                              |   +1    |    |   -1    |
                              ◟ _______ ◞    ◟ _______ ◞
                                          
                                          2               
                                        
                              ◜ ‾‾‾‾‾‾‾ ◝    ◜ ‾‾‾‾‾‾‾ ◝ 
                              |   +2    |    |   -2    |
                              ◟ _______ ◞    ◟ _______ ◞
                                          
                                          -25              
                                        
                              ◜ ‾‾‾‾‾‾‾ ◝    ◜ ‾‾‾‾‾‾‾ ◝ 
                              |   +5    |   |    -5    |
                              ◟ _______ ◞    ◟ _______ ◞



-------------------------------------------------------------------------------------------

아주 잘 동작하고있다 +2를 눌러도 잘 동작한다
+5버튼도 잘 되고 -5버튼도 모두 잘 동작한다

연습삼아 카운터가 0 밑으로 내려가지 못하게 하는 로직을 구현해 봐도 좋겠다

어쨌든 이제 대부분의 기능이 예상한 대로 잘 동작한다

그런데 이 프로퍼티에 
     <Counter by={1}/>
     <Counter by={2}/>           
     <Counter by={5}/>
특정 타입의 값만 넣을 수 있게 제한하려면 어떻게 해야 할까?



'PropTypes'를 사용하면 그렇게 할 수 있다

Counter.jsx파일로 가서 Counter 컴포넌트를 위한 PropTypes를 정의하면 된다

-----------------------------------------------------------------------------------------------
⏺ VSC


⏺ Counter.jsx



import { useState } from 'react'
import './Counter.css'

//3-2: 'import {PropTypes}' 가져올 곳은 'prop-types'이다, 이렇게 하고 타입을 선택하면 된다 //3-3: 다시 Counter.propTypes 안으로..
import {PropTypes} from 'prop-types'

export default function Counter({by}) {

    // [0, ƒ] 
    // const [firstElt, secondElt] = array
    const [count, setCount] = useState(0);

    function incrementCounterFunction() {

        setCount(count + by)

    }

    function decrementCounterFunction() {
        
        setCount(count - by)
    }

    return(
    <div className='Counter'>
        <span className='count'>{count}</span>
        <div>
         <button className="counterButton" 
                 onClick={incrementCounterFunction}
         >+{by}</button>
        <button className="counterButton" 
                 onClick={decrementCounterFunction}
         >-{by}</button>
        </div>
    </div>
    )
}

//3: 맨 밑에 'Counter.propTypes'를 추가하고 객체 형태로 값을 넣어야 한다, 
Counter.propTypes = {
  //3-1: 객체 표시를 추가하고 타입을 지정할 프로퍼티 이름을 넣는다, 'by'를 넣으면 되겠지
  //지정할 타입은 PropTypes에 점(.)을 찍으면 나오는게 없네.., 먼저 PropTypes를 임포트해야 할 것 같다//3-2: 위의 임포트로..
  //3-3: 타입을 숫자(number)로 지정하고 저장하겠다, 다시 브라우저로 돌아가보면..
    by: PropTypes.number
}
-----------------------------------------------------------------------------------------------
                                             |
                                             V
--------------------------------------------------------------------------------------------

🌎 http://localhost:3000 사이트화면 ==>

(자세한것 확인 하려면 3000으로 접속...)
(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  


                                       
                                          
                                          1               
                                        
                              ◜ ‾‾‾‾‾‾‾ ◝    ◜ ‾‾‾‾‾‾‾ ◝ 
                              |   +1    |    |   -1    |
                              ◟ _______ ◞    ◟ _______ ◞
                                          
                                          2               
                                        
                              ◜ ‾‾‾‾‾‾‾ ◝    ◜ ‾‾‾‾‾‾‾ ◝ 
                              |   +2    |    |   -2    |
                              ◟ _______ ◞    ◟ _______ ◞
                                          
                                          -25              
                                        
                              ◜ ‾‾‾‾‾‾‾ ◝    ◜ ‾‾‾‾‾‾‾ ◝ 
                              |   +5    |   |    -5    |
                              ◟ _______ ◞    ◟ _______ ◞



-------------------------------------------------------------------------------------------

모든 요소가 정상적으로 로딩된다
