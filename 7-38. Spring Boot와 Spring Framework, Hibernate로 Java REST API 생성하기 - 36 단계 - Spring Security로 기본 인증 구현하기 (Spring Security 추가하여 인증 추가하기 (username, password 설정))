

지난 몇 단계에 걸쳐 REST API 여러 개를 생성했는데 
REST API를 생성할 때 한 가지 지나친 부분이 있다 
그게 뭘까?
localhost users로 가보자 

-----------------------------------------------------------------------------------------------------------------

🌎 http://localhost:8080/users 사이트화면 ==>



[
  {
    "id": 1,
    "name": "Adam",
    "birthDate": "1994-06-12"
  },
  {
    "id": 2,
    "name": "Eve",
    "birthDate": "1999-06-12"
  },
  {
    "id": 3,
    "name": "Jim",
    "birthDate": "2004-06-12"
  }
]
-----------------------------------------------------------------------------------------------------------------

사용자의 세부 정보가 보인다 
                      |
                      V
-----------------------------------------------------------------------------------------------------------------

🌎 http://localhost:8080/users/1 사이트화면 ==>


{
  "name": "Adam",
  "birthDate": "1994-06-12",
    "_links": {
      "all-users": {
        "href": "http://localhost:8080/users"
      }
    }
}

-----------------------------------------------------------------------------------------------------------------

users/1이라는 특정 사용자이다 
사용자의 세부 정보를 돌려받을 수 있다 


-----------------------------------------------------------------------------------------------------------------

🖇 Talend API Tester 화면 ==>    (더 자세한건 크롬 확장프로그램 Talend API Tester 실행해서 확인..)

  METHOD                SCHEME :// HOST [ ":" PORT ] [ PATH [ "?" QUERY ]]
  ______________      ____________________________________________________________    ___________________
 | POST    | ▼  |    |    http://localhost:8080/users                             |  |  ✈ Send       | ▽ |
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾      ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾    ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                        ▶ QUERY PARAMETERS

  HEADERS   ⬇                   | Form ▼ |      ◀ | ▶  BODY                                   | Text ▼ |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾         |   ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
   ______________   ___________________________   |   
☑ | Content-Type |:| application/json     | 🧪 |  |     {
   ‾‾‾‾‾‾‾‾‾‾‾‾‾‾   ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾   |        "name": "New User",
  ______________                                  |        "birthDate": "1997-08-11"                          
 ( + Add header )   🗝 Add authorization     🗑    |      }                                                  
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾                                  | 
                                                  |
 ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾   ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                                                

-----------------------------------------------------------------------------------------------------------------

Talend API Tester로 가면 localhost:8080/users로 POST 요청을 보낼 수 있지, 콘텐츠 타입은 application/json이 되겠고
본문이 있다, 전송을 누른다  
                                                      |
                                                      V
-----------------------------------------------------------------------------------------------------------------

🖇 Talend API Tester 화면 ==>    (더 자세한건 크롬 확장프로그램 Talend API Tester 실행해서 확인..)


  Response
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
  201                (초록 바탕)
___________________________________________________________________________________________________

  HEADERS                     | pretty ▼ |  ◀ | ▶  BODY                                 | pretty ▼ |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾     |   ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                                              |
Location: http://localhost:8080/users4        |                                                                
Content-Length:	0 byte                        |                     No Content 
Date: Wed, 12 Jun 2024 08:20:40 GMT           |                                                                                
Keep-Alive: timeout=60                        |                                                 
Connection: keep-alive                        |                                       
                                              |                  
▶ COMPLETE REQUEST HEADERS                    |                                                                                                                    
                                                                                        
                                                                                                    
                                                 📄 copy                                                          

-----------------------------------------------------------------------------------------------------------------

🔵 현재 우리 API의 문제점

누구든지 우리 REST API로 액세스하고 요청을 보낼 수 있다
누구든지 리소스를 생성할 수 있고
누구든지 REST API 뒤에 나와 있는 세부 정보를 볼 수 있는데, 이건 좋지 않다
우리 REST API에 보안과 인증이 필요하겠지 
어떻게 추가할까?

바로 Spring Security가 등장할 시점이다 

🔵 REST API에 Spring Security 사용하기

이번 단계와 다음 단계에서 Spring Security를 살펴보겠다
지금은 먼저 pom.xml로 가보겠다
pom.xml로 가서 Spring Security를 추가해보자
Spring Security를 시작할 때 이름이 뭔지 맞혀보겠냐? 아주 쉽다

-----------------------------------------------------------------------------------------------------------------

⏺ pom.xml 파일


...
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>


    <!--1: org.springframework.boot가 groudId이고 spring-boot-starter-security가 artifactId이다 이렇게 해주고 저장-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-security</artifactId>
			<version>3.3.0</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-rest-hal-explorer</artifactId>
		</dependency>				
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-hateoas</artifactId>
			<version>3.3.0</version>
		</dependency>		
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-validation</artifactId>
			<version>3.3.0</version>
		</dependency>

		<!--
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
			<version>2.0.2</version>
		</dependency>		

		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-xml</artifactId>
		</dependency>
		-->
	
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		
<!--		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>-->
		
		<dependency>
			<groupId>com.mysql</groupId>
			<artifactId>mysql-connector-j</artifactId>
			<scope>runtime</scope>
		</dependency>	
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>
...

-----------------------------------------------------------------------------------------------------------------

늘 그렇듯이 pom.xml을 변경할 때는 애플리케이션을 멈췄다가 시작해야 하지 
애플리케이션을 시작하면 
콘솔 여기에 비밀번호가 출력되는 게 보인다
Using generated security password: e0cf1a71-b0b4-479a-bb66-3b129d0669d5
생성된 보안 비밀번호를 사용하고 있다고 하지, 바로 이거이다


브라우저로 가서 새로고침하면 

-----------------------------------------------------------------------------------------------------------------

🌎 http://localhost:8080/login 페이지 화면 ==>


                                              Please sign in
                                               __________________________
                                              |Username                  |
                                               ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾ 
                                               __________________________
                                              |Password                  |
                                               ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                                               __________________________
                                              |         Sign in          |
                                               ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
-----------------------------------------------------------------------------------------------------------------

로그인 페이지로 안내한다
users/1을 입력하면 로그인 페이지로 이동하고, Talend API Tester 요청, 즉

-----------------------------------------------------------------------------------------------------------------

🖇 Talend API Tester 화면 ==>    (더 자세한건 크롬 확장프로그램 Talend API Tester 실행해서 확인..)

  METHOD                SCHEME :// HOST [ ":" PORT ] [ PATH [ "?" QUERY ]]
  ______________      ____________________________________________________________    ___________________
 | POST    | ▼  |    |    http://localhost:8080/users                             |  |  ✈ Send       | ▽ |
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾      ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾    ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                        ▶ QUERY PARAMETERS

  HEADERS   ⬇                   | Form ▼ |      ◀ | ▶  BODY                                   | Text ▼ |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾         |   ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
   ______________   ___________________________   |   
☑ | Content-Type |:| application/json     | 🧪 |  |     {
   ‾‾‾‾‾‾‾‾‾‾‾‾‾‾   ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾   |        "name": "New User",
  ______________                                  |        "birthDate": "1997-08-11"                          
 ( + Add header )   🗝 Add authorization     🗑    |      }                                                  
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾                                  | 
                                                  |
 ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾   ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                                                

-----------------------------------------------------------------------------------------------------------------

http://localhost:8080/users에 이 내용과 함께 POST 요청을 보내면 
                                                    |
                                                    V
-----------------------------------------------------------------------------------------------------------------

🖇 Talend API Tester 화면 ==>    (더 자세한건 크롬 확장프로그램 Talend API Tester 실행해서 확인..)

  Response
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
  401                (빨간색 바탕)
___________________________________________________________________________________________________

  HEADERS                       | pretty ▼ |  ◀ | ▶  BODY                                 | pretty ▼ |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾     |   ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                                                |
Vary: Origin                                    |
Vary: Access-Control-Request-Method             |
Vary: Access-Control-Request-Headers            |
X-Content-Type-Options:	nosniff                 |
X-XSS-Protection: 0                             |
Cache-Control:	                                |                      No Content
no-cache, no-store, max-age=0, must-revalidate  |
Pragma:	no-cache                                |
Expires:  0                                     |
X-Frame-Options:  DENY                          |
WWW-Authenticate: Basic realm="Realm"           | 
Content-Length:	0 byte                          |
Date: Wed, 12 Jun 2024 08:52:59 GMT             |
Keep-Alive: timeout=60                          |
Connection: keep-alive                          |                                     
                                                                                                    
▶ COMPLETE REQUEST HEADERS        
                                                     📄 copy


-----------------------------------------------------------------------------------------------------------------

401 응답이 나온다 
제대로 동작하는 게 없다 
실제 이 API를 동작하게 하는 방법은 자격 증명을 전달하는 것이다 

-----------------------------------------------------------------------------------------------------------------

🌎 http://localhost:8080/login 페이지 화면 ==>


                                              Please sign in
                                               __________________________
                                              |user                      |
                                               ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾ 
                                               __________________________
                                              |**************************|
                                               ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                                               __________________________
                                              |         Sign in          |
                                               ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
-----------------------------------------------------------------------------------------------------------------

자격 증명은 user와 비밀헌호이고 비밀번호는 여기 있는 건데 
Using generated security password: e0cf1a71-b0b4-479a-bb66-3b129d0669d5
이걸 복사해서 여기 붙여 넣은 다음 로그인하면 
                                                                |
                                                                V
-----------------------------------------------------------------------------------------------------------------

🌎 http://localhost:8080/users/1?continue 사이트화면 ==>



{
  "name": "Adam",
  "birthDate": "1994-06-12",
    "_links": {
      "all-users": {
        "href": "http://localhost:8080/users"
      }
    }
}

-----------------------------------------------------------------------------------------------------------------
이제 세부 정보가 여기에 나온다

여기도 마찬가지이다, Talend API Tester로 가서 

-----------------------------------------------------------------------------------------------------------------

🖇 Talend API Tester 화면 ==>    (더 자세한건 크롬 확장프로그램 Talend API Tester 실행해서 확인..)

  METHOD                SCHEME :// HOST [ ":" PORT ] [ PATH [ "?" QUERY ]]
  ______________      ____________________________________________________________    ___________________
 | GET     | ▼  |    |    http://localhost:8080/users                             |  |  ✈ Send       | ▽ |
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾      ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾    ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                        ▶ QUERY PARAMETERS

  HEADERS   ⬇                   | Form ▼ |      ◀ | ▶  BODY                                   | Text ▼ |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾         |   ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
   ______________   ___________________________   |   
☑ | Content-Type |:| application/json     | 🧪 |  |     
   ‾‾‾‾‾‾‾‾‾‾‾‾‾‾   ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾   |      XHR does not allow payloads for GET request.
  ______________                                  |                               
 ( + Add header )   🗝 Add authorization     🗑    |                                                        
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾                                  | 
                                                  |
 ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾   ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾


(Add authorization 를 클릭하면 따로 인증 화면이 나옴)


                  ___________________________________________________________________________
                 |  Authorization                                                            |
                 | _________________________________________________________________________ |
                 |                         _______________                                   |                      
                 |                   Type | Authorization |                                  |
                 |                         ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾                                   |
                 |                         ______________________________                    |                                          
                 |               Username | user                         |                   |             
                 |                         ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾                    |                                 
                 |                         ______________________________                    |                                    
                 |               Password | *****************************|                   | 
                 |                         ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾                    |                                           
                 |                         ▢ show password                                   |                                
                 |                                                                           |             
                 |‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾|                                                                                  
                 |                                                 ___________    ________   |                                
                 |                                                | X Cancel  |  | ✔ Set  |  |                              
                 |                                                 ‾‾‾‾‾‾‾‾‾‾‾    ‾‾‾‾‾‾‾‾   |                                 
                  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾

                                                  | 인증화면 다 하고 Set 누르면 나오는 Headers
                                                  V

  METHOD                SCHEME :// HOST [ ":" PORT ] [ PATH [ "?" QUERY ]]
  ______________      ____________________________________________________________    ___________________
 | GET     | ▼  |    |    http://localhost:8080/users                             |  |  ✈ Send       | ▽ |
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾      ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾    ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                        ▶ QUERY PARAMETERS

  HEADERS   ⬇                   | Form ▼ |      ◀ | ▶  BODY                                   | Text ▼ |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾         |   ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
   ______________   ___________________________   |   
☑ | Authorization|:|Basic dXNlcjplMGNmMW..| 🧪 |  |     
   ‾‾‾‾‾‾‾‾‾‾‾‾‾‾   ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾   |      XHR does not allow payloads for GET request.
  ______________                                  |                                  
 ( + Add header )   🗝 Add authorization     🗑    |                                                       
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾                                  | 
                                                  |
 ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾   ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
-----------------------------------------------------------------------------------------------------------------
여기에서 GET을 선택하고 localhost:8080/users로 요청하고 
인증 헤더를 넣겠다, 인증 사용자 user와 비밀번호를 넣는다
설정을 누르고 이제 전송을 누르면 바로 응답이 돌아온다
                                                  |
                                                  V
-----------------------------------------------------------------------------------------------------------------

🖇 Talend API Tester 화면 ==>    (더 자세한건 크롬 확장프로그램 Talend API Tester 실행해서 확인..)

  Response
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
  200                (초록색 바탕)
___________________________________________________________________________________________________

  HEADERS                       | pretty ▼ |  ◀ | ▶  BODY                                 | pretty ▼ |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾     |   ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                                                |    [
Vary: Origin                                    |      {      
Vary: Access-Control-Request-Method             |       id: 1,                                            
Vary: Access-Control-Request-Headers            |       name: "Adam",                                         
X-Content-Type-Options:	nosniff                 |       birthDate: "1994-06-12"                                      
X-XSS-Protection: 0                             |      },                              
Cache-Control:	                                |       {           
no-cache, no-store, max-age=0, must-revalidate  |        id: 2,                                          
Pragma:	no-cache                                |        name: "Eve",                  
Expires:  0                                     |        birthDate: "1999-06-12"         
X-Frame-Options:  DENY                          |       },                
Content-Type: application/json                  |        {                          
Transfer-Encoding:  chunked                     |         id: 3,                            
Date: Wed, 12 Jun 2024 09:30:29 GMT             |         name: "Jim",            
Keep-Alive: timeout=60                          |         birthDate: "2004-06-12"                             
Connection: keep-alive                          |        }                             
                                                |     ]                                               
▶ COMPLETE REQUEST HEADERS        
                                                     lines nums 📄 copy            length: 143 bytes


-----------------------------------------------------------------------------------------------------------------

GET 요청이 응답을 보내주고 있다 
이제 애플리케이션을 멈추겠다 
그리고 애플리케이션을 다시 시작한다 
어떻게 되었지?
여기 다른 비밀번호가 출력됐다, 
Using generated security password: 4b92c263-9482-4003-98a6-84cb244c1e90
별로 좋지 않다 
그러니까 자체 사용자 ID와 비밀번호를 설정해야겠지 

🔵 Spring Security 자체 사용자 ID와 비밀번호 사용

appication.properties로 들어가보자

-----------------------------------------------------------------------------------------------------------------

⏺ application.properties 파일


spring.application.name=restful-web-services

logging.level.org.springframework=info

management.endpoints.web.exposure.include=*

#spring.datasource.url=jdbc:h2:mem:testdb

spring.jpa.defer-datasource-initialization=true

spring.jpa.show-sql=true

spring.datasource.url=jdbc:mysql://localhost:3306/social-media-database
spring.datasource.username=social-media-user
spring.datasource.password=dummypassword

spring.jpa.hibernate.ddl-auto=update

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

#2: 여기서 설정할 수 있다 spring.security.user.name=username
spring.security.user.name=username

#2-1: 그리고 비밀번호도 설정할 수 있다 user.password=password 라고 하고 저장하겠다
spring.security.user.name=username
-----------------------------------------------------------------------------------------------------------------

애플리케이션을 멈추고 다시시작
콘솔에 비밀번호가 출력되지 않았지

웹브라우저를 전부 닫겠다 
그리고 크롬 브라우저를 재시작해서 localhost:8080/users를 입력하면

-----------------------------------------------------------------------------------------------------------------

🌎 http://localhost:8080/login 페이지 화면 ==>


                                              Please sign in
                                               __________________________
                                              |Username                  |
                                               ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾ 
                                               __________________________
                                              |Password                  |
                                               ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                                               __________________________
                                              |         Sign in          |
                                               ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
-----------------------------------------------------------------------------------------------------------------
다시 사용자 이름과 비밀번호를 입력하라는 페이지로 안내하지 
username과 password를 입력하고 로그인하면

-----------------------------------------------------------------------------------------------------------------

🌎 http://localhost:8080/login 페이지 화면 ==>


                                              Please sign in
                                               __________________________
                                              |username                  |
                                               ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾ 
                                               __________________________
                                              |password                  |
                                               ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                                               __________________________
                                              |         Sign in          |
                                               ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
-----------------------------------------------------------------------------------------------------------------
입력 클릭                                               |
                                                       V
-----------------------------------------------------------------------------------------------------------------

🌎 http://localhost:8080/users?continue 사이트화면 ==>



[
  {
    "id": 1,
    "name": "Adam",
    "birthDate": "1994-06-12"
  },
  {
    "id": 2,
    "name": "Eve",
    "birthDate": "1999-06-12"
  },
  {
    "id": 3,
    "name": "Jim",
    "birthDate": "2004-06-12"
  }
]

-----------------------------------------------------------------------------------------------------------------

애플리케이션 안으로 안내한다 

Talend API Tester를 사용하더라도 같은 작업을 할 수 있다
Talend API Tester 로 가서 localhost:8080/users로 요청을 보낸다고 해보자

-----------------------------------------------------------------------------------------------------------------

🖇 Talend API Tester 화면 ==>    (더 자세한건 크롬 확장프로그램 Talend API Tester 실행해서 확인..)

  METHOD                SCHEME :// HOST [ ":" PORT ] [ PATH [ "?" QUERY ]]
  ______________      ____________________________________________________________    ___________________
 | GET     | ▼  |    |    http://localhost:8080/users                             |  |  ✈ Send       | ▽ |
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾      ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾    ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                        ▶ QUERY PARAMETERS

  HEADERS   ⬇                   | Form ▼ |      ◀ | ▶  BODY                                   | Text ▼ |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾         |   ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
   ______________   ___________________________   |   
☑ | Authorization|:|Basic dXNlcjplMGNmMW..| 🧪 |  |     
   ‾‾‾‾‾‾‾‾‾‾‾‾‾‾   ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾   |      XHR does not allow payloads for GET request.
  ______________                                  |                                  
 ( + Add header )   🗝 Add authorization     🗑    |                                                       
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾                                  | 
                                                  |
 ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾   ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾

-----------------------------------------------------------------------------------------------------------------

좀 전의 인증을 사용하고 있는데, 또 다시 401 오류를 생성할 것이다 
                                                    |
                                                    V
-----------------------------------------------------------------------------------------------------------------

🖇 Talend API Tester 화면 ==>    (더 자세한건 크롬 확장프로그램 Talend API Tester 실행해서 확인..)

  Response
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
  401                (빨간색 바탕)
___________________________________________________________________________________________________

  HEADERS                       | pretty ▼ |  ◀ | ▶  BODY                                 | pretty ▼ |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾     |   ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                                                |                                                              
Vary: Origin                                    |    {      
Vary: Access-Control-Request-Method             |     timestamp: "2024-06-12T10:12:47.678+00:00",                           
Vary: Access-Control-Request-Headers            |     status: 401,                            
WWW-Authenticate: Basic realm="Realm"           |     error: "Unauthorized",                               
X-Content-Type-Options:	nosniff                 |     message: "Unauthorized",                                  
X-XSS-Protection: 0                             |     path": "/users"                        
Cache-Control: no-cache,                        |    }                                                             
               no-store,                        |                                                   
               max-age=0, must-revalidate       |                                                                                                         
Pragma:	no-cache                                |                        
Expires:  0                                     |                                   
X-Frame-Options:  DENY                          |                            
Content-Type: application/json                  |                                            
Transfer-Encoding:  chunked                     |                                     
Date: Wed, 12 Jun 2024 10:12:47 GMT             |                                                           
Keep-Alive: timeout=60                          |                                                                        
Connection: keep-alive                          |                                     
                                                                                                    
▶ COMPLETE REQUEST HEADERS        
                                                     📄 copy


-----------------------------------------------------------------------------------------------------------------

권한이 없다는 거지
그럼 새 자격 증명을 사용해야 된다 

새 자격 증명은 username 과 password이다
-----------------------------------------------------------------------------------------------------------------

🖇 Talend API Tester 화면 ==>    (더 자세한건 크롬 확장프로그램 Talend API Tester 실행해서 확인..)

(Add authorization 를 클릭하면 따로 인증 화면이 나옴)


                  ___________________________________________________________________________
                 |  Authorization                                                            |
                 | _________________________________________________________________________ |
                 |                         _______________                                   |                      
                 |                   Type | Authorization |                                  |
                 |                         ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾                                   |
                 |                         ______________________________                    |                                          
                 |               Username | username                     |                   |             
                 |                         ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾                    |                                 
                 |                         ______________________________                    |                                    
                 |               Password | ********                     |                   | 
                 |                         ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾                    |                                           
                 |                         ▢ show password                                   |                                
                 |                                                                           |             
                 |‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾|                                                                                  
                 |                                                 ___________    ________   |                                
                 |                                                | X Cancel  |  | ✔ Set  |  |                              
                 |                                                 ‾‾‾‾‾‾‾‾‾‾‾    ‾‾‾‾‾‾‾‾   |                                 
                  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                                                    |  
                                                    V
  METHOD                SCHEME :// HOST [ ":" PORT ] [ PATH [ "?" QUERY ]]
  ______________      ____________________________________________________________    ___________________
 | GET     | ▼  |    |    http://localhost:8080/users                             |  |  ✈ Send       | ▽ |
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾      ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾    ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                        ▶ QUERY PARAMETERS

  HEADERS   ⬇                   | Form ▼ |      ◀ | ▶  BODY                                   | Text ▼ |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾         |   ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
   ______________   ___________________________   |   
☑ | Authorization|:|Basic dXNlcm5hbWU6cG..| 🧪 |  |     
   ‾‾‾‾‾‾‾‾‾‾‾‾‾‾   ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾   |      XHR does not allow payloads for GET request.
  ______________                                  |                                  
 ( + Add header )   🗝 Add authorization     🗑    |                                                       
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾                                  | 
                                                  |
 ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾   ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
-----------------------------------------------------------------------------------------------------------------
Set을 누르고 전송한다                                  |
                                                      V
-----------------------------------------------------------------------------------------------------------------

🖇 Talend API Tester 화면 ==>    (더 자세한건 크롬 확장프로그램 Talend API Tester 실행해서 확인..)

  Response
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
  200                (초록색 바탕)
___________________________________________________________________________________________________

  HEADERS                       | pretty ▼ |  ◀ | ▶  BODY                                 | pretty ▼ |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾     |   ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                                                |    [
Vary:	Origin                                  |      {      
Vary:	Access-Control-Request-Method           |       id: 1,                                            
Vary:	Access-Control-Request-Headers          |       name: "Adam",                                         
X-Content-Type-Options:	nosniff                 |       birthDate: "1994-06-12"                                      
X-XSS-Protection:0                              |      },                              
Cache-Control:	                                |       {           
no-cache, no-store, max-age=0, must-revalidate  |        id: 2,                                          
Pragma:	no-cache                                |        name: "Eve",                  
Expires: 0                                      |        birthDate: "1999-06-12"         
X-Frame-Options:  DENY                          |       },                
Content-Type: application/json                  |        {                          
Transfer-Encoding:  chunked                     |         id: 3,                            
Date: Wed, 12 Jun 2024 10:20:09 GMT             |         name: "Jim",            
Keep-Alive: timeout=60                          |         birthDate: "2004-06-12"                             
Connection: keep-alive                          |        }                             
                                                |     ]                                               
▶ COMPLETE REQUEST HEADERS        
                                                     lines nums 📄 copy            length: 143 bytes


-----------------------------------------------------------------------------------------------------------------

이제 성공했다 



Spring Security의 좋은 점은 지금까지 생성한 API에 전부 보안을 추가할 수 있다는 것이다,
사용자 리소스, 사용자 JPA 리소스 등 지금까지 생성한 모든 API에 Spring Security가 기본값으로 인증을 추가한다
