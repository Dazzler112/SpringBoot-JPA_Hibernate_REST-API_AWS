

Internationalization - i18n
                                                                                                                                
● Your Rest API might have consumers from around the world  
● How do you customize it to users around the world?
  ■ Internationalization - i18n
● Typically HTTP Request Heade - Accept - Language is used
  ■ Accept-Language - indicates natural language and lacale that the consumer prefers
  ■ Example: en - English (Good Morning)
  ■ Example: nl - Dutch (Goedmorgen)
  ■ Example: fr - French (Bonjour)



이번 학습에선 국제화에 대해 살펴보겠다
● Your Rest API might have consumers from around the world
너의 REST API에는 전 세계의 소비자가 있을 수 있다
● How do you customize it to users around the world?
다른 언어를 사용하는 전 세계의 이용자들에게 REST API를 사용자 정의하려면 어떻게 해야 할까?
  ■ Internationalization - i18n
이때 바로 국제화 도는 i18n을 사용해야 한다,
영어로 국제화는 18개의 글자로 이루어져 있기 때문에 i18n으로 간략히 줄여 쓰기도 한다
● Typically HTTP Request Heade - Accept - Language is used
국제화를 처리할 때마다 HTTP Request 헤더를 사용하는데 요청의 일부로 Accept-Language라는 헤더를 전송한다
  ■ Accept-Language - indicates natural language and lacale that the consumer prefers
Accept-Language 헤더는 자연어와 소비자가 선호하는 로케일을 나타낸다
  ■ Example: en - English (Good Morning)
예를 들어, en은 English를 가리킨다 Accept-Language로 en을 전송하면 영어로 응답을 요청하게 되는 건데
가령, 사용자에게 인사말을 건네는 환영 서비스가 있다면 응답은 'Good Morning'이 될 수 있다
  ■ Example: nl - Dutch (Goedmorgen)
사용자가 nl이라는 Accept-Language 헤더를 전송하는 경우, 우리는 네덜란드어로 'Goedmorgen'라고 응답해야 한다,
  ■ Example: fr - French (Bonjour)
fr은 프랑스어이므로 응답은 'Bonjour'가 되겠지

여기서 강조하고 싶은 점은 국제화나 i18n을 지원하는 경우 Accept-Language 헤더를 다루게 된다는 것이다,
요청받은 언어를 바탕으로 해당 특정 언어로 응답을 전송해야 한다 
높은 수준의 국제화 개념을 파악했으니 이제 국제화의 구현에 대해 살펴보도록 하겠다


HelloWorldController 클래스 에서 @GetMapping(path="/hello-world")를 구현했었다 이것을 복사해서 

--------------------------------------------------------------------------------------------------------------------------------



⏺ HelloWorldController 클래스파일



package com.in28minutes.rest.webservices.restfulwebservices.helloworld;

import org.springframework.web.bind.annotation.*;

//REST API
@RestController
public class HelloWorldController {


	@GetMapping(path = "/hello-world")
	public String helloWorld() {
		return "Hello World";
	}
	
	@GetMapping(path = "/hello-world-bean")
	public HelloWorldBean helloWorldBean() {
		return new HelloWorldBean("Hello World");
	}
	
	// Path Parameters
	// /users/{id}/todos/{id} => /users/1/todos/101
	// /hello-world/path-variable/{name}
	// /hello-world/path-variable/Ranga
	
	@GetMapping(path = "hello-world/path-variable/{name}")
	public HelloWorldBean helloWorldPathVariable(@PathVariable String name) {
		return new HelloWorldBean(String.format("Hello World, %s", name));
	}

  //1: 특정클래스 아래에 붙여넣자 여기엔 국제화된 메소드를 생성하려고 하는데 helloWorldInternationalized와 hello-world-internationalized를 입력해 보자, 잘 된 거 같다
	@GetMapping(path = "/hello-world-internationalized")
	public String helloWorldInternationalized() {
		return "Hello World";
	}

}

--------------------------------------------------------------------------------------------------------------------------------
이어서 Talend Api Tester로 가서 localhost:8080/hello-world-internationalized로 시도해보자      |
이렇게 하면                                                                                   V
--------------------------------------------------------------------------------------------------------------------------------

🖇 Talend API Tester 화면 ==>    (더 자세한건 크롬 확장프로그램 Talend API Tester 실행해서 확인..)

  METHOD                SCHEME :// HOST [ ":" PORT ] [ PATH [ "?" QUERY ]]
  ______________      ____________________________________________________________    ___________________
 | GET     | ▼  |    |    http://localhost:8080/hello-world-internationalized     |  |  ✈ Send       | ▽ |
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾      ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾    ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                        ▶ QUERY PARAMETERS
  HEADERS   ⬇                   | Form ▼ |  ◀ | ▶  BODY                                   | Text ▼ |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾     |   ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
   ______________     __________________      |    
☑ | Content-Type | : | application/json | x   |    XHR does not allow payload for GET request.                           
   ‾‾‾‾‾‾‾‾‾‾‾‾‾‾     ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾      |                                   
  ______________                              |                                
 ( + Add header )                             |                                    
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾                              |                                    
  🗝 Add authorization         🗑              |                                    
                                              |    ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                                                   Text JSON XML HTML | Format Body |
                                                    ☑ Enable body evaluation

                                   

--------------------------------------------------------------------------------------------------------------------------------
                                                                                      |
                                                                                      V
--------------------------------------------------------------------------------------------------------------------------------

🖇 Talend API Tester 화면 ==>    (더 자세한건 크롬 확장프로그램 Talend API Tester 실행해서 확인..)


  Response
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
  200                (초록 바탕)
___________________________________________________________________________________________________

  HEADERS                     | pretty ▼ |  ◀ | ▶  BODY                                 | pretty ▼ |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾     |   ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                                              |
Content-Type: text/plain;charset=UTF-8        |    Hello World                                        
Content-Length:	11 bytes                      |                                      
Date: Wed, 29 May 2024 09:19:03 GMT 	        |                                                                         
Keep-Alive:	timeout=60                        |                                        
Connection:	keep-alive                        |                                 
                                              |              
▶ COMPLETE REQUEST HEADERS                    |                                                                                                                   
                                              |                                             
                                              |                                                                                                                                                                         
                                                                                                
                                                                                                    
                                                  lines nums  📄 copy              length: 11 bytes                                                    

--------------------------------------------------------------------------------------------------------------------------------
Hello World가 반환된다


--------------------------------------------------------------------------------------------------------------------------------



⏺ HelloWorldController 클래스파일



package com.in28minutes.rest.webservices.restfulwebservices.helloworld;

import org.springframework.web.bind.annotation.*;

//REST API
@RestController
public class HelloWorldController {


	@GetMapping(path = "/hello-world")
	public String helloWorld() {
		return "Hello World";
	}
	
	@GetMapping(path = "/hello-world-bean")
	public HelloWorldBean helloWorldBean() {
		return new HelloWorldBean("Hello World");
	}
	
	// Path Parameters
	// /users/{id}/todos/{id} => /users/1/todos/101
	// /hello-world/path-variable/{name}
	// /hello-world/path-variable/Ranga
	
	@GetMapping(path = "hello-world/path-variable/{name}")
	public HelloWorldBean helloWorldPathVariable(@PathVariable String name) {
		return new HelloWorldBean(String.format("Hello World, %s", name));
	}

	@GetMapping(path = "/hello-world-internationalized")
	public String helloWorldInternationalized() {
    //2: Hello World V2를 입력하면 이곳에서 확인할 수 있을 것이다
		return "Hello World V2";
	}

}

--------------------------------------------------------------------------------------------------------------------------------
                                                                                              |
                                                                                              v
--------------------------------------------------------------------------------------------------------------------------------

🖇 Talend API Tester 화면 ==>    (더 자세한건 크롬 확장프로그램 Talend API Tester 실행해서 확인..)

  METHOD                SCHEME :// HOST [ ":" PORT ] [ PATH [ "?" QUERY ]]
  ______________      ____________________________________________________________    ___________________
 | GET     | ▼  |    |    http://localhost:8080/hello-world-internationalized     |  |  ✈ Send       | ▽ |
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾      ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾    ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                        ▶ QUERY PARAMETERS
  HEADERS   ⬇                   | Form ▼ |  ◀ | ▶  BODY                                   | Text ▼ |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾     |   ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
   ______________     __________________      |    
☑ | Content-Type | : | application/json | x   |    XHR does not allow payload for GET request.                           
   ‾‾‾‾‾‾‾‾‾‾‾‾‾‾     ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾      |                                   
  ______________                              |                                
 ( + Add header )                             |                                    
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾                              |                                    
  🗝 Add authorization         🗑              |                                    
                                              |    ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                                                   Text JSON XML HTML | Format Body |
                                                    ☑ Enable body evaluation

                                   

--------------------------------------------------------------------------------------------------------------------------------
                                                                                            |
                                                                                            V
--------------------------------------------------------------------------------------------------------------------------------

🖇 Talend API Tester 화면 ==>    (더 자세한건 크롬 확장프로그램 Talend API Tester 실행해서 확인..)


  Response
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
  200                (초록 바탕)
___________________________________________________________________________________________________

  HEADERS                     | pretty ▼ |  ◀ | ▶  BODY                                 | pretty ▼ |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾     |   ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                                              |
Content-Type: text/plain;charset=UTF-8        |    Hello World V2                                        
Content-Length:	14 bytes                      |                                      
Date: Wed, 29 May 2024 09:22:48 GMT 	        |                                                                         
Keep-Alive:	timeout=60                        |                                        
Connection:	keep-alive                        |                                 
                                              |              
▶ COMPLETE REQUEST HEADERS                    |                                                                                                                   
                                              |                                             
                                              |                                                                                                                                                                         
                                                                                                
                                                                                                    
                                                  lines nums  📄 copy              length: 14 bytes                                                    

--------------------------------------------------------------------------------------------------------------------------------

잘 된 것 같다


		  1:
		  2:
		  - Example: `en` - English (Good Morning)
		  - Example: `nl` - Dutch (Goedmorgen)
		  - Example: `fr` - French (Bonjour)
	    - Example: `de` - Deutsch (Guten Morgen)
이제 이 텍스트를 국제화해야 하는데 
누군가 영어를 요청한다면 Good Morning을 반환하고
nl을 요청한다면 Goedemorgen을, 프랑스어의 경우 BonJour를 반환해야 한다
우선 이 메시지를 어딘가에 저장해야 한다 
가져올 수 있도록 이 메시지를 어딘가에 저장해야 하는데 
두 번째로는 이 값을 가져올 수 있는 코드를 작성해야 하지
이 값을 정의하는 작업부터 시작해보겠다

