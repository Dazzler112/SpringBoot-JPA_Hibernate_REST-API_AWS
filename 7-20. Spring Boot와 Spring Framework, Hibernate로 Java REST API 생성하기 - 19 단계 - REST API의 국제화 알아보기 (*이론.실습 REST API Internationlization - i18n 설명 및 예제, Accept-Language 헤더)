

Internationalization - i18n
                                                                                                                                
● Your Rest API might have consumers from around the world  
● How do you customize it to users around the world?
  ■ Internationalization - i18n
● Typically HTTP Request Heade - Accept - Language is used
  ■ Accept-Language - indicates natural language and lacale that the consumer prefers
  ■ Example: en - English (Good Morning)
  ■ Example: nl - Dutch (Goedmorgen)
  ■ Example: fr - French (Bonjour)



이번 학습에선 국제화에 대해 살펴보겠다
● Your Rest API might have consumers from around the world
너의 REST API에는 전 세계의 소비자가 있을 수 있다
● How do you customize it to users around the world?
다른 언어를 사용하는 전 세계의 이용자들에게 REST API를 사용자 정의하려면 어떻게 해야 할까?
  ■ Internationalization - i18n
이때 바로 국제화 도는 i18n을 사용해야 한다,
영어로 국제화는 18개의 글자로 이루어져 있기 때문에 i18n으로 간략히 줄여 쓰기도 한다
● Typically HTTP Request Heade - Accept - Language is used
국제화를 처리할 때마다 HTTP Request 헤더를 사용하는데 요청의 일부로 Accept-Language라는 헤더를 전송한다
  ■ Accept-Language - indicates natural language and lacale that the consumer prefers
Accept-Language 헤더는 자연어와 소비자가 선호하는 로케일을 나타낸다
  ■ Example: en - English (Good Morning)
예를 들어, en은 English를 가리킨다 Accept-Language로 en을 전송하면 영어로 응답을 요청하게 되는 건데
가령, 사용자에게 인사말을 건네는 환영 서비스가 있다면 응답은 'Good Morning'이 될 수 있다
  ■ Example: nl - Dutch (Goedmorgen)
사용자가 nl이라는 Accept-Language 헤더를 전송하는 경우, 우리는 네덜란드어로 'Goedmorgen'라고 응답해야 한다,
  ■ Example: fr - French (Bonjour)
fr은 프랑스어이므로 응답은 'Bonjour'가 되겠지

여기서 강조하고 싶은 점은 국제화나 i18n을 지원하는 경우 Accept-Language 헤더를 다루게 된다는 것이다,
요청받은 언어를 바탕으로 해당 특정 언어로 응답을 전송해야 한다 
높은 수준의 국제화 개념을 파악했으니 이제 국제화의 구현에 대해 살펴보도록 하겠다


HelloWorldController 클래스 에서 @GetMapping(path="/hello-world")를 구현했었다 이것을 복사해서 

--------------------------------------------------------------------------------------------------------------------------------



⏺ HelloWorldController 클래스파일



package com.in28minutes.rest.webservices.restfulwebservices.helloworld;

import org.springframework.web.bind.annotation.*;

//REST API
@RestController
public class HelloWorldController {


	@GetMapping(path = "/hello-world")
	public String helloWorld() {
		return "Hello World";
	}
	
	@GetMapping(path = "/hello-world-bean")
	public HelloWorldBean helloWorldBean() {
		return new HelloWorldBean("Hello World");
	}
	
	// Path Parameters
	// /users/{id}/todos/{id} => /users/1/todos/101
	// /hello-world/path-variable/{name}
	// /hello-world/path-variable/Ranga
	
	@GetMapping(path = "hello-world/path-variable/{name}")
	public HelloWorldBean helloWorldPathVariable(@PathVariable String name) {
		return new HelloWorldBean(String.format("Hello World, %s", name));
	}

  //1: 특정클래스 아래에 붙여넣자 여기엔 국제화된 메소드를 생성하려고 하는데 helloWorldInternationalized와 hello-world-internationalized를 입력해 보자, 잘 된 거 같다
	@GetMapping(path = "/hello-world-internationalized")
	public String helloWorldInternationalized() {
		return "Hello World";
	}

}

--------------------------------------------------------------------------------------------------------------------------------
이어서 Talend Api Tester로 가서 localhost:8080/hello-world-internationalized로 시도해보자      |
이렇게 하면                                                                                   V
--------------------------------------------------------------------------------------------------------------------------------

🖇 Talend API Tester 화면 ==>    (더 자세한건 크롬 확장프로그램 Talend API Tester 실행해서 확인..)

  METHOD                SCHEME :// HOST [ ":" PORT ] [ PATH [ "?" QUERY ]]
  ______________      ____________________________________________________________    ___________________
 | GET     | ▼  |    |    http://localhost:8080/hello-world-internationalized     |  |  ✈ Send       | ▽ |
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾      ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾    ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                        ▶ QUERY PARAMETERS
  HEADERS   ⬇                   | Form ▼ |  ◀ | ▶  BODY                                   | Text ▼ |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾     |   ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
   ______________     __________________      |    
☑ | Content-Type | : | application/json | x   |    XHR does not allow payload for GET request.                           
   ‾‾‾‾‾‾‾‾‾‾‾‾‾‾     ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾      |                                   
  ______________                              |                                
 ( + Add header )                             |                                    
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾                              |                                    
  🗝 Add authorization         🗑              |                                    
                                              |    ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                                                   Text JSON XML HTML | Format Body |
                                                    ☑ Enable body evaluation

                                   

--------------------------------------------------------------------------------------------------------------------------------
                                                                                      |
                                                                                      V
--------------------------------------------------------------------------------------------------------------------------------

🖇 Talend API Tester 화면 ==>    (더 자세한건 크롬 확장프로그램 Talend API Tester 실행해서 확인..)


  Response
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
  200                (초록 바탕)
___________________________________________________________________________________________________

  HEADERS                     | pretty ▼ |  ◀ | ▶  BODY                                 | pretty ▼ |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾     |   ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                                              |
Content-Type: text/plain;charset=UTF-8        |    Hello World                                        
Content-Length:	11 bytes                      |                                      
Date: Wed, 29 May 2024 09:19:03 GMT           |                                                                         
Keep-Alive: timeout=60                        |                                        
Connection: keep-alive                        |                                 
                                              |              
▶ COMPLETE REQUEST HEADERS                    |                                                                                                                   
                                              |                                             
                                              |                                                                                                                                                                         
                                                                                                
                                                                                                    
                                                  lines nums  📄 copy              length: 11 bytes                                                    

--------------------------------------------------------------------------------------------------------------------------------
Hello World가 반환된다


--------------------------------------------------------------------------------------------------------------------------------



⏺ HelloWorldController 클래스파일



package com.in28minutes.rest.webservices.restfulwebservices.helloworld;

import org.springframework.web.bind.annotation.*;

//REST API
@RestController
public class HelloWorldController {


	@GetMapping(path = "/hello-world")
	public String helloWorld() {
		return "Hello World";
	}
	
	@GetMapping(path = "/hello-world-bean")
	public HelloWorldBean helloWorldBean() {
		return new HelloWorldBean("Hello World");
	}
	
	// Path Parameters
	// /users/{id}/todos/{id} => /users/1/todos/101
	// /hello-world/path-variable/{name}
	// /hello-world/path-variable/Ranga
	
	@GetMapping(path = "hello-world/path-variable/{name}")
	public HelloWorldBean helloWorldPathVariable(@PathVariable String name) {
		return new HelloWorldBean(String.format("Hello World, %s", name));
	}

	@GetMapping(path = "/hello-world-internationalized")
	public String helloWorldInternationalized() {
    //2: Hello World V2를 입력하면 이곳에서 확인할 수 있을 것이다
		return "Hello World V2";
	}

}

--------------------------------------------------------------------------------------------------------------------------------
                                                                                              |
                                                                                              v
--------------------------------------------------------------------------------------------------------------------------------

🖇 Talend API Tester 화면 ==>    (더 자세한건 크롬 확장프로그램 Talend API Tester 실행해서 확인..)

  METHOD                SCHEME :// HOST [ ":" PORT ] [ PATH [ "?" QUERY ]]
  ______________      ____________________________________________________________    ___________________
 | GET     | ▼  |    |    http://localhost:8080/hello-world-internationalized     |  |  ✈ Send       | ▽ |
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾      ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾    ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                        ▶ QUERY PARAMETERS
  HEADERS   ⬇                   | Form ▼ |  ◀ | ▶  BODY                                   | Text ▼ |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾     |   ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
   ______________     __________________      |    
☑ | Content-Type | : | application/json | x   |    XHR does not allow payload for GET request.                           
   ‾‾‾‾‾‾‾‾‾‾‾‾‾‾     ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾      |                                   
  ______________                              |                                
 ( + Add header )                             |                                    
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾                              |                                    
  🗝 Add authorization         🗑              |                                    
                                              |    ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                                                   Text JSON XML HTML | Format Body |
                                                    ☑ Enable body evaluation

                                   

--------------------------------------------------------------------------------------------------------------------------------
                                                                                            |
                                                                                            V
--------------------------------------------------------------------------------------------------------------------------------

🖇 Talend API Tester 화면 ==>    (더 자세한건 크롬 확장프로그램 Talend API Tester 실행해서 확인..)


  Response
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
  200                (초록 바탕)
___________________________________________________________________________________________________

  HEADERS                     | pretty ▼ |  ◀ | ▶  BODY                                 | pretty ▼ |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾     |   ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                                              |
Content-Type: text/plain;charset=UTF-8        |    Hello World V2                                        
Content-Length:	14 bytes                      |                                      
Date: Wed, 29 May 2024 09:22:48 GMT           |                                                                         
Keep-Alive: timeout=60                        |                                        
Connection: keep-alive                        |                                 
                                              |              
▶ COMPLETE REQUEST HEADERS                    |                                                                                                                   
                                              |                                             
                                              |                                                                                                                                                                         
                                                                                                
                                                                                                    
                                                  lines nums  📄 copy              length: 14 bytes                                                    

--------------------------------------------------------------------------------------------------------------------------------

잘 된 것 같다


		  1:
		  2:
		  - Example: `en` - English (Good Morning)
		  - Example: `nl` - Dutch (Goedmorgen)
		  - Example: `fr` - French (Bonjour)
	    - Example: `de` - Deutsch (Guten Morgen)
이제 이 텍스트를 국제화해야 하는데 
누군가 영어를 요청한다면 Good Morning을 반환하고
nl을 요청한다면 Goedemorgen을, 프랑스어의 경우 BonJour를 반환해야 한다
우선 이 메시지를 어딘가에 저장해야 한다 
가져올 수 있도록 이 메시지를 어딘가에 저장해야 하는데 
두 번째로는 이 값을 가져올 수 있는 코드를 작성해야 하지
이 값을 정의하는 작업부터 시작해보겠다

스프링과 스프링 부트에서 국제화를 다루는 일반적인 방법은 파일을 messages.properties라는 이름으로 정의하는 것이다

resource에서 우클릭하고 New > File 이름을 messages.properties라고 지정해보겠다
이때 두 가지 사항에 주의해야 하는데 
첫 번째는 폴더이다 src/main/resources에서 생성해야 하는데 application.properties와 같은 폴더에 있어야 한다
두 번째는 이름인데 이름은 스펠링에 유의하여 반드시 messages.properties라고 써야한다
Finish를 누른 다음 

여기에서 이것에 대한 값을 설정할 수 있는데 
영어로 아침 인사는 Good Morning이지 그럼 다음과 같이 입력해 보겠다

--------------------------------------------------------------------------------------------------------------------------------

⏺ messages.properties 파일


<!--3: good.morning.message=Good Morning 을 입력 다른 언어에 대한 프로퍼티 파일은 추후 정의하겠다 지금은 기본 사항이 잘 작동하는지 집중하도록 하자-->
good.morning.message=Good Morning
--------------------------------------------------------------------------------------------------------------------------------

우리가 사용하고 있는 것은 바로

		  1:good.morning.message=Good Morning
		  2:
		  - Example: `en` - English (Good Morning)
		  - Example: `nl` - Dutch (Goedmorgen)
		  - Example: `fr` - French (Bonjour)
	    - Example: `de` - Deutsch (Guten Morgen)

- Example: `en` - English (Good Morning) 이 메시지 이름인데
messages.properties에는 이 이름과 함께 메시지가 있으며, 우리는 이것을 반환해야 한다 
올바른 메시지를 가져올 수 있어야 하지 어떻게 할 수 있을까?

스프링과 스프링 부트를 활용함녀 쉽게 처리할 수 있다
MessageSource라는 게 있는데

--------------------------------------------------------------------------------------------------------------------------------


⏺ HelloWorldController 클래스파일


package com.in28minutes.rest.webservices.restfulwebservices.helloworld;

import org.springframework.context.*;
import org.springframework.web.bind.annotation.*;

//REST API
@RestController
public class HelloWorldController {

  //4: private MessageSource messageSource; 를 입력해보자 그리고 임포트를 정리 org.springframework.context.MessageSource를 확인할 수 있는데
  // Strategy interface for resolving messages, with support for the parameterizationand internationalization of such messages. => MessageSource는 메시지의 매개변수화나 국제화에 대한 지원을 통해 메시지를 처리하는 전략 인터페이스이다
  //MessageSource를 사용하고, 이어서 생성자 주입을 사용해야 한다 
	private MessageSource messageSource;

  //4-1: 다음과 같이 작성 public HelloWorldController()에 이어 MessageSource를 인자로 입력한다 다음으로 this.messageSource = messageSource;를 추가해 보자
  public HelloWorldController(MessageSource messageSource) {
		this.messageSource = messageSource;
	}
  //4-1계속 : messages.properties에 프로퍼티를 설정하면 messageSource를 사용해서 가져올 수 있다 그럼 helloWorldInternationalized()메소드로 가서 작성..//4-2: helloWorldInternationalized() 메소드로..


	@GetMapping(path = "/hello-world")
	public String helloWorld() {
		return "Hello World";
	}
	
	@GetMapping(path = "/hello-world-bean")
	public HelloWorldBean helloWorldBean() {
		return new HelloWorldBean("Hello World");
	}
	
	// Path Parameters
	// /users/{id}/todos/{id} => /users/1/todos/101
	// /hello-world/path-variable/{name}
	// /hello-world/path-variable/Ranga
	
	@GetMapping(path = "hello-world/path-variable/{name}")
	public HelloWorldBean helloWorldPathVariable(@PathVariable String name) {
		return new HelloWorldBean(String.format("Hello World, %s", name));
	}
	
	@GetMapping(path = "/hello-world-internationalized")
	public String helloWorldInternationalized() {
    //4-3:유틸리티 메소드는 LocaleContextHolder.getLocale인데 ( Return the Locale associated with the current thread, if any,or the system default Locale otherwise. )-> 보다시피 현재 스레드와 연관된 로케일을 반환한다고 돼있다,그렇지 않으면 시스템 기본 로케일을 반환한다
    //가령, 사용자는 요청과 함께 Accept 헤더를 감지하는데, 그다음 해당 헤더에 대한 로케일은 LocaleContextHolder.getLocale에 의해 반환된다, 로케일을 제공하지 않으면 기본 로케일을 사용할 테고, 그럼 이것을 저장, //4-4:그리고 아래로 다시
    Locale locale = LocaleContextHolder.getLocale();

    //4-2: 그럼 messageSource.getMessage를 입력할 수 있는데 ctrl+스페이스 누르면 나오는 세 번째 getMessage를 사용하려 한다 getMessage를 여러 개 확인할 수 있는데 이 중 세 번째 것을 사용하겠다
    //첫 번째 메개변수는 여기 있는 코드이다 good.morning.message이지 "good.morning.message"이것을 입력한다음 두 번째의 경우, 메시지를 대체할 변수를 넣어야 하는데 아직 대체할 변수를 갖고 있지 않으므로 null로 남겨 두겠다 
    //세 번째는 Default Message를 입력해야 한다 이렇게 "Default Message"를 입력하고, 네 번째에는 locale을 넣어야 하지 우선 어느 로케일을 사용할지 정의해야 하는데 로케일은 어떻게 얻을 수 있을까? 로케일은 바로 Request Header에서 얻을 수 있다
    //제공되는 유틸리티 메소드로 로케일을 얻을 수 있다 locale에 ctrl+1을 해서 Create local variable 'locale'을 선택//4-3:그럼바로 위에 생성되니 위에서 작성.. 
		
    //4-4: 여기에서 return "Hello World V2";를 반환하고 있는데 우리는 messageSource.getMessage에서 가져오는 메시지를 반환해야 한다 (아래 return "Hello World V2";는 주석처리나 삭제) 문제는 없는거 같으니
    return messageSource.getMessage("good.morning.message", null, "Default Message", locale);

//		return "Hello World V2";
		 
		  //1:good.morning.message=Good Morning
		  //2:
//		  - Example: `en` - English (Good Morning)
//		  - Example: `nl` - Dutch (Goedmorgen)
//		  - Example: `fr` - French (Bonjour)
//		  - Example: `de` - Deutsch (Guten Morgen)		

	}
	
}

--------------------------------------------------------------------------------------------------------------------------------
이제 Talend API Tester로 가서 Send를 눌러보자,                                                          |
                                                                                                      V
--------------------------------------------------------------------------------------------------------------------------------

🖇 Talend API Tester 화면 ==>    (더 자세한건 크롬 확장프로그램 Talend API Tester 실행해서 확인..)

  METHOD                SCHEME :// HOST [ ":" PORT ] [ PATH [ "?" QUERY ]]
  ______________      ____________________________________________________________    ___________________
 | GET     | ▼  |    |    http://localhost:8080/hello-world-internationalized     |  |  ✈ Send       | ▽ |
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾      ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾    ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                        ▶ QUERY PARAMETERS
  HEADERS   ⬇                   | Form ▼ |  ◀ | ▶  BODY                                   | Text ▼ |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾     |   ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
   ______________     __________________      |    
☑ | Content-Type | : | application/json | x   |    XHR does not allow payload for GET request.                           
   ‾‾‾‾‾‾‾‾‾‾‾‾‾‾     ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾      |                                   
  ______________                              |                                
 ( + Add header )                             |                                    
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾                              |                                    
  🗝 Add authorization         🗑              |                                    
                                              |    ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                                                   Text JSON XML HTML | Format Body |
                                                    ☑ Enable body evaluation

                                   

--------------------------------------------------------------------------------------------------------------------------------
                                                                                                        |
                                                                                                        V
--------------------------------------------------------------------------------------------------------------------------------

🖇 Talend API Tester 화면 ==>    (더 자세한건 크롬 확장프로그램 Talend API Tester 실행해서 확인..)


  Response
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
  200                (초록 바탕)
___________________________________________________________________________________________________

  HEADERS                     | pretty ▼ |  ◀ | ▶  BODY                                 | pretty ▼ |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾     |   ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                                              |
Content-Type: text/plain;charset=UTF-8        |    Good Morning                                       
Content-Length:	15 bytes                      |                                      
Date: Wed, 29 May 2024 11:02:46 GMT 	      |                                                                         
Keep-Alive: timeout=60                        |                                        
Connection: keep-alive                        |                                 
                                              |              
▶ COMPLETE REQUEST HEADERS                    |                                                                                                                   
                                              |                                             
                                              |                                                                                                                                                                         
                                                                                                
                                                                                                    
                                                  lines nums  📄 copy              length: 15 bytes                                                    

--------------------------------------------------------------------------------------------------------------------------------
굉장한데 Good Morning을 받았다 잘 됐다
Good Morning을 확인할 수 없다면 애플리케이션을 중단하고 다시 시작하길 바란다
가끔 개발자 도구가 메시지나 프로퍼티에 적용한 변경을 자동으로 가져오지 못할 때가 있기 때문이다
Good Morning을 확인하지 못하는 경우, 서버를 다시 시작하고 요청을 전송해야 한다
그렇게 하면 Good Morning이 표시될 것이다



이제 다른 언어에 대해서도 사용자 정의를 해야 하는데
네덜란드어로 해보겠다
여기에서 네덜란드어를 어떻게 사용자 정의를 할 수 있을까?
messages.properties를 복사하고 여기에 붙여 넣겠다, 이름은 messages_nl.properties로 지정해야 한다

--------------------------------------------------------------------------------------------------------------------------------

⏺ messages.properties 파일


<!--5: 여기에선 Goedemorgen을 입력한다 그리고 저장-->
good.morning.message=Goedemorgen
--------------------------------------------------------------------------------------------------------------------------------
이제 헤더를 추가한다                                                                                     |
                                                                                                        V
--------------------------------------------------------------------------------------------------------------------------------

🖇 Talend API Tester 화면 ==>    (더 자세한건 크롬 확장프로그램 Talend API Tester 실행해서 확인..)

  METHOD                SCHEME :// HOST [ ":" PORT ] [ PATH [ "?" QUERY ]]
  ______________      ____________________________________________________________    ___________________
 | GET     | ▼  |    |    http://localhost:8080/users                             |  |  ✈ Send       | ▽ |
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾      ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾    ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                        ▶ QUERY PARAMETERS

  HEADERS   ⬇                   | Form ▼ |           ◀ | ▶  BODY                                   | Text ▼ |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾              |   ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
   ________________     ___________________________    |   
☑ | Accept-Language|:  | nl                    |🧪|   |       XHR does not allow payload for GET request.
   ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾     ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾    |
  ______________                                       |                              
 ( + Add header )   🗝 Add authorization     🗑         |                                                          
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾                                       | 
                                                       |
 ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾          ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                                                

--------------------------------------------------------------------------------------------------------------------------------
Accept-Language와 nl을 입력하고 Send를 클릭한다                                                          |
                                                                                                       V
--------------------------------------------------------------------------------------------------------------------------------

🖇 Talend API Tester 화면 ==>    (더 자세한건 크롬 확장프로그램 Talend API Tester 실행해서 확인..)


  Response
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
  200                (초록 바탕)
___________________________________________________________________________________________________

  HEADERS                     | pretty ▼ |  ◀ | ▶  BODY                                 | pretty ▼ |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾     |   ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                                              |
Content-Type: text/plain;charset=UTF-8        |    Goedemorgen                                       
Content-Length:	11 bytes                      |                                      
Date: Wed, 29 May 2024 11:25:21 GMT           |                                                                         
Keep-Alive: timeout=60                        |                                        
Connection: keep-alive                        |                                 
                                              |              
▶ COMPLETE REQUEST HEADERS                    |                                                                                                                   
                                              |                                             
                                              |                                                                                                                                                                         
                                                                                                
                                                                                                    
                                                  lines nums  📄 copy              length: 11 bytes                                                    

--------------------------------------------------------------------------------------------------------------------------------
이처럼 Goedemorgen를 확인할 수 있는데 
Goedemorgen를 확인할 수 없다면 이를 중지하고 다시 시작하는 방법을 추천한다
그렇게 하면 새 값을 가져올 수 있을 것이다

이제 프항스어, 네덜란드어 또는 독일어에 대한 값을 추가하는 예제에도 도전해보기 바란다
꽤 간편하게 완수할 수 있는 예제일 것이다








이번 영상에선 국제화를 다뤄봤는데 
다른 사용자 언에에 대해 사용자 정의를 하려면 국제화로 처리해야 한다 
국제화는 보통 Accept-Language 헤더를 기반으로 처리되며 
소비자가 요청한 Accept-Language가 무엇인지에 따라 해당 특정 언어로 응답을 반환할 수 있다
