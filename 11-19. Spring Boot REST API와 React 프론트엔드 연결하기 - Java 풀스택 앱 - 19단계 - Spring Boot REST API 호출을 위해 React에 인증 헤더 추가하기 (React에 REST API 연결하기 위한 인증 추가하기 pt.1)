

지난 단계에서 우린 REST API에 보안을 활성화했고 
이번 단계에선 프론트엔드를 백엔드에 연결해보자

그럼 프론트엔드 리액트 애플리케이션으로 가서 로그아웃을 해보자, 그리고 다시 로그인한다
로그인이 작동할 건데 그럼 Call Hello World를 클릭해보자

--------------------------------------------------------------------------------------------


🌎 http://localhost:3000/welcome/in28minutes 사이트화면 ==>

(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  



          in28minutes  Home  Todos                                            Logout
     ___________________________________________________________________________________

                                    Welcome in28minutes

                                Manage Your todos - Go here
                                    __________________
                                   | Call Hello World |
                                    ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾

--------------------------------------------------------------------------------------------
  Elements  Console  Sources Network  Performance      >>                       🔅  ⁞  x
            ‾‾‾‾‾‾‾
-------------------------------------------------------------------------------------------
 ❌ Access to XMLHttpRequest at                                          in28minutes:1
    'http://localhost:8080/hello-world/path-variable/Ranga' from 
     origin 'http://localhost:3000' has been blocked by CORS 
     policy: No 'Access-Control-Allow-Origin' header is present on 
     the requested resource.
 ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                                                               WelcomeComponent.jsx:28
  ▶ AxiosError {message: 'Network Error', name: 'AxiosError', 
    code: 'ERR_NETWORK', config: {…}, request: XMLHttpRequest, …}

 ❌ ▶ GET                                                   HelloWorldApiService.js:17
     http://localhost:8080/hello-world/path-variable/Ranga 
     net::ERR_FAILED 401 (Unauthorized)     
--------------------------------------------------------------------------------------------      

오류이다
어떤 오류가 났는지 볼까?
이 URL에서 오리진으로부터의 XMLHttpRequest에 대한 액세스가 차단되었다
Network Error와 AxiosError도 나왔지 message: 'Network Error', name: 'AxiosError'
이렇게 차단된 이유는 이 API들이 모두 보호되고 있기 때문이지 
우린 이 모든 요청 호출에 기본 인증 헤더를 전송해야 한다 

예를 들면 Call Hello World의 경우에
너는 기본 인증 헤더를 받아서 그걸 전송할 수 있어야 할 것이다
그럼 실제로 프론트엔드 애플리케이션으로 가보자   

WelcomeComponent.jsx로 가보겠다
여기서 우린 retrieveHelloWorldPathVariable()를 호출하고 있지
그 메서드로 가보면
--------------------------      
export const retrieveHelloWorldPathVariable 
        = (username) => apiClient.get(`/hello-world/path-variable/${username}`)
--------------------------
여기에 너는 인증 헤더도 넣어주어야 한다
  
------------------------------------------------------------------------------------------------------------------

⏺ vsc


⏺ HelloWorldApiService.js


  
import axios from 'axios'


// export function retrieveHelloWorldBean() {
//     return axios.get('http://localhost:8080/hello-world-bean')
// }

const apiClient = axios.create(
    {
        baseURL: 'http://localhost:8080'
    }
)

export const retrieveHelloWorldBean 
        = () => apiClient.get('/hello-world-bean')

export const retrieveHelloWorldPathVariable 
          //1: 그럼 여기 이 메서드에 넌 이렇게 해줄 수 있다, 즉 객체로 만들고 
  = (username) => apiClient.get(`/hello-world/path-variable/${username}`, {
    //1-1: 이 객체의 일부로서 너는 Authorization이라는 걸 넣어줄 수 있다 그럼 headers:{}라고 하고
    headers:{
      //1-2: Authorization이라고 해줄 수 있지, 그리고 우리가 전송하려는 인증 헤더는 뭐지?
      Authorization:
    }
  })
------------------------------------------------------------------------------------------------------------------ 

우리가 전송하려는 인증 헤더는   
Talend API Tester로 가서 받을 수 있다   

--------------------------------------------------------------------------------------------------------------------------------

🖇 Talend API Tester 화면 ==>    (더 자세한건 크롬 확장프로그램 Talend API Tester 실행해서 확인..)

  METHOD                SCHEME :// HOST [ ":" PORT ] [ PATH [ "?" QUERY ]]
  ______________       ____________________________________________________________    ___________________
 | POST     | ▼  |    |    http://localhost:8080/users/in28minutes/todos           |  |  ✈ Send       | ▽ |
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾       ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾    ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                        ▶ QUERY PARAMETERS
  HEADERS   ⬇                   | Form ▼ |   ◀ | ▶  BODY                                   | Text ▼ |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾     |   ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
   _______________     __________________      |    
☑ | Accept        | : |application/json  | x   |     {                         
   ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾     ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾      |      "username": "in28minutes",
   _______________     __________________      |      "description": "Learn To Dance",
☑ | Content-Type  | : |application/json  | x   |      "targetDate": "2033-08-04",                       
   ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾     ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾      |      "done": false  
   _______________     __________________      |      }
☑ | Authorization | : |Basic aW4yOG1pbnV0| x 🗝|                             
   ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾     ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾      |                                     
  ______________                               |                                 
 ( + Add header )  🗝 Add authorization     🗑  |                                  
  ‾‾‾‾‾‾‾‾‾‾‾‾‾‾                               |       
                                               |                
                                               |      
                                               |    ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                                                   Text JSON XML HTML | Format Body | ☑ Enable body evaluation

                                   

--------------------------------------------------------------------------------------------------------------------------------

  여기서 Authorization 부분을 복사해서 VSC에 붙여넣을 수 있지 (Basic aW4yOG1pbnV0... 이부분) 

------------------------------------------------------------------------------------------------------------------

⏺ vsc


⏺ HelloWorldApiService.js



import axios from 'axios'


// export function retrieveHelloWorldBean() {
//     return axios.get('http://localhost:8080/hello-world-bean')
// }

const apiClient = axios.create(
    {
        baseURL: 'http://localhost:8080'
    }
)

export const retrieveHelloWorldBean 
        = () => apiClient.get('/hello-world-bean')

export const retrieveHelloWorldPathVariable 
        = (username) => apiClient.get(`/hello-world/path-variable/${username}`, {
            headers:{
                //2: 이렇게 너는 Basic으로 시작하는 이 텍스트를 붙여 넣을 수 있지, 이건 인코딩된 형태의 사용자 ID와 패스워드고
                Authorization: 'Basic aW4yOG1pbnV0ZXM6ZHVtbXk='
            }
        })
------------------------------------------------------------------------------------------------------------------  

이제 니가 Call Hello World를 클릭하면 

--------------------------------------------------------------------------------------------


🌎 http://localhost:3000/welcome/in28minutes 사이트화면 ==>

(title 명)
  
Todo App                |
‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾  



          in28minutes  Home  Todos                                            Logout
     ___________________________________________________________________________________

                                    Welcome in28minutes

                                Manage Your todos - Go here
                                    __________________
                                   | Call Hello World |
                                    ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾

--------------------------------------------------------------------------------------------
  Elements  Console  Sources Network  Performance      >>                       🔅  ⁞  x
            ‾‾‾‾‾‾‾
-------------------------------------------------------------------------------------------
 ❌ Access to XMLHttpRequest at                                          in28minutes:1
    http://localhost:8080/hello-world/path-variable/Ranga' from 
    origin 'http://localhost:3000' has been blocked by CORS 
    policy: Response to preflight request doesn't pass access 
    control check: No 'Access-Control-Allow-Origin' header is 
    present on the requested resource.
 ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                                                               WelcomeComponent.jsx:28
  ▶ AxiosError {message: 'Network Error', name: 'AxiosError', 
    code: 'ERR_NETWORK', config: {…}, request: XMLHttpRequest, …}

 ❌ ▶ GET                                                   HelloWorldApiService.js:17
     http://localhost:8080/hello-world/path-variable/Ranga 
     net::ERR_FAILED     
--------------------------------------------------------------------------------------------  
      
오류가 나는 걸 볼 수 있다  
새로운 오류를 보면, 프리플라이트 요청에 대한 응답이 액세스 제어 체크를 통과하지 못했다고 나오지
(Response to preflight request doesn't pass access control check)
