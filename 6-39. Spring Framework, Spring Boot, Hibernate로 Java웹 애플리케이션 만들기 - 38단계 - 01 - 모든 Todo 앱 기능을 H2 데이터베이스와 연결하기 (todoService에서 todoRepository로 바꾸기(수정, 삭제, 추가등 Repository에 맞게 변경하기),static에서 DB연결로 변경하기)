

이번 단계는 DB에 연결, 삭제, 업데이트, 추가를 해보겠다 그럼 시작해 보겠다
우리의 TodoControllerJpa 클래스로 가보자
비활성화된 TodoController는 변경하지 않았는지 확인하고 list-todos 다음 메서드로 가보자
다음 메서드는 showNewTodoPage()이고

----------------------------------------------------------------------------------------------------------------------



⏺ TodoControllerJpa 클래스파일




package com.firstapplication.springboot.myfirstwebapp.todo;

import java.time.*;
import java.util.*;

import org.springframework.security.core.*;
import org.springframework.security.core.context.*;
import org.springframework.stereotype.*;
import org.springframework.ui.*;
import org.springframework.validation.*;
import org.springframework.web.bind.annotation.*;

import jakarta.validation.*;

@Controller
@SessionAttributes("name")
public class TodoControllerJpa {

	public TodoControllerJpa(TodoService todoService, TodoRepository todoRepository) {
		super();
		this.todoService = todoService;
		this.todoRepository = todoRepository;
	}
	
	private TodoService todoService;
	

	private TodoRepository todoRepository;
	
	@RequestMapping("list-todos")
	public String listAllTodos(ModelMap model) {
		String username = getLoggedInUsername(model);
		
		List<Todo> todos = todoRepository.findByUsername(username);
		model.addAttribute("todos", todos);
		
		return "listTodos";
	}

	
	//GET, POST

  //1: 여기서 Service를 사용하지 않기 때문에 영향을 받지 않고 있다, 그럼 addNewTodo()메서드로 가보자 //1-1: addNewTodo()메서드로..
	@RequestMapping(value="add-todo",method=RequestMethod.GET)
	public String showNewTodoPage(ModelMap model) {
		String username = getLoggedInUsername(model);
		Todo todo = new Todo(0, username, "", LocalDate.now().plusYears(1), false);
		model.put("todo", todo);
		return "todo";
	}

  //1-1: 이 메서드는 너가 새로운 Todo를 추가할 때 호출되는 메서드이다, 많은 것들이 여기서 실행되는 걸 볼 수 있고
	@RequestMapping(value="add-todo",method=RequestMethod.POST)
	public String addNewTodo(ModelMap model, @Valid Todo todo, BindingResult result) {
		
		if(result.hasErrors()) {
			return "todo";
		}
		
		String username = getLoggedInUsername(model);
  //1-3:그럼 여기서 todo로 유입되는 값인 todo를 쓰고, 이어서 .setUsername()이라고 하고 username을 넣어줄 것이다, 이렇게 우리는 Todo Bean에 들어가는 모든 값을 설정하고 있다 왜지?
  //왜 우리는 모든 값을 Todo Bean에 넣고 있을까? 왜냐면 TodoRepository는 모든 속성을 받는 메서드가 없기 때문이다, TodoRepository의 save() 메서드는 todo를 입력값으로 받을 거고 그럼 우리는 모든 값을 설정해서 todo에 넣고, todoRepositorty.save()하고 해준다 
  todo.setUsername(username);
  todoRepository.save(todo);

  //1-4:이제 이 아래를 삭제할 수 있다, 그건 더 이상 필요하지 않고 이걸 저장한다
  //1-4 계속: 여기서 우린 username을 todo에 설정해 넣고 그걸 저장하고 있다 앞에서 우리가 메서드를 작성할때는 개별 속성을 파라미터로 받았다, ❗ 🔵권장 방식: 하지만 todoRsponsitory에서 권장되는 저장 방식은 todo를 올바른 값으로 채우고 간단히 save()메서드를 호출하는 방식이다 ❗ 우린 여기서 그걸 하고있고 그럼 웹사이트로 가서 Add Todo를 클릭해보자 
  //1-2: 방금 확인한 건 LocalDate.now().plusYears(1)이다, 사용자가 선택한 값을 사용하지 않고 하드코딩된 값을 사용하고 있다 이걸 변경해보자
  //그럼 todo.getTargetDate()를 써야하고 , false도 todo.isDone()이라고 해준다, 그럼 이제 설정되지 않은 건 username뿐이다 다른 모든 값은 todo에서 선택되고 있다
//		todoService.addTodo(username, todo.getDescription(), 
//				todo.getTargetDate(), todo.isDone());
		
		return "redirect:list-todos";
	}
	
	@RequestMapping("delete-todo")
	public String deleteTodo(@RequestParam int id) {
		//Delete todo
		todoService.deleteById(id);
		
		return "redirect:list-todos";

	}
	
	
	@RequestMapping(value="update-todo", method=RequestMethod.GET)
	public String showUpdateTodoPage(@RequestParam int id, ModelMap model) {
		Todo todo = todoService.findById(id);
		model.addAttribute("todo",todo);
		return "todo";

	}
	
	@RequestMapping(value="update-todo",method=RequestMethod.POST)
	public String updateTodo(ModelMap model, @Valid Todo todo, BindingResult result) {
		
		if(result.hasErrors()) {
			return "todo";
		}
		
		String username = getLoggedInUsername(model);
		todo.setUsername(username);
		todoService.updateTodo(todo);
		
		return "redirect:list-todos";
	}
	
	private String getLoggedInUsername(ModelMap model) {
		Authentication authentication = 
				SecurityContextHolder.getContext().getAuthentication();
		
		return authentication.getName();
	}
	
}

----------------------------------------------------------------------------------------------------------------------
                                                                      |
                                                                      V
----------------------------------------------------------------------------------------------------------------------


http://localhost:8087/list-todos 페이지화면 ==>

‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
in28Minutes   Home Todos                         (베이지? 바탕)                                           Logout                                            
_______________________________________________________________________________________________________________


      Your Todos

      Description	                      Taget Date	   Is Done?
      ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                                                                                     _______________      _______________
      Get AWS Certified                       2025-05-12	   false            | Delete(노바탕) |   | Update (녹바탕) |
                                                                                     ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾      ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
      ---------------------------------------------------------------------------------------------------------
                                                                                     _______________      _______________
      Get Azure Certified	              2026-05-12	   false            | Delete(노바탕) |   | Update (녹바탕) |
                                                                                     ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾      ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
      ---------------------------------------------------------------------------------------------------------
                                                                                     _______________      _______________   
      Get GCP Certified	                      2025-05-12           false            | DELETE(노바탕) |   | Update (녹바탕) |
                                                                                     ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾      ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
      ---------------------------------------------------------------------------------------------------------
                                                                                     _______________      _______________
      Get Fullstack Certified                 2025-05-12	   false            | Delete(노바탕) |   | Update (녹바탕) |
                                                                                     ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾      ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
      ---------------------------------------------------------------------------------------------------------
      _________________
     | Add Todo(녹바탕) |
      ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾

----------------------------------------------------------------------------------------------------------------------
Add Todo를 클릭해보자                                                                      |
                                                                                          V
----------------------------------------------------------------------------------------------------------------------

http://localhost:8087/add-todo 페이지 화면 ==>


‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
in28Minutes   Home Todos                         (베이지? 바탕)                                           Logout                                            
_______________________________________________________________________________________________________________

      Enter Todo Details
                    _______________________   
      Description  |Learn to Dance         |     
                    ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾   
                    _______________________   
      Target Date  |2025-06-30             |     
                    ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾   

       ________     
      | 제  출 |
       ‾‾‾‾‾‾‾‾
----------------------------------------------------------------------------------------------------------------------
예를 들어 Learn to Dance라고 해보자 그리고 목표 날짜를 2025년 6월 30일로 해보자                |
                                                                                           V
----------------------------------------------------------------------------------------------------------------------


http://localhost:8087/list-todos 페이지화면 ==>

‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
in28Minutes   Home Todos                         (베이지? 바탕)                                           Logout                                            
_______________________________________________________________________________________________________________


      Your Todos

      Description	                      Taget Date	   Is Done?
      ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                                                                                     _______________      _______________
      Learn to Dance                       2025-06-30	   false            | Delete(노바탕) |   | Update (녹바탕) |
                                                                                     ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾      ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
      ---------------------------------------------------------------------------------------------------------
                                                                                     _______________      _______________
      Get AWS Certified                       2025-05-12	   false            | Delete(노바탕) |   | Update (녹바탕) |
                                                                                     ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾      ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
      ---------------------------------------------------------------------------------------------------------
                                                                                     _______________      _______________
      Get Azure Certified	              2026-05-12	   false            | Delete(노바탕) |   | Update (녹바탕) |
                                                                                     ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾      ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
      ---------------------------------------------------------------------------------------------------------
                                                                                     _______________      _______________   
      Get GCP Certified	                      2025-05-12           false            | DELETE(노바탕) |   | Update (녹바탕) |
                                                                                     ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾      ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
      ---------------------------------------------------------------------------------------------------------
                                                                                     _______________      _______________
      Get Fullstack Certified                 2025-05-12	   false            | Delete(노바탕) |   | Update (녹바탕) |
                                                                                     ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾      ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
      ---------------------------------------------------------------------------------------------------------
      _________________
     | Add Todo(녹바탕) |
      ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾

----------------------------------------------------------------------------------------------------------------------
Learn to Dance가 나오고 2025년 6월 30일이 나왔다 좋다

새로운 Todo를 추가하는 메서드를 이렇게 완성했고 이제 Todo 삭제로 넘어가보자

----------------------------------------------------------------------------------------------------------------------



⏺ TodoControllerJpa 클래스파일




package com.firstapplication.springboot.myfirstwebapp.todo;

import java.time.*;
import java.util.*;

import org.springframework.security.core.*;
import org.springframework.security.core.context.*;
import org.springframework.stereotype.*;
import org.springframework.ui.*;
import org.springframework.validation.*;
import org.springframework.web.bind.annotation.*;

import jakarta.validation.*;

@Controller
@SessionAttributes("name")
public class TodoControllerJpa {

	public TodoControllerJpa(TodoService todoService, TodoRepository todoRepository) {
		super();
		this.todoService = todoService;
		this.todoRepository = todoRepository;
	}
	
	private TodoService todoService;
	

	private TodoRepository todoRepository;
	
	@RequestMapping("list-todos")
	public String listAllTodos(ModelMap model) {
		String username = getLoggedInUsername(model);
		
		List<Todo> todos = todoRepository.findByUsername(username);
		model.addAttribute("todos", todos);
		
		return "listTodos";
	}

	
	//GET, POST
	@RequestMapping(value="add-todo",method=RequestMethod.GET)
	public String showNewTodoPage(ModelMap model) {
		String username = getLoggedInUsername(model);
		Todo todo = new Todo(0, username, "", LocalDate.now().plusYears(1), false);
		model.put("todo", todo);
		return "todo";
	}
	
	@RequestMapping(value="add-todo",method=RequestMethod.POST)
	public String addNewTodo(ModelMap model, @Valid Todo todo, BindingResult result) {
		
		if(result.hasErrors()) {
			return "todo";
		}
		
		String username = getLoggedInUsername(model);
		todo.setUsername(username);
		todoRepository.save(todo);
		
//		todoService.addTodo(username, todo.getDescription(), 
//				todo.getTargetDate(), todo.isDone());
		
		return "redirect:list-todos";
	}

	@RequestMapping("delete-todo")
	public String deleteTodo(@RequestParam int id) {
		//Delete todo

    //2: Todo삭제는 정말 쉽다 똑같은 메소드를 쓰면 된다, todoRepository.deleteById() 라고 하고 id를 넣어주면 된다, 그리고 이건 삭제할 수 있다, 저장하고 웹사이트를 새로고침해보자
    todoRepository.deleteById(id);

//		todoService.deleteById(id);
		
		return "redirect:list-todos";

	}
	
	
	@RequestMapping(value="update-todo", method=RequestMethod.GET)
	public String showUpdateTodoPage(@RequestParam int id, ModelMap model) {
		Todo todo = todoService.findById(id);
		model.addAttribute("todo",todo);
		return "todo";

	}
	
	@RequestMapping(value="update-todo",method=RequestMethod.POST)
	public String updateTodo(ModelMap model, @Valid Todo todo, BindingResult result) {
		
		if(result.hasErrors()) {
			return "todo";
		}
		
		String username = getLoggedInUsername(model);
		todo.setUsername(username);
		todoService.updateTodo(todo);
		
		return "redirect:list-todos";
	}
	
	private String getLoggedInUsername(ModelMap model) {
		Authentication authentication = 
				SecurityContextHolder.getContext().getAuthentication();
		
		return authentication.getName();
	}
	
}

----------------------------------------------------------------------------------------------------------------------
                                                                                           |
                                                                                           V
----------------------------------------------------------------------------------------------------------------------


http://localhost:8087/list-todos 페이지화면 ==>

‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
in28Minutes   Home Todos                         (베이지? 바탕)                                           Logout                                            
_______________________________________________________________________________________________________________


      Your Todos

      Description	                      Taget Date	   Is Done?
      ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                                                                                     _______________      _______________
      Get AWS Certified                       2025-05-12	   false            | Delete(노바탕) |   | Update (녹바탕) |
                                                                                     ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾      ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
      ---------------------------------------------------------------------------------------------------------
                                                                                     _______________      _______________
      Get Azure Certified	              2026-05-12	   false            | Delete(노바탕) |   | Update (녹바탕) |
                                                                                     ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾      ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
      ---------------------------------------------------------------------------------------------------------
                                                                                     _______________      _______________   
      Get GCP Certified	                      2025-05-12           false            | DELETE(노바탕) |   | Update (녹바탕) |
                                                                                     ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾      ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
      ---------------------------------------------------------------------------------------------------------
                                                                                     _______________      _______________
      Get Fullstack Certified                 2025-05-12	   false            | Delete(노바탕) |   | Update (녹바탕) |
                                                                                     ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾      ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
      ---------------------------------------------------------------------------------------------------------
      _________________
     | Add Todo(녹바탕) |
      ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾

----------------------------------------------------------------------------------------------------------------------
그리고 이것들 중에 하나를 삭제할 수 있다                                           |
AWS를 삭제하면 AWS가 삭제되었고                                                   V
----------------------------------------------------------------------------------------------------------------------


http://localhost:8087/list-todos 페이지화면 ==>

‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
in28Minutes   Home Todos                         (베이지? 바탕)                                           Logout                                            
_______________________________________________________________________________________________________________


      Your Todos

      Description	                      Taget Date	   Is Done?
      ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
                                                                                     _______________      _______________   
      Get GCP Certified	                      2025-05-12           false            | DELETE(노바탕) |   | Update (녹바탕) |
                                                                                     ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾      ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
      ---------------------------------------------------------------------------------------------------------
                                                                                     _______________      _______________
      Get Fullstack Certified                 2025-05-12	   false            | Delete(노바탕) |   | Update (녹바탕) |
                                                                                     ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾      ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾
      ---------------------------------------------------------------------------------------------------------
      _________________
     | Add Todo(녹바탕) |
      ‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾‾

----------------------------------------------------------------------------------------------------------------------
Azure를 삭제하면 Azure도 삭제되었다
원한다면 나머지도 삭제할 수 있고
이렇게 삭제 기능도 마쳤다

